Question	Answer	Marks
Explain meaningfulness in measurement	Measurement for understanding, control and improvement:-  -Measurement help us to understand what is happening during the development or maintenance.  -Measurement allows us to control what is happening on our projects.  -Measurement encourages us to improve our process and products.	1
Explain meaningfulness in measurement	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”	1
Explain meaningfulness in measurement	Depending on the method, measurements are classified into two types: Units of Measurements:  For any measurement, a number and unit are required. When we say that the time is 5 second, then we mean that the said time is 5 times a certain standard time called 1 second.  A unit is a selected magnitude of a physical variable in terms of which other magnitudes of the same variable can be expressed. Measurement without unit has no meaning.	1
Explain meaningfulness in measurement	Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -Measurement in weather system are used to predict weather.	1
Explain meaningfulness in measurement	Measurement is the assignment of a number to a characteristic of an object or event, which can be compared with other objects or events. The scope and application of measurement are dependent on the context and discipline.  -Taking proper medicine. If you an illness (whether serious or minor) you need to take your medicine and take it in the proper amount. If you take too little or too much then you are not going to get the proper benefit from it.  -Cooking properly. Cooking of all forms is based on proper attention to measurement.	1
Explain the objectives for software measurement with the perspective of manager and engineer	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.	1
Explain the objectives for software measurement with the perspective of manager and engineer	-Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance.	1
Explain the objectives for software measurement with the perspective of manager and engineer	If your developers are not producing high-quality code or not meeting architecture standards, then numerous problems are likely to surface during or after application implementation. These include increased IT costs, additional maintenance efforts, and reduced security within a complex infrastructure. Software measurement and metrics provide an accurate, objective approach to evaluating these key factors. By having objective metrics, you can more easily identify improvement areas and monitor each effort made toward better development practices.	1
Explain the objectives for software measurement with the perspective of manager and engineer	Software Metrics is a collective term used to describe the very wide range of activities concerned with measurement in software engineering  Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined unambiguous rules.	1
Explain the objectives for software measurement with the perspective of manager and engineer	All of these entities have internal as well as external entities.  Internal attributes are those that can be measured purely in terms of the process, product, or resources itself. For example: Size, complexity, dependency among modules.  External attributes are those that can be measured only with respect to its relation with the environment. For example: The total number of failures experienced by a user, the length of time it takes to search the database and retrieve information.	1
What is representational theory of measurement Explain in detail	There are many representational theory for measurement, some of them are as given below  (i)Empirical relation:-There are three types of Empirical relation depending upon the relation we define either on single element (entity) of a set or on collection of elements.  (a)Unary relation:-We define Empirical relation on individual (single) element or entity.	1
What is representational theory of measurement Explain in detail	(i)Representation condition of measurement:-  -Representation condition states that a measurement mapping M should map entities in numbers and Empirical relations in numerical relation in such a way that the Empirical relations are maintained and are maintained by the mathematical relations.  -Here, In the above example of height of two people, the “taller than” is mapped to the numerical relation “>”.	1
What is representational theory of measurement Explain in detail	The Representational Condition of Measurement:-  The representational condition asserts that a measurement mapping (M) must map entities into numbers, and empirical relations into numerical relations in such a way that the empirical relations preserve and are preserved by numerical relations.	1
What is representational theory of measurement Explain in detail	"In the representational theory, measurement is defined as ""the correlation of numbers with entities that are not numbers”.  The concept of measurement is often misunderstood as merely the assignment of a value, but it is possible to assign a value in a way that is not a measurement in terms of the requirements of additive conjoint measurement."	1
What is representational theory of measurement Explain in detail	The process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined rules.  The  idea behind the representational theory of measurement is elaborated in the following observations.	1
what is software metrics Explain scope of software metrics in detail	Software metrics is a term that provides many activities, all of which involves some degree of software measurement:-  (i)Cost and effort estimation:-  -We have to use cost and effort estimation models to predict the cost of project during earlier phases of software development life cycle.  -for example Boehm’s Cocomo model.	1
what is software metrics Explain scope of software metrics in detail	(i)Performance evaluation and models:-  -Performance is one of the most important feature of quality.  -The evaluation of the performance includes characteristics such as response time and completion rates.  -The evaluation of the performance covers the internal working of system as well as efficiency of the complexity of the algorithms.	1
what is software metrics Explain scope of software metrics in detail	(i)Quality Models and measures:-  -Quality models like Bohems quality model and MaCall quality model, and productivity models can be used together for higher accuracy.  -These models almost always are constructed in a tree-like manner with the upper branches indicating the highest level quality factors of any software product such as reliability, usability, etc.  - every quality factor consists of low level criteria like structure, traceability, etc.  - criteria helps in understanding and measuring the factors.	1
what is software metrics Explain scope of software metrics in detail	A software metric is a measure of software characteristics which are quantifiable or countable. Software metrics are important for many reasons, including measuring software performance, planning work items, measuring productivity, and many other uses.	1
what is software metrics Explain scope of software metrics in detail	Software development metrics are quantitative measurements of a software product or project, which can help management understand software performance, quality, or the productivity and efficiency of software teams.  Types of Software Metrics  Formal code metrics—Such as Lines of Code (LOC), code complexity, Instruction Path Length, etc. In modern development environments, these are considered less useful.	1
Explain meaningfulness in measurement	“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  Measurement making the things measurable:-  -Measuring makes nonmeasurable things measurable.	2
Explain meaningfulness in measurement	Measurement making the things measurable:-  -Measuring makes not measurable things measurable.  -Measuring the unmeasurable helps to understand the particular entities and attributes, it also helps in making engineering more powerful.	2
Explain meaningfulness in measurement	Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  When measurements are taken directly using tools, instruments, or other calibrated measuring devices, they are called direct measurements e.g. Measurement of the length of a table by meter scale.  Indirect Measurement:  When the measurement must be done through a formula or other calculations, the measurement is called indirect measurement e.g. Measurement of the radius of the Earth.	2
Explain meaningfulness in measurement	Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -Measurement in weather system are used to predict weather.  Units of Measurements:  For any measurement, a number and unit are required. When we say that the time is 5 second, then we mean that the said time is 5 times a certain standard time called 1 second.  A unit is a selected magnitude of a physical variable in terms of which other magnitudes of the same variable can be expressed. Measurement without unit has no meaning.	2
Explain meaningfulness in measurement	Measurement is the assignment of a number to a characteristic of an object or event, which can be compared with other objects or events. The scope and application of measurement are dependent on the context and discipline.  -Taking proper medicine. If you an illness (whether serious or minor) you need to take your medicine and take it in the proper amount. If you take too little or too much then you are not going to get the proper benefit from it.  -Purchasing clothes. Now, how important could measurements be when selecting clothes? After all, to look good in clothing the main thing you need to pay attention to is style, right? Well, if you weigh 200lbs you aren't going to look stylish in an extra small shirt. Clothing is all based on size and proper fitting which are, of course, variants of measurement.	2
Explain the objectives for software measurement with the perspective of manager and engineer	“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  -Entity is an object or events in the real world.  -An attribute is a feature or property of an entity (such as color of room, the cost of journey or elapsed time of testing phase).  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.	2
Explain the objectives for software measurement with the perspective of manager and engineer	-Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance.  -Measurement in software is used in all above activities, so each activity is understood and controlled.  -In such a way the products quality is measured and is priced according to it.	2
Explain the objectives for software measurement with the perspective of manager and engineer	Productivity  Code Quality  Code Complexity  Software Risk  Technical Debt  Software Size  Compliance to Standards and Regulations  If your developers are not producing high-quality code or not meeting architecture standards, then numerous problems are likely to surface during or after application implementation. These include increased IT costs, additional maintenance efforts, and reduced security within a complex infrastructure. Software measurement and metrics provide an accurate, objective approach to evaluating these key factors. By having objective metrics, you can more easily identify improvement areas and monitor each effort made toward better development practices.	2
Explain the objectives for software measurement with the perspective of manager and engineer	Software Metrics is a collective term used to describe the very wide range of activities concerned with measurement in software engineering  Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined unambiguous rules.  Once measures are collected they are converted into metrics for use. IEEE defines metric as 'a quantitative measure of the degree to which a system, component, or process possesses a given attribute.	2
Explain the objectives for software measurement with the perspective of manager and engineer	The framework for software measurement is based on four principles −  Classifying the entities to be examined  Determining relevant measurement goals  Identifying the level of maturity that the organization has reached  Classifying the Entities to be Examined  In software engineering, mainly three classes of entities exist. They are −  Processes  Products  Resources	2
What is representational theory of measurement Explain in detail	There are many representational theory for measurement, some of them are as given below  (i)Empirical relation:-There are three types of Empirical relation depending upon the relation we define either on single element (entity) of a set or on collection of elements.  (a)Unary relation  (b)Binary relation  (c)Ternary relation  (ii)Rules of mapping:-  -When we have map the attribute of entity from real world to mathematical world, we have many choices for mapping and range.  -Mapping may be different depending upon conventions we adopt.  (iii)Representation condition of measurement:-  -Representation condition states that a measurement mapping M must map entities into numbers and Empirical relations into numerical relation (mathematical relation) in such a way that Empirical relations are preserved and are preserved by mathematical relations.	2
What is representational theory of measurement Explain in detail	There are several types of representational theory for measurement and some of them are given below  (i)Empirical relation:-In Empirical relation there are three types of relations depending on the relation we define on single element of a set or on collection  of elements.  (ii) Rules of mapping :-  -Real world is a domain of mapping and mathematical words is range of mapping.  (iii)Representation condition of measurement:-  -Representation condition states that a measurement mapping M should map entities in numbers and Empirical relations in numerical relation in such a way that the Empirical relations are maintained and are maintained by the mathematical relations.	2
What is representational theory of measurement Explain in detail	Measurement tells us the rules laying the ground work for developing and reasoning about all kinds of measurement. It is the mapping from the empirical world to the formal relational world. Consequently, a measure is the number or symbol assigned to an entity by this mapping in order to characterize an entity.  The Representational Condition of Measurement:-  The representational condition asserts that a measurement mapping (M) must map entities into numbers, and empirical relations into numerical relations in such a way that the empirical relations preserve and are preserved by numerical relations.	2
What is representational theory of measurement Explain in detail	"In the representational theory, measurement is defined as ""the correlation of numbers with entities that are not numbers”. The most technically elaborated form of representational theory is also known as additive conjoint measurement. In this form of representational theory, numbers are assigned based on correspondences or similarities between the structure of number systems and the structure of qualitative systems. A property is quantitative if such structural similarities can be established. In weaker forms of representational theory, such as that implicit within the work of Stanley Smith Stevens, numbers need only be assigned according to a rule."	2
What is representational theory of measurement Explain in detail	The process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined rules.  The  idea behind the representational theory of measurement is elaborated in the following observations.  EMPIRICAL RELATIONS SYSTEM       The aim is to be able to compare entities. However, it is not automatic that any two   entities E  1   and E  2   are comparable. A comparison between E  1   and E  2   is about relating E  1     and E  2   with respect to some (salient) attribute.      Definition [Empirical Relations System]. Let E is the set of entities and R  E   is the set of   empirical relations for a (salient) attribute A. Then, an empirical relations system is a   couple (E, R  E  ).      The purpose of (E, R  E  ) is to define the intuitive meaning of A by identifying the   empirical relations that hold for A.      A relation can be defined on a single element of a set, or a collection of elements of a   set.      5.1. ORDERS OF RELATIONS      The relations can be classified in different ways, including whether they are unary,   binary, ternary, and so on.      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”.  EMPIRICAL RELATIONS SYSTEM       The aim is to be able to compare entities. However, it is not automatic that any two   entities E  1   and E  2   are comparable. A comparison between E  1   and E  2   is about relating E  1     and E  2   with respect to some (salient) attribute.      Definition [Empirical Relations System]. Let E is the set of entities and R  E   is the set of   empirical relations for a (salient) attribute A. Then, an empirical relations system is a   couple (E, R  E  ).      The purpose of (E, R  E  ) is to define the intuitive meaning of A by identifying the   empirical relations that hold for A.      A relation can be defined on a single element of a set, or a collection of elements of a   set.      5.1. ORDERS OF RELATIONS      The relations can be classified in different ways, including whether they are unary,   binary, ternary, and so on.      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”.  Empirical relation system   The aim is to be able to compare entities. However, it is not automatic that any two entities E1 and E2 are comparable. A comparison between E1 and E2 is about relating E1 and E2 with respect to some (salient) attribute.	2
what is software metrics Explain scope of software metrics in detail	Software metrics is a term that provides many activities, all of which involves some degree of software measurement:-  (i)Cost and effort estimation:-  -We have to use cost and effort estimation models to predict the cost of project during earlier phases of software development life cycle.  -for example Boehm’s Cocomo model, Putnam’s SLIM model,  Regression based model, etc.  (ii)Productivity models and measures:-  -There are several measures and models or assessing the staff productivity during software process and indifferent environments.  -The productivity is a function of value and cast; each is then decomposed into other aspects expressed in measurable form.	2
what is software metrics Explain scope of software metrics in detail	There are many types of software metrics, Software metrics are used to measure the quality of the software.  (i) Productivity models and measures:-  -There are many measures and models or evaluating the staff productivity at the time of process and common environments.  -The productivity is a function of value and cost; they are later divided into other aspects which can be measured.  (ii) Evaluation of methods and tools:-  -New methods and tools are used by many organization to make the product more cheaper.  -The organizations perform experiments where they run case studies or administrator surveys to help them decide if a tool or a method is making a positive effect in their particular situation.  -This evaluation is dependent upon good experimental design, identifying the factors that can affect the outcome and correct measurement if factor attributes.	2
what is software metrics Explain scope of software metrics in detail	Software metrics refer to the standard of measure which holds properties of  any software system or processes. It provides the following activities for this purpose-  (i)Management by metrics:-  - managing a software project requires a vital role of measurement.  - measurement-based charts are highly reliable for customers, users, and developers alike to track the project’s progress.  - several organizations determine a specific set of measurements and reporting methods to compare and contrast the project.  - it helps in making customers understand the project progress better even without any pre requisite knowledge in software terminology or jargon.  (ii)Evaluation of Methods and tools:-  - new methods and tools are devised by organizations to make products better and cheaper.  - these new methods and tools are tested, experimented and surveyed to decide the potential outcome it will make in the particular situation.  - this evaluation is carried out with good experimental design, appropriate identification of factors which affect outcome and proper measurements of factor attributes.  (iii)Data collection:-  - data collection is significant when it comes to the quality of any measurement program.	2
what is software metrics Explain scope of software metrics in detail	A software metric is a measure of software characteristics which are quantifiable or countable. Software metrics are important for many reasons, including measuring software performance, planning work items, measuring productivity, and many other uses.    Within the software development process, there are many metrics that are all related to each other. Software metrics are related to the four functions of management: Planning, Organization, Control, or Improvement.	2
what is software metrics Explain scope of software metrics in detail	Software development metrics are quantitative measurements of a software product or project, which can help management understand software performance, quality, or the productivity and efficiency of software teams.  Types of Software Metrics  Formal code metrics—Such as Lines of Code (LOC), code complexity, Instruction Path Length, etc. In modern development environments, these are considered less useful.  Developer productivity metrics—Such as active days, assignment scope, efficiency and code churn. These metrics can help you understand how much time and work developers are investing in a software project.	2
Explain meaningfulness in measurement	“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  Measurement for understanding, control and improvement:-  -Measurement help us to understand what is happening during the development or maintenance.	3
Explain meaningfulness in measurement	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement lets us understand the information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price of the products in the market.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.	3
Explain meaningfulness in measurement	Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  When measurements are taken directly using tools, instruments, or other calibrated measuring devices, they are called direct measurements e.g. Measurement of the length of a table by meter scale.  Indirect Measurement:  When the measurement must be done through a formula or other calculations, the measurement is called indirect measurement e.g. Measurement of the radius of the Earth.	3
Explain meaningfulness in measurement	Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -Measurement in weather system are used to predict weather.  Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  Direct measurement' refers to measuring exactly the thing that you are looking to measure.	3
Explain meaningfulness in measurement	Measurement is the assignment of a number to a characteristic of an object or event, which can be compared with other objects or events. The scope and application of measurement are dependent on the context and discipline.  -Taking proper medicine. If you an illness (whether serious or minor) you need to take your medicine and take it in the proper amount. If you take too little or too much then you are not going to get the proper benefit from it.  -Cooking properly. Cooking of all forms is based on proper attention to measurement. Can you bake a chicken at 600 degrees? Well, you can but the results would be pretty catastrophic! Could you may a cup of tea by dipping a tea bag into a teaspoon of warm water?  -Purchasing clothes. Now, how important could measurements be when selecting clothes? After all, to look good in clothing the main thing you need to pay attention to is style, right? Well, if you weigh 200lbs you aren't going to look stylish in an extra small shirt. Clothing is all based on size and proper fitting which are, of course, variants of measurement.	3
Explain the objectives for software measurement with the perspective of manager and engineer	“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?	3
Explain the objectives for software measurement with the perspective of manager and engineer	With the help of measurement we can get the information about attributes of entities.  -Entity is an objects like as person or room or even events such as journey or testing phase of software in the real world.  -An attribute is a feature, quality or property of an entity such as color of room, the cost of journey or elapsed time of testing phase.  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification.  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is also used in economics to determine prices of the products in the market.  -Measurement in radar system enables to detect aircraft as well as the submarines in water.	3
Explain the objectives for software measurement with the perspective of manager and engineer	Do you find development planning or improvement efforts to be less effective than expected? Are unexpected problems surfacing after release or during development? How many infrastructure problems are directly related to code quality or undetected risks? Software measurement is an engineering process meant to aid in assessing these areas:  Productivity  Code Quality  Code Complexity  Software Risk  Technical Debt  Software Size  Compliance to Standards and Regulations  If your developers are not producing high-quality code or not meeting architecture standards, then numerous problems are likely to surface during or after application implementation. These include increased IT costs, additional maintenance efforts, and reduced security within a complex infrastructure. Software measurement and metrics provide an accurate, objective approach to evaluating these key factors. By having objective metrics, you can more easily identify improvement areas and monitor each effort made toward better development practices.	3
Explain the objectives for software measurement with the perspective of manager and engineer	Software Metrics is a collective term used to describe the very wide range of activities concerned with measurement in software engineering  Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined unambiguous rules.  Once measures are collected they are converted into metrics for use. IEEE defines metric as 'a quantitative measure of the degree to which a system, component, or process possesses a given attribute.' The goal of software metrics is to identify and control essential parameters that affect software development. Other objectives of using software metrics are listed below:  -Measuring the size of the software quantitatively.  -Assessing the level of complexity involved.	3
Explain the objectives for software measurement with the perspective of manager and engineer	The framework for software measurement is based on four principles −  Classifying the entities to be examined  Determining relevant measurement goals  Identifying the level of maturity that the organization has reached  Classifying the Entities to be Examined  In software engineering, mainly three classes of entities exist. They are −  Processes  Products  Resources  All of these entities have internal as well as external entities.  Internal attributes are those that can be measured purely in terms of the process, product, or resources itself. For example: Size, complexity, dependency among modules.	3
What is representational theory of measurement Explain in detail	There are many representational theory for measurement, some of them are as given below  (i)Empirical relation:-There are three types of Empirical relation depending upon the relation we define either on single element (entity) of a set or on collection of elements.  (a)Unary relation:-We define Empirical relation on individual (single) element or entity.  (b)Ternary relation:- We define relation between more than two entities.  (ii)Rules of mapping:-  -Real world is the domain of mapping and mathematical world is range of mapping  (iii)Representation condition of measurement:-  -Representation condition states that a measurement mapping M must map entities into numbers and Empirical relations into numerical relation (mathematical relation) in such a way that Empirical relations are preserved and are preserved by mathematical relations.	3
What is representational theory of measurement Explain in detail	There are several types of representational theory for measurement and some of them are given below  (i)Empirical relation: In Empirical relation there are three types of relations depending on the relation we define on single element of a set or on collection  of elements.  (a)Unary relation  (b)Binary relation  (c)Ternary relation  (ii) Rules of mapping :-  -Real world is a domain of mapping and mathematical words is range of mapping.	3
What is representational theory of measurement Explain in detail	Measurement tells us the rules laying the ground work for developing and reasoning about all kinds of measurement. It is the mapping from the empirical world to the formal relational world.  Empirical Relations:-  If, , X is taller than Y. X, Y are much taller than Z.  Empirical relations can be unary, binary, ternary, etc.  X is tall, Y is not tall are unary relations.  X is taller than Y is a binary relation.  The Representational Condition of Measurement:-  The representational condition asserts that a measurement mapping (M) must map entities into numbers, and empirical relations into numerical relations in such a way that the empirical relations preserve and are preserved by numerical relations.	3
What is representational theory of measurement Explain in detail	"In the representational theory, measurement is defined as ""the correlation of numbers with entities that are not numbers”. The most technically elaborated form of representational theory is also known as additive conjoint measurement. In this form of representational theory, numbers are assigned based on correspondences or similarities between the structure of number systems and the structure of qualitative systems. A property is quantitative if such structural similarities can be established. In weaker forms of representational theory, such as that implicit within the work of Stanley Smith Stevens, numbers need only be assigned according to a rule.  The concept of measurement is often misunderstood as merely the assignment of a value, but it is possible to assign a value in a way that is not a measurement in terms of the requirements of additive conjoint measurement. One may assign a value to a person's height."	3
What is representational theory of measurement Explain in detail	The process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined rules.  The  idea behind the representational theory of measurement is elaborated in the following observations.  EMPIRICAL RELATIONS SYSTEM       The aim is to be able to compare entities. However, it is not automatic that any two   entities E  1   and E  2   are comparable. A comparison between E  1   and E  2   is about relating E  1     and E  2   with respect to some (salient) attribute.      Definition [Empirical Relations System]. Let E is the set of entities and R  E   is the set of   empirical relations for a (salient) attribute A. Then, an empirical relations system is a   couple (E, R  E  ).      The purpose of (E, R  E  ) is to define the intuitive meaning of A by identifying the   empirical relations that hold for A.      A relation can be defined on a single element of a set, or a collection of elements of a   set.      5.1. ORDERS OF RELATIONS      The relations can be classified in different ways, including whether they are unary,   binary, ternary, and so on.      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”.  EMPIRICAL RELATIONS SYSTEM       The aim is to be able to compare entities. However, it is not automatic that any two   entities E  1   and E  2   are comparable. A comparison between E  1   and E  2   is about relating E  1     and E  2   with respect to some (salient) attribute.      Definition [Empirical Relations System]. Let E is the set of entities and R  E   is the set of   empirical relations for a (salient) attribute A. Then, an empirical relations system is a   couple (E, R  E  ).      The purpose of (E, R  E  ) is to define the intuitive meaning of A by identifying the   empirical relations that hold for A.      A relation can be defined on a single element of a set, or a collection of elements of a   set.      5.1. ORDERS OF RELATIONS      The relations can be classified in different ways, including whether they are unary,   binary, ternary, and so on.      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”.  EMPIRICAL RELATIONS SYSTEM     The aim is to be able to compare entities. However, it is not automatic that any two entities E1 and E2 are comparable. A comparison between E1 and E2 is about relating E1 and E2 with respect to some (salient) attribute.    Definition. Let E is the set of entities and RE is the set of empirical relations for a (salient) attribute A. Then, an empirical relations system is a couple (E, RE).    The purpose of (E, RE) is to define the intuitive meaning of A by identifying the empirical relations that hold for A.    A relation can be defined on a single element of a set, or a collection of elements of a set.	3
what is software metrics Explain scope of software metrics in detail	Software metrics is a term that provides many activities, all of which involves some degree of software measurement:-  (i)Cost and effort estimation:-  -We have to use cost and effort estimation models to predict the cost of project during earlier phases of software development life cycle.  -for example Boehm’s Cocomo model, Putnam’s SLIM model,  (ii)Reliability models:-  -Reliability is one of the most important factor in quality model but we need to predict and measure reliability of product.  -Reliability indicates probability of failure free operation.  -We have several parametric reliability growth models to increase the reliability of product. For example, Moronda, Littlewood, Littlewood vorall and Non Homogenous poisons process (NHPP) model.  (iii)Performance evaluation and models:-  -Performance is one of the most aspect of quality.  -Performance evaluation includes characteristics such as response time and completion rates.  -Performance evaluation covers internal working  of system including efficiency of complexity of algorithm.	3
what is software metrics Explain scope of software metrics in detail	There are many types of software metrics, Software metrics are used to measure the quality of the software.  (i)Cost effort estimation:-  -In the cost effort estimation, we use the models to predict the cost of the project before starting the work of developing the software life cycle.  -Examples:- Bohem’s Cocomo model, Putnam’s model, Regression based model, etc.  (ii)Quality models and measures:-  -Quality models like the Bohem’s quality model and MaCall quality model are used with productivity models.  -These Models are constructed in a tree like fashion where the branches on the upper side contain the high level quality factors of the software product such as reliability, usability, user friendliness, etc.  -Each of the quality factor contains the low level criteria such as structure, traceability, etc.  -These low level criteria are easy to understand as  well as easy to measure the factors.  (iii)Structure and complexity:-  -The structural attributes of representation of software are measured which are available in advanced of execution.  -Structure and complexity attributes are used to predict the part of the system which are less reliable, difficult to test or which requires more maintenance than the other parts of the system.	3
what is software metrics Explain scope of software metrics in detail	(i)Performance evaluation and models:-  -Performance evaluation is an integral aspect of quality.  -Performance evaluation is a detailed observation of various factors, both internal and       external.  (ii)Quality Models and measures:-  -Quality models like Bohems quality model and MaCall quality model, and productivity models can be used together for higher accuracy.  -These models almost always are constructed in a tree-like manner with the upper branches indicating the highest level quality factors of any software product such as reliability, usability, etc.  - every quality factor consists of low level criteria like structure, traceability, etc.  - criteria helps in understanding and measuring the factors.  (iii)Reliability models:-  -Reliability functions as a significant factor is quality model, although it needs to be predicted and measured, therefore creating a specialization in itself in reliability modeling and prediction.  - reliability refers to the probability of failure free operation of any system.    - external system performance factors like response times and completion rates.   - internal factors like working of the efficacy of algorithms.  (iv)Structure and complexity :-  - the structural attributes of representation of software are measured which are available in advance of execution.  - the structural attributes help in prediction of the reliability, the difficulty and the requirement of maintenance of a part of any system.	3
what is software metrics Explain scope of software metrics in detail	(i)Performance evaluation and models:-  -Performance evaluation is an integral aspect of quality.  -Performance evaluation is a detailed observation of various factors, both internal and       external.  (ii)Quality Models and measures:-  -Quality models like Bohems quality model and MaCall quality model, and productivity models can be used together for higher accuracy.  -These models almost always are constructed in a tree-like manner with the upper branches indicating the highest level quality factors of any software product such as reliability, usability, etc.  - every quality factor consists of low level criteria like structure, traceability, etc.  - criteria helps in understanding and measuring the factors.  (ii)Reliability models:-  -Reliability functions as a significant factor is quality model, although it needs to be predicted and measured, therefore creating a specialization in itself in reliability modeling and prediction.  - reliability refers to the probability of failure free operation of any system.	3
what is software metrics Explain scope of software metrics in detail	Software development metrics are quantitative measurements of a software product or project, which can help management understand software performance, quality, or the productivity and efficiency of software teams.  Types of Software Metrics  Formal code metrics—Such as Lines of Code (LOC), code complexity, Instruction Path Length, etc. In modern development environments, these are considered less useful.  Developer productivity metrics—Such as active days, assignment scope, efficiency and code churn. These metrics can help you understand how much time and work developers are investing in a software project.  Agile process metrics—Such as lead time, cycle time and velocity. They measure the progress of a dev team in producing working, shipping-quality software features.	3
Explain meaningfulness in measurement	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  Measurement making the things measurable:-  -Measuring makes nonmeasurable things measurable.  -Measuring the unmeasurable improves our understanding of particular entities and attributes, making engineering more powerful.  Measurement in software engineering:-  -Software engineer describes the collection of techniques that apply on engineering approach to the construction and support of software product.  - Software engineer includes various activities like managing, planning, casting, analyzing, specifying, designing, testing and maintaining.  Measurement is used in all activities, so each activity is understood and controlled.	4
Explain meaningfulness in measurement	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement lets us understand the information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price of the products in the market.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose and determine what disease a patient is suffering from.  Measurement making the things measurable:-  -Measuring makes not measurable things measurable.	4
Explain meaningfulness in measurement	Measurement is that operation by which we compare a physical quantity with a unit chosen for that quantity. In science and engineering, we perform experiments. During experiments, we have to take readings. Thus all these experiments require some measurements to be made. During the production of mechanical products, we have to measure the parts so as to find whether the part is made as per the specifications. Thus measurements are necessary for production and quality control.  Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  When measurements are taken directly using tools, instruments, or other calibrated measuring devices, they are called direct measurements   Indirect Measurement:  When the measurement must be done through a formula or other calculations, the measurement is called indirect measurement.	4
Explain meaningfulness in measurement	Measurement is perhaps one of the most fundamental concepts in science. Without the ability to measure, it would be difficult for scientists to conduct experiments or form theories. Not only is measurement important in science and the chemical industry, it is also essential in farming, engineering, construction, manufacturing, commerce, and numerous other occupations and activities. The word “measurement” comes from the Greek word “metron,” which means “limited proportion.” Measurement is a technique in which properties of an object are determined by comparing them to a standard. Measurements require tools and provide scientists with a quantity.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -Measurement in weather system are used to predict weather.  Units of Measurements:  For any measurement, a number and unit are required. When we say that the time is 5 second, then we mean that the said time is 5 times a certain standard time called 1 second.  A unit is a selected magnitude of a physical variable in terms of which other magnitudes of the same variable can be expressed. Measurement without unit has no meaning.	4
Explain meaningfulness in measurement	Measurement is the assignment of a number to a characteristic of an object or event, which can be compared with other objects or events. The scope and application of measurement are dependent on the context and discipline.  -Taking proper medicine. If you an illness (whether serious or minor) you need to take your medicine and take it in the proper amount. If you take too little or too much then you are not going to get the proper benefit from it.  -Cooking properly. Cooking of all forms is based on proper attention to measurement. Can you bake a chicken at 600 degrees? Well, you can but the results would be pretty catastrophic! Could you may a cup of tea by dipping a tea bag into a teaspoon of warm water?  -Purchasing clothes. Now, how important could measurements be when selecting clothes? After all, to look good in clothing the main thing you need to pay attention to is style, right? Well, if you weigh 200lbs you aren't going to look stylish in an extra small shirt. Clothing is all based on size and proper fitting which are, of course, variants of measurement.  -Playing sports. The importance of measurements may not necessarily reveal itself when you play sports but it is there in a big way. If you want to throw a runner out at first or make a 30 yard touchdown pass then you really need to be accurate and comes from a clear sense of depth and distance.	4
Explain the objectives for software measurement with the perspective of manager and engineer	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  -Entity is an object (such as person or room) or events (such as journey or testing phase of software) in the real world.  -An attribute is a feature or property of an entity (such as color of room, the cost of journey or elapsed time of testing phase).  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -In such a way the products quality is measured and is priced according to it.  -software engineering describes the collection of techniques that apply an engineering approach to the construction and support of software product.	4
Explain the objectives for software measurement with the perspective of manager and engineer	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -With the help of measurement we can get the information about attributes of entities.  -Entity is an objects like as person or room or even events such as journey or testing phase of software in the real world.  -An attribute is a feature, quality or property of an entity such as color of room, the cost of journey or elapsed time of testing phase.  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification.  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is also used in economics to determine prices of the products in the market.  -Measurement in radar system enables to detect aircraft as well as the submarines in water.	4
Explain the objectives for software measurement with the perspective of manager and engineer	Do you find development planning or improvement efforts to be less effective than expected? Are unexpected problems surfacing after release or during development? How many infrastructure problems are directly related to code quality or undetected risks? Software measurement is an engineering process meant to aid in assessing these areas:  Productivity  Code Quality  Code Complexity  Software Risk  Technical Debt  Software Size  Compliance to Standards and Regulations  If your developers are not producing high-quality code or not meeting architecture standards, then numerous problems are likely to surface during or after application implementation. These include increased IT costs, additional maintenance efforts, and reduced security within a complex infrastructure. Software measurement and metrics provide an accurate, objective approach to evaluating these key factors. By having objective metrics, you can more easily identify improvement areas and monitor each effort made toward better development practices.	4
Explain the objectives for software measurement with the perspective of manager and engineer	Software Metrics is a collective term used to describe the very wide range of activities concerned with measurement in software engineering  Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined unambiguous rules.  Once measures are collected they are converted into metrics for use. IEEE defines metric as 'a quantitative measure of the degree to which a system, component, or process possesses a given attribute.' The goal of software metrics is to identify and control essential parameters that affect software development. Other objectives of using software metrics are listed below:  -Measuring the size of the software quantitatively.  -Assessing the level of complexity involved.  -Assessing the strength of the module by measuring coupling.  -Assessing the testing techniques.  -Specifying when to stop testing.  -Determining the date of release of the software.  -Estimating cost of resources and project schedule.	4
Explain the objectives for software measurement with the perspective of manager and engineer	The different attributes that can be measured for each of the entities are as follows −  Processes  Processes are collections of software-related activities. Following are some of the internal attributes that can be measured directly for a process   The duration of the process or one of its activities  The effort associated with the process or one of its activities  The number of incidents of a specified type arising during the process or one of its activities  The different external attributes of a process are cost, controllability, effectiveness, quality and stability.  Products  Products are not only the items that the management is committed to deliver but also any artifact or document produced during the software life cycle.  The different internal product attributes are size, effort, cost, specification, length, functionality, modularity, reuse, redundancy, and syntactic correctness. Among these size, effort, and cost are relatively easy to measure than the others.  The different external product attributes are usability, integrity, efficiency, testability, reusability, portability, and interoperability. These attributes describe not only the code but also the other documents that support the development effort.  Resources  These are entities required by a process activity. It can be any input for the software production. It includes personnel, materials, tools and methods.  The different internal attributes for the resources are age, price, size, speed, memory size, temperature, etc. The different external attributes are productivity, experience, quality, usability, reliability, comfort etc.  Determining Relevant Measurement Goals  A particular measurement will be useful only if it helps to understand the process or one of its resultant products. The improvement in the process or products can be performed only when the project has clearly defined goals for processes and products. A clear understanding of goals can be used to generate suggested metrics for a given project in the context of a process maturity framework.	4
What is representational theory of measurement Explain in detail	There are many representational theory for measurement, some of them are as given below  (i)Empirical relation:-There are three types of Empirical relation depending upon the relation we define either on single element (entity) of a set or on collection of elements.  (a)Unary relation:-We define Empirical relation on individual (single) element or entity.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation:- We define relation between more than two entities.  (ii)Rules of mapping:-  -When we have map the attribute of entity from real world to mathematical world, we have many choices for mapping and range.  -Mapping may be different depending upon conventions we adopt.  -Measures must specify domain, range as well as rules of mapping.  (iii)Representation condition of measurement:-  -Representation condition states that a measurement mapping M must map entities into numbers and Empirical relations into numerical relation (mathematical relation) in such a way that Empirical relations are preserved and are preserved by mathematical relations.  -Here Empirical relation “taller than” is mapped to the numerical relation “>”.  -We can say that A is higher number than B only if A is taller than B. For Empirical relation (binary) “taller than”, we have numerical relation A>B.  For unempirical relation, “is tall”, we have numerical relation A>70.	4
What is representational theory of measurement Explain in detail	There are several types of representational theory for measurement and some of them are given below  (i)Empirical relation:-In Empirical relation there are three types of relations depending on the relation we define on single element of a set or on collection  of elements.  (a)Unary relation:-We define the Empirical relation on single entity.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation :- We define relation between more than two entities. For example, if there are three instances as given below  A is taller than B.  A is tallest, B is tall, C is not tall.  C is taller than A when sitting on B’s shoulder.  Given any two people, x and y, we can say that   x  is taller than y or  y is taller than x.  Therefore we can say that “taller than” is a Empirical relation (binary) for height.  Similarly “is tall” is a unary Empirical relation.	4
What is representational theory of measurement Explain in detail	Measurement tells us the rules laying the ground work for developing and reasoning about all kinds of measurement. It is the mapping from the empirical world to the formal relational world. Consequently, a measure is the number or symbol assigned to an entity by this mapping in order to characterize an entity.  Empirical Relations:-  In the real world, we understand the things by comparing them, not by assigning numbers to them.  For example, to compare height, we use the terms ‘taller than’, higher than’. Thus, these ‘taller than’, higher than’ are empirical relations for height.  We can define more than one empirical relation on the same set.  Empirical relations in the real world can be mapped to a formal mathematical world. Mostly these relations reflect the personal preferences.	4
What is representational theory of measurement Explain in detail	"In the representational theory, measurement is defined as ""the correlation of numbers with entities that are not numbers”. The most technically elaborated form of representational theory is also known as additive conjoint measurement. In this form of representational theory, numbers are assigned based on correspondences or similarities between the structure of number systems and the structure of qualitative systems. A property is quantitative if such structural similarities can be established. In weaker forms of representational theory, such as that implicit within the work of Stanley Smith Stevens, numbers need only be assigned according to a rule.  The concept of measurement is often misunderstood as merely the assignment of a value, but it is possible to assign a value in a way that is not a measurement in terms of the requirements of additive conjoint measurement. One may assign a value to a person's height, but unless it can be established that there is a correlation between measurements of height and empirical relations, it is not a measurement according to additive conjoint measurement theory."	4
What is representational theory of measurement Explain in detail	The process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined rules.  The  idea behind the representational theory of measurement is elaborated in the following observations.  EMPIRICAL RELATIONS SYSTEM       The aim is to be able to compare entities. However, it is not automatic that any two   entities E  1   and E  2   are comparable. A comparison between E  1   and E  2   is about relating E  1     and E  2   with respect to some (salient) attribute.      Definition [Empirical Relations System]. Let E is the set of entities and R  E   is the set of   empirical relations for a (salient) attribute A. Then, an empirical relations system is a   couple (E, R  E  ).      The purpose of (E, R  E  ) is to define the intuitive meaning of A by identifying the   empirical relations that hold for A.      A relation can be defined on a single element of a set, or a collection of elements of a   set.      5.1. ORDERS OF RELATIONS      The relations can be classified in different ways, including whether they are unary,   binary, ternary, and so on.      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”.  EMPIRICAL RELATIONS SYSTEM       The aim is to be able to compare entities. However, it is not automatic that any two   entities E  1   and E  2   are comparable. A comparison between E  1   and E  2   is about relating E  1     and E  2   with respect to some (salient) attribute.      Definition [Empirical Relations System]. Let E is the set of entities and R  E   is the set of   empirical relations for a (salient) attribute A. Then, an empirical relations system is a   couple (E, R  E  ).      The purpose of (E, R  E  ) is to define the intuitive meaning of A by identifying the   empirical relations that hold for A.      A relation can be defined on a single element of a set, or a collection of elements of a   set.      5.1. ORDERS OF RELATIONS      The relations can be classified in different ways, including whether they are unary,   binary, ternary, and so on.      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”.  Empirical system relation:  The aim is to be able to compare entities. However, it is not automatic that any two entities E1 and E2 are comparable. A comparison between E1 and E2 is about relating E1 and E2 with respect to some (salient) attribute.    Definition. Let E is the set of entities and RE is the set of empirical relations for a (salient) attribute A. Then, an empirical relations system is a couple (E, RE).    The purpose of (E, RE) is to define the intuitive meaning of A by identifying the empirical relations that hold for A.    A relation can be defined on a single element of a set, or a collection of elements of a set.   Orders of relation:  The relations can be classified in different ways, including whether they are unary, binary, ternary, and so on.  For example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. For example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”.  It is possible to have other binary relations, such as, “much taller than”.	4
what is software metrics Explain scope of software metrics in detail	Software metrics is a term that provides many activities, all of which involves some degree of software measurement:-  (i)Cost and effort estimation:-  -We have to use cost and effort estimation models to predict the cost of project during earlier phases of software development life cycle.  -for example Boehm’s Cocomo model, Putnam’s SLIM model,  Regression based model, etc.  (ii)Productivity models and measures:-  -There are several measures and models or assessing the staff productivity during software process and indifferent environments.  -The productivity is a function of value and cast; each is then decomposed into other aspects expressed in measurable form.  (iii)Data collection:-  -The quality or any measurement program is clearly dependent on careful data collection. But collecting data is easier to said than done when data must be collected across a diverse set of projects.  -Data collection must be consistent and complete. It must be planned and executed in a careful and sensitive manner.  -Data collection is also essential for scientific investigation of relationships and trends.  (iv)Quality Models and measures:-  -Quality models such as Bohem’s quality model and MaCall quality model are used with productivity models.  -These models are constructed in a tree like fashion where upper branches holds high level quality factors of software product such as reliability, usability, etc.  -Each quality factor is composed of low level criteria such as structure, traceability, etc.  -Criteria is easier to understand and measure than factors.	4
what is software metrics Explain scope of software metrics in detail	There are many types of software metrics, Software metrics are used to measure the quality of the software.  (i)Cost effort estimation:-  -In the cost effort estimation, we use the models to predict the cost of the project before starting the work of developing the software life cycle.  -Examples:- Bohem’s Cocomo model, Putnam’s model, Regression based model, etc.  (ii) Productivity models and measures:-  -There are many measures and models or evaluating the staff productivity at the time of process and common environments.  -The productivity is a function of value and cost; they are later divided into other aspects which can be measured.  (iii)Data collection:-  -The quality of the measurement program depend on how carefully the data is collected. Collecting the data is not an easy task when data to be collected is diverse set of projects.  -Data collection must be steady and complete. It should be planned as well as executed in a careful and sensitive manner.  (iv)Quality models and measures:-  -Quality models like the Bohem’s quality model and MaCall quality model are used with productivity models.  -These Models are constructed in a tree like fashion where the branches on the upper side contain the high level quality factors of the software product such as reliability, usability, user friendliness, etc.  -Each of the quality factor contains the low level criteria such as structure, traceability, etc.  -These low level criteria are easy to understand as  well as easy to measure the factors.	4
what is software metrics Explain scope of software metrics in detail	Software metrics refer to the standard of measure which holds properties of  any software system or processes. It provides the following activities for this purpose-  (i)Cost and effort estimation:-  Cost and effort estimation models determine the the probable cost of a project during the beginning phases of software development production.  -for example Boehm’s Cocomo model, Putnam’s SLIM model,  Regression based model, etc.  (ii)Productivity models and measures:-  Productivity is a function of the value and cost incurred, both of which can be broken down into measurable forms.  The staff productivity during a software process and in varying environments can be assessed by several measures and models.  (iii)Data collection:-  - data collection is significant when it comes to the quality of any measurement program.  Although, data collection becomes challenging when data is collected across diverse range of projects.  - data collection requires consistent and whole information, planned and executed in a careful and sensitive manner with utmost integrity of research.  - scientific investigation of relationships and trends in society is also heavily dependent on the data collected for accurate results.    (iv)Quality Models and measures:-  -Quality models like Bohems quality model and MaCall quality model, and productivity models can be used together for higher accuracy.  -These models almost always are constructed in a tree-like manner with the upper branches indicating the highest level quality factors of any software product such as reliability, usability, etc.  - every quality factor consists of low level criteria like structure, traceability, etc.  - criteria helps in understanding and measuring the factors.	4
what is software metrics Explain scope of software metrics in detail	A software metric is a measure of software characteristics which are quantifiable or countable. Software metrics are important for many reasons, including measuring software performance, planning work items, measuring productivity, and many other uses.    Within the software development process, there are many metrics that are all related to each other. Software metrics are related to the four functions of management: Planning, Organization, Control, or Improvement.  Benefits of Software Metrics:-  The goal of tracking and analyzing software metrics is to determine the quality of the current product or process, improve that quality and predict the quality once the software development project is complete.	4
what is software metrics Explain scope of software metrics in detail	There are many types of software metrics, Software metrics are used to measure the quality of the software.  (i)Cost effort estimation:-  -In the cost effort estimation, we use the models to predict the cost of the project before starting the work of developing the software life cycle.  -Examples:- Bohem’s Cocomo model, Putnam’s model, Regression based model, etc.  (ii)Structure and complexity:-  -The structural attributes of representation of software are measured which are available in advanced of execution.  -Structure and complexity attributes are used to predict the part of the system which are less reliable, difficult to test or which requires more maintenance than the other parts of the system.  (viii)Management by metrics:-  -Management is an important part of software project management.  -Customers as well as the developers use charts and graphs to measure the progress and help them to keep track of the project.  -Measurement shows the customers and the developers how the project is doing.  (iii) Evaluation of methods and tools:-  -New methods and tools are used by many organization to make the product more cheaper.  -The organizations perform experiments where they run case studies or administrator surveys to help them decide if a tool or a method is making a positive effect in their particular situation.  -This evaluation is dependent upon good experimental design, identifying the factors that can affect the outcome and correct measurement if factor attributes.  (iv)Capabilities maturity assessment:-  -Capability Maturity Model (CMM) is an updated version of the process maturity model.  -To use this model, the contractor have to answer 100 questions to decide the contractor’s actual practices. The result grade was reported on the ordinal scale having five level i.e.: “1” to “5”.	4
Explain meaningfulness in measurement	-Measurement captures information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  Measurement making the things measurable:-  -Measuring makes nonmeasurable things measurable.  -Measuring the unmeasurable improves our understanding of particular entities and attributes, making engineering more powerful.  Measurement in software engineering:-  -Software engineer describes the collection of techniques that apply on	5
Explain meaningfulness in measurement	Objectives of software measurement:-  (i)Manager’s perspective:-  (a)What does each process cost?  (b)How productive is the staff?  (c)How good is the code being with the product?  (ii)Engineer’s perspective:-  (a)Are the requirements testable?  (b)Have the found all the faults?  (c)Have we met our product or process goals?  (d)What will happen in future?  Measurement in everyday life:-  -Measurement is used in economics to determine price of the products in the market.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose and determine what disease a patient is suffering from.  Measurement making the things measurable:-  -Measuring makes not measurable things measurable.  -Measuring the unmeasurable helps to understand the particular entities and attributes, it also helps in making engineering more powerful.  Measurement in software engineering:-  -Software engineer describes the collection of techniques that apply on engineering approach to the construction and support of software product.  - Software engineers have various activities like managing, planning, casting, analyzing, specifying, designing, testing and maintaining.  Measurement is used in all activities, so that we can understand and control the activities.  Neglect of measurement in engineering:-  -The software cannot be measured therefore we fail to set measurable targets for our software products. For example, in earlier phase we promise that our product will be user-friendly, reliable and maintainable but once project is complete, we can’t tell if we have met our goals.	5
Explain meaningfulness in measurement	Measurement is that operation by which we compare a physical quantity with a unit chosen for that quantity. In science and engineering, we perform experiments. During experiments, we have to take readings. Thus all these experiments require some measurements to be made. During the production of mechanical products, we have to measure the parts so as to find whether the part is made as per the specifications. Thus measurements are necessary for production and quality control.  Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  When measurements are taken directly using tools, instruments, or other calibrated measuring devices, they are called direct measurements e.g. Measurement of the length of a table by meter scale.  Indirect Measurement:  When the measurement must be done through a formula or other calculations, the measurement is called indirect measurement e.g. Measurement of the radius of the Earth.	5
Explain meaningfulness in measurement	Scientists use many skills as they investigate the world around them. They make observations by gathering information with their senses. Some observations are simple. For example, a simple observation would be figuring out the color or texture of an object. However, if scientists want to know more about a substance, they may need to take measurements. Measurement is perhaps one of the most fundamental concepts in science.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -Measurement in weather system are used to predict weather.  Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  Direct measurement' refers to measuring exactly the thing that you are looking to measure.	5
Explain meaningfulness in measurement	Measurement is the assignment of a number to a characteristic of an object or event, which can be compared with other objects or events. The scope and application of measurement are dependent on the context and discipline.  -Taking proper medicine. If you an illness (whether serious or minor) you need to take your medicine and take it in the proper amount. If you take too little or too much then you are not going to get the proper benefit from it.  -Making estimations. If you have to be at school at 9am what time would you have to leave in the morning if you are at your friend's house. Often we do not have an exact answer so we need to make an estimation which is essentially a guess of measurement.  -Keeping yourself warm or cool. If the temperature outside dips or increases you have to make an adjustment on your thermostat in order to remain at a safe and healthy temperature. Understanding the measurement scale of a thermostat is critical in this regard or else you may find yourself feeling rather uncomfortable.  -Understanding weight. Is that object too heavy to pick up by yourself or do you need to use something to lift it? Some may think this is not important but it is pretty easy to hurt yourself if you lift objects that are too heavy.	5
Explain the objectives for software measurement with the perspective of manager and engineer	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  -Entity is an object (such as person or room) or events (such as journey or testing phase of software) in the real world.  -An attribute is a feature or property of an entity (such as color of room, the cost of journey or elapsed time of testing phase).  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -software engineering describes the collection of techniques that apply an engineering approach to the construction and support of software product.	5
Explain the objectives for software measurement with the perspective of manager and engineer	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -With the help of measurement we can get the information about attributes of entities.  -Entity is an objects like as person or room or even events such as journey or testing phase of software in the real world.  -An attribute is a feature, quality or property of an entity such as color of room, the cost of journey or elapsed time of testing phase.  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification.  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is also used in economics to determine prices of the products in the market.  -Measurement in radar system enables to detect aircraft as well as the submarines in water.  -Measurement is also used in the hospitals to help the doctors to  specify the disease the patient is suffering from.  -In such a way the products quality is measured and is priced according to it.  -Software engineering define the collection of techniques that apply an engineering approach to construct and support the software product.  -Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance.  -Measurement in software is used in all above activities, so each activity is understood and controlled.	5
Explain the objectives for software measurement with the perspective of manager and engineer	Do you find development planning or improvement efforts to be less effective than expected? Are unexpected problems surfacing after release or during development? How many infrastructure problems are directly related to code quality or undetected risks? Software measurement is an engineering process meant to aid in assessing these areas:  Productivity  Code Quality  Code Complexity  Software Risk  Technical Debt  Software Size  Compliance to Standards and Regulations  If your developers are not producing high-quality code or not meeting architecture standards, then numerous problems are likely to surface during or after application implementation. These include increased IT costs, additional maintenance efforts, and reduced security within a complex infrastructure. Software measurement and metrics provide an accurate, objective approach to evaluating these key factors. By having objective metrics, you can more easily identify improvement areas and monitor each effort made toward better development practices.  Software Measurement Function Points:-  Several forms of analysis may be used to assess an application; however, software measurement function points provide a repeatable evaluation method. A function point represents a defined business task to be accomplished by an application. They are based on identified end user requirements and allow organizations to obtain a benchmarking score for continuously monitoring the above items. Each application must accomplish a set number of business functions, which can be automatically evaluated to aid in achieving:  Vulnerability Detection  Quality Assessments  Productivity Enhancements  Compliance Management  Development Practice Improvements	5
Explain the objectives for software measurement with the perspective of manager and engineer	Software Metrics is a collective term used to describe the very wide range of activities concerned with measurement in software engineering  Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined unambiguous rules.  Once measures are collected they are converted into metrics for use. IEEE defines metric as 'a quantitative measure of the degree to which a system, component, or process possesses a given attribute.' The goal of software metrics is to identify and control essential parameters that affect software development. Other objectives of using software metrics are listed below:  -Measuring the size of the software quantitatively.  -Assessing the level of complexity involved.  -Assessing the strength of the module by measuring coupling.  -Assessing the testing techniques.  -Specifying when to stop testing.  -Determining the date of release of the software.  -Estimating cost of resources and project schedule.  Software metrics help project managers to gain an insight into the efficiency of the software process, project, and product. This is possible by collecting quality and productivity data and then analyzing and comparing these data with past averages in order to know whether quality improvements have occurred. Also, when metrics are applied in a consistent manner, it helps in project planning and project management activity. For example, schedule-based resource allocation can be effectively enhanced with the help of metrics.	5
Explain the objectives for software measurement with the perspective of manager and engineer	The framework for software measurement is based on four principles −  Classifying the entities to be examined  Determining relevant measurement goals  Identifying the level of maturity that the organization has reached  Classifying the Entities to be Examined  In software engineering, mainly three classes of entities exist. They are −  Processes  Products  Resources  The different attributes that can be measured for each of the entities are as follows −  Processes  Processes are collections of software-related activities. Following are some of the internal attributes that can be measured directly for a process   The duration of the process or one of its activities  The effort associated with the process or one of its activities  The number of incidents of a specified type arising during the process or one of its activities  The different external attributes of a process are cost, controllability, effectiveness, quality and stability.  Products  Products are not only the items that the management is committed to deliver but also any artifact or document produced during the software life cycle.  The different internal product attributes are size, effort, cost, specification, length, functionality, modularity, reuse, redundancy, and syntactic correctness. Among these size, effort, and cost are relatively easy to measure than the others.  The different external product attributes are usability, integrity, efficiency, testability, reusability, portability, and interoperability. These attributes describe not only the code but also the other documents that support the development effort.  Resources  These are entities required by a process activity. It can be any input for the software production. It includes personnel, materials, tools and methods.  The different internal attributes for the resources are age, price, size, speed, memory size, temperature, etc. The different external attributes are productivity, experience, quality, usability, reliability, comfort etc.  Determining Relevant Measurement Goals  A particular measurement will be useful only if it helps to understand the process or one of its resultant products. The improvement in the process or products can be performed only when the project has clearly defined goals for processes and products. A clear understanding of goals can be used to generate suggested metrics for a given project in the context of a process maturity framework.	5
What is representational theory of measurement Explain in detail	There are many representational theory for measurement, some of them are as given below  (i)Empirical relation:-There are three types of Empirical relation depending upon the relation we define either on single element (entity) of a set or on collection of elements.  (a)Unary relation:-We define Empirical relation on individual (single) element or entity.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation:- We define relation between more than two entities.  (ii)Rules of mapping:-  -Real world is the domain of mapping and mathematical world is range of mapping.  -When we have map the attribute of entity from real world to mathematical world, we have many choices for mapping and range. i.e.:-We can use real numbers, integers or non-numeric symbols in mathematical system.  -Mapping may be different depending upon conventions we adopt.	5
What is representational theory of measurement Explain in detail	There are several types of representational theory for measurement and some of them are given below  (i)Empirical relation:-In Empirical relation there are three types of relations depending on the relation we define on single element of a set or on collection  of elements.  (a)Unary relation:-We define the Empirical relation on single entity.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation :- We define relation between more than two entities. For example, if there are three instances as given below  A is taller than B.  A is tallest, B is tall, C is not tall.  C is taller than A when sitting on B’s shoulder.  Given any two people, x and y, we can say that   x  is taller than y or  y is taller than x.  Therefore we can say that “taller than” is a Empirical relation (binary) for height.  Similarly “is tall” is a unary Empirical relation.  (ii) Rules of mapping :-  -Real world is a domain of mapping and mathematical words is range of mapping.	5
What is representational theory of measurement Explain in detail	Measurement tells us the rules laying the ground work for developing and reasoning about all kinds of measurement. It is the mapping from the empirical world to the formal relational world. Consequently, a measure is the number or symbol assigned to an entity by this mapping in order to characterize an entity.  Empirical Relations:-  In the real world, we understand the things by comparing them, not by assigning numbers to them.  For example, to compare height, we use the terms ‘taller than’, higher than’. Thus, these ‘taller than’, higher than’ are empirical relations for height.  We can define more than one empirical relation on the same set.  Empirical relations in the real world can be mapped to a formal mathematical world. Mostly these relations reflect the personal preferences.  The Representational Condition of Measurement:-  The representational condition asserts that a measurement mapping (M) must map entities into numbers, and empirical relations into numerical relations in such a way that the empirical relations preserve and are preserved by numerical relations.	5
What is representational theory of measurement Explain in detail	"In the representational theory, measurement is defined as ""the correlation of numbers with entities that are not numbers”. The most technically elaborated form of representational theory is also known as additive conjoint measurement. In this form of representational theory, numbers are assigned based on correspondences or similarities between the structure of number systems and the structure of qualitative systems. A property is quantitative if such structural similarities can be established. In weaker forms of representational theory, such as that implicit within the work of Stanley Smith Stevens, numbers need only be assigned according to a rule.  The concept of measurement is often misunderstood as merely the assignment of a value, but it is possible to assign a value in a way that is not a measurement in terms of the requirements of additive conjoint measurement. One may assign a value to a person's height, but unless it can be established that there is a correlation between measurements of height and empirical relations, it is not a measurement according to additive conjoint measurement theory. Likewise, computing and assigning arbitrary values, like the ""book value"" of an asset in accounting, is not a measurement because it does not satisfy the necessary criteria."	5
What is representational theory of measurement Explain in detail	The process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined rules.  The  idea behind the representational theory of measurement is elaborated in the following observations.  EMPIRICAL RELATIONS SYSTEM     The aim is to be able to compare entities. However, it is not automatic that any two entities E1 and E2 are comparable. A comparison between E1 and E2 is about relating E1 and E2 with respect to some (salient) attribute.    Definition. Let E is the set of entities and RE is the set of empirical relations for a (salient) attribute A. Then, an empirical relations system is a couple (E, RE).    The purpose of (E, RE) is to define the intuitive meaning of A by identifying the empirical relations that hold for A.    A relation can be defined on a single element of a set, or a collection of elements of a set.   elements of a set.   ORDERS OF RELATIONS:-  The relations can be classified in different ways, including whether they are unary, binary, ternary, and so on.  For example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. For example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”.  It is possible to have other binary relations, such as, “much taller than”.  THE REPRESENTATION: THE MAPPING OF RELATIONS FROM THE   REAL WORLD TO THE MATHEMATICAL WORLD  THE REPRESENTATION: THE MAPPING OF RELATIONS FROM THE REAL WORLD TO THE MATHEMATICAL WORLD:-  A mapping from the empirical world to the formal, relational world.  This mapping, say, M, is called a representation  For example, the range could consist of integers,  real numbers, or non-numerical symbols  Another example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. In this case, the empirical relation “is tall” can be mapped to, for example, the numerical relation “x > 50”.     Another example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”. In this case, the empirical relation “is taller than” can be mapped, for example, to the numerical relation “x > y”	5
what is software metrics Explain scope of software metrics in detail	Software metrics is a term that provides many activities, all of which involves some degree of software measurement:-  (i)Cost and effort estimation:-  -We have to use cost and effort estimation models to predict the cost of project during earlier phases of software development life cycle.  -for example Boehm’s Cocomo model, Putnam’s SLIM model,  Regression based model, etc.  (ii)Data collection:-  -The quality or any measurement program is clearly dependent on careful data collection. But collecting data is easier to said than done when data must be collected across a diverse set of projects.  -Data collection must be consistent and complete. It must be planned and executed in a careful and sensitive manner.  -Data collection is also essential for scientific investigation of relationships and trends.  (iii)Quality Models and measures:-  -Quality models such as Bohem’s quality model and MaCall quality model are used with productivity models.  -These models are constructed in a tree like fashion where upper branches holds high level quality factors of software product such as reliability, usability, etc.  -Each quality factor is composed of low level criteria such as structure, traceability, etc.  -Criteria is easier to understand and measure than factors.  (iv)Performance evaluation and models:-  -Performance is one of the most aspect of quality.  -Performance evaluation includes characteristics such as response time and completion rates.  -Performance evaluation covers internal working  of system including efficiency of complexity of algorithm.  (v)Structure and complexity :-  -We measure structural attributes of representation of software which are available in advanced of execution.  -These structural attributes are used to predict which part of system are less reliable, more difficult to test or requires more maintenance than others.	5
what is software metrics Explain scope of software metrics in detail	There are many types of software metrics, Software metrics are used to measure the quality of the software.  (i)Cost effort estimation:-  -In the cost effort estimation, we use the models to predict the cost of the project before starting the work of developing the software life cycle.  -Examples:- Bohem’s Cocomo model, Putnam’s model, Regression based model, etc.  (ii) Productivity models and measures:-  -There are many measures and models or evaluating the staff productivity at the time of process and common environments.  -The productivity is a function of value and cost; they are later divided into other aspects which can be measured.  (iii)Data collection:-  -The quality of the measurement program depend on how carefully the data is collected. Collecting the data is not an easy task when data to be collected is diverse set of projects.  -Data collection must be steady and complete. It should be planned as well as executed in a careful and sensitive manner.  (iv)Quality models and measures:-  -Quality models like the Bohem’s quality model and MaCall quality model are used with productivity models.  -These Models are constructed in a tree like fashion where the branches on the upper side contain the high level quality factors of the software product such as reliability, usability, user friendliness, etc.  -Each of the quality factor contains the low level criteria such as structure, traceability, etc.  -These low level criteria are easy to understand as  well as easy to measure the factors.  (v)Reliability models:-  -Reliability is one of the most important component of quality model but we need to predict and measure the reliability of the product.  -Reliability shows probability of the failure free operation.  -There are several parameters for growth of the reliability of the models to increase the reliability of the product. For example: Moronda, Littlewood, NHPP model.	5
what is software metrics Explain scope of software metrics in detail	Software metrics refer to the standard of measure which holds properties of  any software system or processes. It provides the following activities for this purpose-  (i)Reliability models:-  -Reliability functions as a significant factor is quality model, although it needs to be predicted and measured, therefore creating a specialization in itself in reliability modeling and prediction.  - reliability refers to the probability of failure free operation of any system.  - several parametric reliability growth models exist to influence the reliability of a product. Example-  Moronda, Littlewood vorall and Nonhomogeneous poisons process (NHPP)  Model.  (ii)Performance evaluation and models:-  -Performance evaluation is an integral aspect of quality.  -Performance evaluation is a detailed observation of various factors, both internal and       external.  - external system performance factors like response times and completion rates.   - internal factors like working of the efficacy of algorithms.  (iii)Structure and complexity :-  - the structural attributes of representation of software are measured which are available in advance of execution.  - the structural attributes help in prediction of the reliability, the difficulty and the requirement of maintenance of a part of any system.  (iv)Management by metrics:-  - managing a software project requires a vital role of measurement.  - measurement-based charts are highly reliable for customers, users, and developers alike to track the project’s progress.  - several organizations determine a specific set of measurements and reporting methods to compare and contrast the project.  - it helps in making customers understand the project progress better even without any pre requisite knowledge in software terminology or jargon.  (v)Evaluation of Methods and tools:-  - new methods and tools are devised by organizations to make products better and cheaper.  - these new methods and tools are tested, experimented and surveyed to decide the potential outcome it will make in the particular situation.  - this evaluation is carried out with good experimental design, appropriate identification of factors which affect outcome and proper measurements of factor attributes.	5
what is software metrics Explain scope of software metrics in detail	A software metric is a measure of software characteristics which are quantifiable or countable. Software metrics are important for many reasons, including measuring software performance, planning work items, measuring productivity, and many other uses.    Within the software development process, there are many metrics that are all related to each other. Software metrics are related to the four functions of management: Planning, Organization, Control, or Improvement.  Benefits of Software Metrics:-  The goal of tracking and analyzing software metrics is to determine the quality of the current product or process, improve that quality and predict the quality once the software development project is complete. On a more granular level, software development managers are trying to:  Increase return on investment (ROI)  Identify areas of improvement  Manage workloads  Reduce overtime  Reduce costs	5
what is software metrics Explain scope of software metrics in detail	Software development metrics are quantitative measurements of a software product or project, which can help management understand software performance, quality, or the productivity and efficiency of software teams.  Metrics in Agile Software Development  The agile methodology has a unique approach to software development metrics and how to use them effectively. Leon Tranter presents three agile principles for software metrics:  Metrics should be used by the team—They should not be imposed by management, rather they should be useful for the team to assess and improve their own work.  Metrics should be part of a conversation—A metric is just a number, it should be combined into a deeper discussion about process and challenges faced by the team.  Metrics should be used as part of an investigation of the experiment—Agile teams should use metrics with a specific hypothesis in mind, not measure for the sake of measurement.  Software Development Metrics Examples:-  (i) Customer Satisfaction  A widely used and respected metric for customer satisfaction is Net Promoter Score (NPS). It a number ranging from -100 (indicating no customers refer you to others) to +100 (all customers likely to refer you to others). SurveyMonkey provides the full calculation for NPS and lets you set up a free NPS survey.  (ii) Team Velocity:-  Team Velocity measures the number of story points, quantifying the number and size of product features, completed by the team in the previous sprints. It helps to understand how much value the team is providing to customers in a given time period.  (iii) Release Burndown:-  A Release Burndown chart can help you understand, across an entire software release, how development is progressing, how much of the planned software functionality remains to be done, and when you can expect the release to be completed.	5
Explain meaningfulness in measurement	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  Measurement making the things measurable:-  -Measuring makes nonmeasurable things measurable.  -Measuring the unmeasurable improves our understanding of particular entities and attributes, making engineering more powerful.  Measurement in software engineering:-  -Software engineer describes the collection of techniques that apply on engineering approach to the construction and support of software product.	6
Explain meaningfulness in measurement	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement lets us understand the information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price of the products in the market.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose and determine what disease a patient is suffering from.  Measurement making the things measurable:-  -Measuring makes not measurable things measurable.  -Measuring the unmeasurable helps to understand the particular entities and attributes, it also helps in making engineering more powerful.  Measurement in software engineering:-  -Software engineer describes the collection of techniques that apply on engineering approach to the construction and support of software product.  - Software engineers have various activities like managing, planning, casting, analyzing, specifying, designing, testing and maintaining.  Measurement is used in all activities, so that we can understand and control the activities.  Neglect of measurement in engineering:-  -The software cannot be measured therefore we fail to set measurable targets for our software products. For example, in earlier phase we promise that our product will be user-friendly, reliable and maintainable but once project is complete, we can’t tell if we have met our goals.  -The qualify of the component cost of software program cannot be understood well by us, therefore the overall cost of the project cannot be controlled by us if we are not measuring the relative cost of components.  -We do not qualify or predict the quality of product we produce, we can’t tell the user of product about reliability of product.  -We allow anecdote evidence to convince us to try yet another revolutionary new development technology, without doing careful controlled study to determine if the technology is efficient or effective.  Measurement for understanding, control and improvement:-  -Measurement help us to understand what is happening during the development or maintenance.  -Measurement allows us to control what is happening on our projects.  -Measurement encourages us to improve our process and products.	6
Explain meaningfulness in measurement	Direct Measurement:  When measurements are taken directly using tools, instruments, or other calibrated measuring devices, they are called direct measurements   Indirect Measurement:  When the measurement must be done through a formula or other calculations, the measurement is called indirect measurement.  Units of Measurements:  For any measurement, a number and unit are required. When we say that the time is 5 second, then we mean that the said time is 5 times a certain standard time called 1 second.  A unit is a selected magnitude of a physical variable in terms of which other magnitudes of the same variable can be expressed. Measurement without unit has no meaning.	6
Explain meaningfulness in measurement	Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -Measurement in weather system are used to predict weather.  Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  Direct measurement' refers to measuring exactly the thing that you are looking to measure.  Indirect Measurement:  Indirect measurement means that you're measuring something by measuring something else	6
Explain meaningfulness in measurement	Measurement is the assignment of a number to a characteristic of an object or event, which can be compared with other objects or events. The scope and application of measurement are dependent on the context and discipline.  -Taking proper medicine. If you an illness (whether serious or minor) you need to take your medicine and take it in the proper amount. If you take too little or too much then you are not going to get the proper benefit from it.  -Purchasing clothes. Now, how important could measurements be when selecting clothes? After all, to look good in clothing the main thing you need to pay attention to is style, right? Well, if you weigh 200lbs you aren't going to look stylish in an extra small shirt. Clothing is all based on size and proper fitting which are, of course, variants of measurement.  -Making estimations. If you have to be at school at 9am what time would you have to leave in the morning if you are at your friend's house. Often we do not have an exact answer so we need to make an estimation which is essentially a guess of measurement.  -Keeping yourself warm or cool. If the temperature outside dips or increases you have to make an adjustment on your thermostat in order to remain at a safe and healthy temperature. Understanding the measurement scale of a thermostat is critical in this regard or else you may find yourself feeling rather uncomfortable.  -Understanding weight. Is that object too heavy to pick up by yourself or do you need to use something to lift it? Some may think this is not important but it is pretty easy to hurt yourself if you lift objects that are too heavy.	6
Explain meaningfulness in measurement	Scientists use many skills as they investigate the world around them. They make observations by gathering information with their senses. Some observations are simple. For example, a simple observation would be figuring out the color or texture of an object. However, if scientists want to know more about a substance, they may need to take measurements. Measurement is perhaps one of the most fundamental concepts in science. Without the ability to measure, it would be difficult for scientists to conduct experiments or form theories. Not only is measurement important in science and the chemical industry, it is also essential in farming, engineering, construction, manufacturing, commerce, and numerous other occupations and activities. The word “measurement” comes from the Greek word “metron,” which means “limited proportion.” Measurement is a technique in which properties of an object are determined by comparing them to a standard. Measurements require tools and provide scientists with a quantity. A quantity describes how much of something there is or how many there are. A good example of measurement is using a ruler to find the length of an object. The object is whatever you are measuring, the property you are trying to determine is the object’s length, and the standard you are comparing the object’s length to is the ruler.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -Measurement in weather system are used to predict weather.  Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  Direct measurement' refers to measuring exactly the thing that you are looking to measure.  Indirect Measurement:  Indirect measurement means that you're measuring something by measuring something else	6
Explain the objectives for software measurement with the perspective of manager and engineer	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  -Entity is an object (such as person or room) or events (such as journey or testing phase of software) in the real world.  -An attribute is a feature or property of an entity (such as color of room, the cost of journey or elapsed time of testing phase).  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -In such a way the products quality is measured and is priced according to it.  -software engineering describes the collection of techniques that apply an engineering approach to the construction and support of software product.  -Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?	6
Explain the objectives for software measurement with the perspective of manager and engineer	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -With the help of measurement we can get the information about attributes of entities.  -Entity is an objects like as person or room or even events such as journey or testing phase of software in the real world.  -An attribute is a feature, quality or property of an entity such as color of room, the cost of journey or elapsed time of testing phase.  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification.  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is also used in economics to determine prices of the products in the market.  -Measurement in radar system enables to detect aircraft as well as the submarines in water.  -Measurement is also used in the hospitals to help the doctors to  specify the disease the patient is suffering from.  -In such a way the products quality is measured and is priced according to it.  -Software engineering define the collection of techniques that apply an engineering approach to construct and support the software product.  -Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance.  -Measurement in software is used in all above activities, so each activity is understood and controlled.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?	6
Explain the objectives for software measurement with the perspective of manager and engineer	Do you find development planning or improvement efforts to be less effective than expected? Are unexpected problems surfacing after release or during development? How many infrastructure problems are directly related to code quality or undetected risks? Software measurement is an engineering process meant to aid in assessing these areas:  Productivity  Code Quality  Code Complexity  Software Risk  Technical Debt  Software Size  Compliance to Standards and Regulations  If your developers are not producing high-quality code or not meeting architecture standards, then numerous problems are likely to surface during or after application implementation. These include increased IT costs, additional maintenance efforts, and reduced security within a complex infrastructure. Software measurement and metrics provide an accurate, objective approach to evaluating these key factors. By having objective metrics, you can more easily identify improvement areas and monitor each effort made toward better development practices.  Software Measurement Function Points:-  Several forms of analysis may be used to assess an application; however, software measurement function points provide a repeatable evaluation method. A function point represents a defined business task to be accomplished by an application. They are based on identified end user requirements and allow organizations to obtain a benchmarking score for continuously monitoring the above items. Each application must accomplish a set number of business functions, which can be automatically evaluated to aid in achieving:  Vulnerability Detection  Quality Assessments  Productivity Enhancements  Compliance Management  Development Practice Improvements  Additionally, software measurement function points offer insight for locating difficult to find vulnerabilities in a complex infrastructure where problems often exist in one or more tiers. The provided benchmarking measurement can also be used to ensure developers and outside providers are meeting defined architecture standards for each completed application. If your organization is not using software measurement to track and monitor these items, then various infrastructure problems might be a direct result of source code inefficiencies.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?	6
Explain the objectives for software measurement with the perspective of manager and engineer	Software Metrics is a collective term used to describe the very wide range of activities concerned with measurement in software engineering  Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined unambiguous rules.  Once measures are collected they are converted into metrics for use. IEEE defines metric as 'a quantitative measure of the degree to which a system, component, or process possesses a given attribute.' The goal of software metrics is to identify and control essential parameters that affect software development. Other objectives of using software metrics are listed below:  -Measuring the size of the software quantitatively.  -Assessing the level of complexity involved.  -Assessing the strength of the module by measuring coupling.  Software metrics help project managers to gain an insight into the efficiency of the software process, project, and product. This is possible by collecting quality and productivity data and then analyzing and comparing these data with past averages in order to know whether quality improvements have occurred. Also, when metrics are applied in a consistent manner, it helps in project planning and project management activity. For example, schedule-based resource allocation can be effectively enhanced with the help of metrics.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?	6
Explain the objectives for software measurement with the perspective of manager and engineer	The framework for software measurement is based on four principles −  Classifying the entities to be examined  Determining relevant measurement goals  Identifying the level of maturity that the organization has reached  Classifying the Entities to be Examined  In software engineering, mainly three classes of entities exist. They are −  Processes  Products  Resources  All of these entities have internal as well as external entities.  Internal attributes are those that can be measured purely in terms of the process, product, or resources itself. For example: Size, complexity, dependency among modules.  External attributes are those that can be measured only with respect to its relation with the environment. For example: The total number of failures experienced by a user, the length of time it takes to search the database and retrieve information.  The different attributes that can be measured for each of the entities are as follows −  Processes  Processes are collections of software-related activities. Following are some of the internal attributes that can be measured directly for a process   The duration of the process or one of its activities  The effort associated with the process or one of its activities  The number of incidents of a specified type arising during the process or one of its activities  The different external attributes of a process are cost, controllability, effectiveness, quality and stability.  Products  Products are not only the items that the management is committed to deliver but also any artifact or document produced during the software life cycle.  The different internal product attributes are size, effort, cost, specification, length, functionality, modularity, reuse, redundancy, and syntactic correctness. Among these size, effort, and cost are relatively easy to measure than the others.  The different external product attributes are usability, integrity, efficiency, testability, reusability, portability, and interoperability. These attributes describe not only the code but also the other documents that support the development effort.  Resources  These are entities required by a process activity. It can be any input for the software production. It includes personnel, materials, tools and methods.  The different internal attributes for the resources are age, price, size, speed, memory size, temperature, etc. The different external attributes are productivity, experience, quality, usability, reliability, comfort etc.	6
Explain the objectives for software measurement with the perspective of manager and engineer	Software Metrics is a collective term used to describe the very wide range of activities concerned with measurement in software engineering  Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined unambiguous rules.  Once measures are collected they are converted into metrics for use. IEEE defines metric as 'a quantitative measure of the degree to which a system, component, or process possesses a given attribute.' The goal of software metrics is to identify and control essential parameters that affect software development. Other objectives of using software metrics are listed below:  -Measuring the size of the software quantitatively.  -Assessing the level of complexity involved.  -Assessing the strength of the module by measuring coupling.  -Assessing the testing techniques.  -Specifying when to stop testing.  -Determining the date of release of the software.  -Estimating cost of resources and project schedule.  Software metrics help project managers to gain an insight into the efficiency of the software process, project, and product. This is possible by collecting quality and productivity data and then analyzing and comparing these data with past averages in order to know whether quality improvements have occurred. Also, when metrics are applied in a consistent manner, it helps in project planning and project management activity. For example, schedule-based resource allocation can be effectively enhanced with the help of metrics.	6
What is representational theory of measurement Explain in detail	There are many representational theory for measurement, some of them are as given below  (i)Empirical relation:-There are three types of Empirical relation depending upon the relation we define either on single element (entity) of a set or on collection of elements.  (a)Unary relation:-We define Empirical relation on individual (single) element or entity.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation:- We define relation between more than two entities.  For example, if there are three instances as given below  A is taller than B.  A is tallest, B is tall, C is not tall.  C is taller than A when sitting on B’s shoulder.  Given any two people, x and y, we can conclude that      x  is taller than y or     y is taller than x.  Therefore we can say that “taller than” is a Empirical relation (binary) for height.  Similarly “is tall” is a unary Empirical relation.  (ii)Rules of mapping:-  -Real world is the domain of mapping and mathematical world is range of mapping.  -When we have map the attribute of entity from real world to mathematical world, we have many choices for mapping and range.  i.e.:-We can use real numbers, integers or non-numeric symbols in mathematical system.  -Mapping may be different depending upon conventions we adopt.	6
What is representational theory of measurement Explain in detail	There are several types of representational theory for measurement and some of them are given below  (i)Empirical relation:-In Empirical relation there are three types of relations depending on the relation we define on single element of a set or on collection  of elements.  (a)Unary relation:-We define the Empirical relation on single entity.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation :- We define relation between more than two entities. For example, if there are three instances as given below  (i)Representation condition of measurement:-  -Representation condition states that a measurement mapping M should map entities in numbers and Empirical relations in numerical relation in such a way that the Empirical relations are maintained and are maintained by the mathematical relations.  -Here, In the above example of height of two people, the “taller than” is mapped to the numerical relation “>”.  -We can say that the person A is taller than the person B if and only if M(A)>(B).  -This statement implies that whenever the person A is taller than person B, then M(A) must be a bigger number than M(B).  -If the person A is taller than the person B, we can say that A is a higher number than B. For Empirical relation “taller than”, we get the numerical relation A>B.  For unempirical relation, “is tall”, we have numerical relation A>70.  Then, representation condition requires that for any measure M   A is tall if and only if M(A)>70.  (ii) Rules of mapping :-  -Real world is a domain of mapping and mathematical words is range of mapping.  -When the mapping of the attribute of entity from real world to the mathematical world, we have several types of mapping and range.  i.e.:-We can use the real numbers, integers or non-numeric symbols in mathematical system.  -Mapping could be different depending on the conventions we adopt.  -Measures should specify domain, range as well as rules of mapping .	6
What is representational theory of measurement Explain in detail	Empirical Relations:-  In the real world, we understand the things by comparing them, not by assigning numbers to them.  For example, to compare height, we use the terms ‘taller than’, higher than’. Thus, these ‘taller than’, higher than’ are empirical relations for height.  We can define more than one empirical relation on the same set.  For example, X is taller than Y. X, Y are much taller than Z.  Empirical relations can be unary, binary, ternary, etc.  X is tall, Y is not tall are unary relations.  X is taller than Y is a binary relation.  Empirical relations in the real world can be mapped to a formal mathematical world. Mostly these relations reflect the personal preferences.  The Representational Condition of Measurement:-  The representational condition asserts that a measurement mapping (M) must map entities into numbers, and empirical relations into numerical relations in such a way that the empirical relations preserve and are preserved by numerical relations.	6
What is representational theory of measurement Explain in detail	"In the representational theory, measurement is defined as ""the correlation of numbers with entities that are not numbers”. The most technically elaborated form of representational theory is also known as additive conjoint measurement. In this form of representational theory, numbers are assigned based on correspondences or similarities between the structure of number systems and the structure of qualitative systems. A property is quantitative if such structural similarities can be established. In weaker forms of representational theory, such as that implicit within the work of Stanley Smith Stevens, numbers need only be assigned according to a rule.  The concept of measurement is often misunderstood as merely the assignment of a value, but it is possible to assign a value in a way that is not a measurement in terms of the requirements of additive conjoint measurement. One may assign a value to a person's height, but unless it can be established that there is a correlation between measurements of height and empirical relations, it is not a measurement according to additive conjoint measurement theory. Likewise, computing and assigning arbitrary values, like the ""book value"" of an asset in accounting, is not a measurement because it does not satisfy the necessary criteria.  Three type of Representational theory  1) Empirical relation  In science, an empirical relationship is a relationship or correlation based solely on observation rather than theory. An empirical relationship requires only confirmatory data irrespective of theoretical basis"	6
What is representational theory of measurement Explain in detail	ORDERS OF RELATIONS:-  The relations can be classified in different ways, including whether they are unary, binary, ternary, and so on.  For example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. For example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”.  It is possible to have other binary relations, such as, “much taller than”.  THE REPRESENTATION: THE MAPPING OF RELATIONS FROM THE   REAL WORLD TO THE MATHEMATICAL WORLD  THE REPRESENTATION: THE MAPPING OF RELATIONS FROM THE REAL WORLD TO THE MATHEMATICAL WORLD:-  A mapping from the empirical world to the formal, relational world.  This mapping, say, M, is called a representation  For example, the range could consist of integers,  real numbers, or non-numerical symbols  Another example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. In this case, the empirical relation “is tall” can be mapped to, for example, the numerical relation “x > 50”.     Another example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”. In this case, the empirical relation “is taller than” can be mapped, for example, to the numerical relation “x > y”  THE REPRESENTATION CONDITION:-  It is important that the behavior of measures in the number system be the same as in the real world since then, instead of studying the real world, one could study the mathematical world.    For example, once the height of a person has been measured, that data could be used subsequently by others and that data could be used subsequently for other purposes.    For that, the mapping must preserve the relation. This is the representation condition.  Let (E, R  E  ) be an empirical relation system and let (N, R  N  ) be a numerical relation   system. Then, a representation condition measuring an attribute characterized by (E, R  E  )   means associating (E, R  E  ) with (N, R  N  ) by using a mapping M.       In particular, M maps entities of E to numbers of N, and relations of R  E   to relations of   R  N  , so that every empirical relation is preserved.      Indeed, M is a homomorphism  1  .      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”. In this case, the representation condition requires that, for any   measure M, P is tall if and only if M(P) > 50.      For example, for the attribute height of entities that are humans, a binary empirical   relation is “is taller than”. In this case, the representation condition requires that, for   any measure M, P  1   is taller than P  2   if and only if M(P  1  ) > M(P  2  ).      1.  The If: If John is taller than Jane, then M(John) must be a larger number than   M(Jane).      2.  The Only If: Jill can be mapped to a higher number than Jack only if Jill is taller than   Jack.      In general, if M maps the empirical binary relation >  E   into the numerical relation >  N  , then   the representation condition is:       x >  E   y ⟺ M(x) >  N   M(y).      It could be noted that >  N   is equivalent to the conventional notion of ‘greater than’ (>), a   total order  2   on the set of real numbers.  Let (E, RE) be an empirical relation system and let (N, RN) be a numerical relation system. Then, a representation condition measuring an attribute characterized by (E, RE) means associating (E, RE) with (N, RN) by using a mapping M.     In particular, M maps entities of E to numbers of N, and relations of RE to relations of RN, so that every empirical relation is preserved.    Indeed, M is a homomorphism1.    For example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. In this case, the representation condition requires that, for any measure M, P is tall if and only if M(P) > 50.    For example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”. In this case, the representation condition requires that, for any measure M, P1 is taller than P2 if and only if M(P1) > M(P2).    The If: If John is taller than Jane, then M(John) must be a larger number than M(Jane).      The Only If: Jill can be mapped to a higher number than Jack only if Jill is taller than Jack.    In general, if M maps the empirical binary relation >E into the numerical relation >N, then the representation condition is:     x >E y ⟺ M(x) >N M(y).    It could be noted that >N is equivalent to the conventional notion of ‘greater than’ (>), a total order2 on the set of real numbers.	6
What is representational theory of measurement Explain in detail	"In the representational theory, measurement is defined as ""the correlation of numbers with entities that are not numbers”. The most technically elaborated form of representational theory is also known as additive conjoint measurement. In this form of representational theory, numbers are assigned based on correspondences or similarities between the structure of number systems and the structure of qualitative systems. A property is quantitative if such structural similarities can be established. In weaker forms of representational theory, such as that implicit within the work of Stanley Smith Stevens, numbers need only be assigned according to a rule.  The concept of measurement is often misunderstood as merely the assignment of a value, but it is possible to assign a value in a way that is not a measurement in terms of the requirements of additive conjoint measurement. One may assign a value to a person's height, but unless it can be established that there is a correlation between measurements of height and empirical relations, it is not a measurement according to additive conjoint measurement theory. Likewise, computing and assigning arbitrary values, like the ""book value"" of an asset in accounting, is not a measurement because it does not satisfy the necessary criteria.  Three type of Representational theory  1) Empirical relation  In science, an empirical relationship is a relationship or correlation based solely on observation rather than theory. An empirical relationship requires only confirmatory data irrespective of theoretical basis  2) The rule of mapping  The real world is the Domain of mapping, and the mathematical world is the range. when we map the attribute to mathematical system, we have many choice for mapping and the range"	6
what is software metrics Explain scope of software metrics in detail	Software metrics is a term that provides many activities, all of which involves some degree of software measurement:-  (i)Productivity models and measures:-  -There are several measures and models or assessing the staff productivity during software process and indifferent environments.  -The productivity is a function of value and cast; each is then decomposed into other aspects expressed in measurable form.  (ii)Data collection:-  -The quality or any measurement program is clearly dependent on careful data collection. But collecting data is easier to said than done when data must be collected across a diverse set of projects.  -Data collection must be consistent and complete. It must be planned and executed in a careful and sensitive manner.  -Data collection is also essential for scientific investigation of relationships and trends.  (iii)Reliability models:-  -Reliability is one of the most important factor in quality model but we need to predict and measure reliability of product.  -Reliability indicates probability of failure free operation.  -We have several parametric reliability growth models to increase the reliability of product. For example, Moronda, Littlewood, Littlewood vorall and Non Homogenous poisons process (NHPP) model.  (iv)Performance evaluation and models:-  -Performance is one of the most aspect of quality.  -Performance evaluation includes characteristics such as response time and completion rates.  -Performance evaluation covers internal working  of system including efficiency of complexity of algorithm.  (v)Management by metrix:-  -Measurement if most important part of software project management.  -Customers and developers uses measurement-based charts and graphs to help them to track if the project is on track.  -Many organization defines a set of measurement and reporting methods, so that project can be compared and contrasted.  -Measurement tells the customer and developer how the project is doing.  (vi)Capabilities Maturity Assessment:-  -In 1980, Vs Software Engineering Institute (SEI) proposed a Capability Maturity model to measure a contractor’s ability to develop quality software for US government.  -CMM is the updated version  of process maturity model.  -This model assessed any different attributes of development including use of tools, standard practices and more.  -With this model, contractor needs to answered 100 questions to determine contractor’s actual practices. The result grade was reported as a five level ordinal scale from “1” to “5”.	6
what is software metrics Explain scope of software metrics in detail	There are many types of software metrics, Software metrics are used to measure the quality of the software.  (i)Cost effort estimation:-  -In the cost effort estimation, we use the models to predict the cost of the project before starting the work of developing the software life cycle.  -Examples:- Bohem’s Cocomo model, Putnam’s model, Regression based model, etc.  (ii) Productivity models and measures:-  -There are many measures and models or evaluating the staff productivity at the time of process and common environments.  -The productivity is a function of value and cost; they are later divided into other aspects which can be measured.  (iii)Data collection:-  -The quality of the measurement program depend on how carefully the data is collected. Collecting the data is not an easy task when data to be collected is diverse set of projects.  -Data collection must be steady and complete. It should be planned as well as executed in a careful and sensitive manner.  (iv)Management by metrics:-  -Management is an important part of software project management.  -Customers as well as the developers use charts and graphs to measure the progress and help them to keep track of the project.  -Measurement shows the customers and the developers how the project is doing.  (v) Evaluation of methods and tools:-  -New methods and tools are used by many organization to make the product more cheaper.  -The organizations perform experiments where they run case studies or administrator surveys to help them decide if a tool or a method is making a positive effect in their particular situation.  -This evaluation is dependent upon good experimental design, identifying the factors that can affect the outcome and correct measurement if factor attributes.  (vi)Capabilities maturity assessment:-  -Capability Maturity Model (CMM) is an updated version of the process maturity model.  -To use this model, the contractor have to answer 100 questions to decide the contractor’s actual practices. The result grade was reported on the ordinal scale having five level i.e.: “1” to “5”.	6
what is software metrics Explain scope of software metrics in detail	Software metrics refer to the standard of measure which holds properties of  any software system or processes. It provides the following activities for this purpose-  (i)Cost and effort estimation:-  Cost and effort estimation models determine the the probable cost of a project during the beginning phases of software development production.  (ii)Productivity models and measures:-  Productivity is a function of the value and cost incurred, both of which can be broken down into measurable forms.  The staff productivity during a software process and in varying environments can be assessed by several measures and models.  (iii)Data collection:-  - data collection is significant when it comes to the quality of any measurement program.  Although, data collection becomes challenging when data is collected across diverse range of projects.  - data collection requires consistent and whole information, planned and executed in a careful and sensitive manner with utmost integrity of research.  (iv)Quality Models and measures:-  -Quality models like Bohems quality model and MaCall quality model, and productivity models can be used together for higher accuracy.  -These models almost always are constructed in a tree-like manner with the upper branches indicating the highest level quality factors of any software product such as reliability, usability, etc.  - every quality factor consists of low level criteria like structure, traceability, etc.  - criteria helps in understanding and measuring the factors.  (v)Reliability models:-  -Reliability functions as a significant factor is quality model, although it needs to be predicted and measured, therefore creating a specialization in itself in reliability modeling and prediction.  - reliability refers to the probability of failure free operation of any system.  - several parametric reliability growth models exist to influence the reliability of a product.  (vi)Performance evaluation and models:-  -Performance evaluation is an integral aspect of quality.  -Performance evaluation is a detailed observation of various factors, both internal and       external.  - external system performance factors like response times and completion rates.   - internal factors like working of the efficacy of algorithms.	6
what is software metrics Explain scope of software metrics in detail	A software metric is a measure of software characteristics which are quantifiable or countable. Software metrics are important for many reasons, including measuring software performance, planning work items, measuring productivity, and many other uses.    Within the software development process, there are many metrics that are all related to each other. Software metrics are related to the four functions of management: Planning, Organization, Control, or Improvement.  Benefits of Software Metrics:-  The goal of tracking and analyzing software metrics is to determine the quality of the current product or process, improve that quality and predict the quality once the software development project is complete. On a more granular level, software development managers are trying to:  Increase return on investment (ROI)  Identify areas of improvement  Manage workloads  Reduce overtime  Reduce costs  These goals can be achieved by providing information and clarity throughout the organization about complex software development projects. Metrics are an important component of quality assurance, management, debugging, performance, and estimating costs, and they’re valuable for both developers and development team leaders  -Managers can use software metrics to identify, prioritize, track and communicate any issues to foster better team productivity. This enables effective management and allows assessment and prioritization of problems within software development projects. The sooner managers can detect software problems, the easier and less-expensive the troubleshooting process.  -Software development teams can use software metrics to communicate the status of software development projects, pinpoint and address issues, and monitor, improve on, and better manage their workflow.	6
what is software metrics Explain scope of software metrics in detail	Software development metrics are quantitative measurements of a software product or project, which can help management understand software performance, quality, or the productivity and efficiency of software teams.  Metrics in Agile Software Development  The agile methodology has a unique approach to software development metrics and how to use them effectively. Leon Tranter presents three agile principles for software metrics:  Metrics should be used by the team—They should not be imposed by management, rather they should be useful for the team to assess and improve their own work.  Metrics should be part of a conversation—A metric is just a number, it should be combined into a deeper discussion about process and challenges faced by the team.  Metrics should be used as part of an investigation of the experiment—Agile teams should use metrics with a specific hypothesis in mind, not measure for the sake of measurement.  Software Development Metrics Examples:-  (i) Customer Satisfaction  A widely used and respected metric for customer satisfaction is Net Promoter Score (NPS). It a number ranging from -100 (indicating no customers refer you to others) to +100 (all customers likely to refer you to others). SurveyMonkey provides the full calculation for NPS and lets you set up a free NPS survey.  (ii) Team Velocity:-  Team Velocity measures the number of story points, quantifying the number and size of product features, completed by the team in the previous sprints. It helps to understand how much value the team is providing to customers in a given time period.  (iii) Release Burndown:-  A Release Burndown chart can help you understand, across an entire software release, how development is progressing, how much of the planned software functionality remains to be done, and when you can expect the release to be completed.  (iv) Escaped Defects:-  This metric checks, per release or product component, how many bugs or issues were identified after the software was already in production. This is a good indication of quality as perceived by the end user. If it’s increasing, it is a sign of a faulty quality process.  (v) True Test Coverage:-  We call this metric true test coverage as opposed to the regular test coverage metric, which only measures unit tests. This is a metric that tells you how much of your codebase or feature set is covered by all types of tests—unit, integration, UI automation, manual tests and end-to-end acceptance tests. It can reveal quality gaps—parts of the software that are new or actively used but do not have sufficient test coverage.	6
what is software metrics Explain scope of software metrics in detail	"In the representational theory, measurement is defined as ""the correlation of numbers with entities that are not numbers”. The most technically elaborated form of representational theory is also known as additive conjoint measurement. In this form of representational theory, numbers are assigned based on correspondences or similarities between the structure of number systems and the structure of qualitative systems. A property is quantitative if such structural similarities can be established. In weaker forms of representational theory, such as that implicit within the work of Stanley Smith Stevens, numbers need only be assigned according to a rule.  The concept of measurement is often misunderstood as merely the assignment of a value, but it is possible to assign a value in a way that is not a measurement in terms of the requirements of additive conjoint measurement. One may assign a value to a person's height, but unless it can be established that there is a correlation between measurements of height and empirical relations, it is not a measurement according to additive conjoint measurement theory. Likewise, computing and assigning arbitrary values, like the ""book value"" of an asset in accounting, is not a measurement because it does not satisfy the necessary criteria.  Three type of Representational theory  1) Empirical relation  In science, an empirical relationship is a relationship or correlation based solely on observation rather than theory. An empirical relationship requires only confirmatory data irrespective of theoretical basis  2) The rule of mapping  The real world is the Domain of mapping, and the mathematical world is the range. when we map the attribute to mathematical system, we have many choice for mapping and the range"	6
Explain meaningfulness in measurement	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  Measurement making the things measurable:-  -Measuring makes nonmeasurable things measurable.  -Measuring the unmeasurable improves our understanding of particular entities and attributes, making engineering more powerful.  Neglect of measurement in engineering:-  -We fail to set measurable targets for our software products. For example, in earlier phase we promise that our product will be user-friendly, reliable and maintainable but once project is complete, we can’t tell if we have met our goals.  -We fail to understand and qualify the component cost of software program, we can’t control overall cost of project if we are not measuring the relative cost of components.  -We do not qualify or predict the quality of product we produce, we can’t tell the user of product about reliability of product.  -We allow anecdote evidence to convince us to try yet another revolutionary new development technology, without doing careful controlled study to determine if the technology is efficient or effective.  Objectives of software measurement:-  (i)Manager’s perspective:-  (a)What does each process cost?  (b)How productive is the staff?  (c)How good is the code being with the product?  (d)Will the user be satisfied with the product?  (e)How can we improve?  (ii)Engineer’s perspective:-  (a)Are the requirements testable?  (b)Have the found all the faults?  (c)Have we met our product or process goals?  (d)What will happen in future?	7
Explain meaningfulness in measurement	-Measurement lets us understand the information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price of the products in the market.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose and determine what disease a patient is suffering from.  Measurement making the things measurable:-  -Measuring makes not measurable things measurable.  -Measuring the unmeasurable helps to understand the particular entities and attributes, it also helps in making engineering more powerful.  Measurement in software engineering:-  -Software engineer describes the collection of techniques that apply on engineering approach to the construction and support of software product.  - Software engineers have various activities like managing, planning, casting, analyzing, specifying, designing, testing and maintaining.  Measurement is used in all activities, so that we can understand and control the activities.  Neglect of measurement in engineering:-  -The software cannot be measured therefore we fail to set measurable targets for our software products. For example, in earlier phase we promise that our product will be user-friendly, reliable and maintainable but once project is complete, we can’t tell if we have met our goals.  -The qualify of the component cost of software program cannot be understood well by us, therefore the overall cost of the project cannot be controlled by us if we are not measuring the relative cost of components.  -We do not qualify or predict the quality of product we produce, we can’t tell the user of product about reliability of product.  -We allow anecdote evidence to convince us to try yet another revolutionary new development technology, without doing careful controlled study to determine if the technology is efficient or effective.  Objectives of software measurement:-  (i)Manager’s perspective:-  (a)What does each process cost?  (b)How productive is the staff?  (c)How good is the code being with the product?  (d)Will the user be satisfied with the product?  (ii)Engineer’s perspective:-  (a)Are the requirements testable?  (b)Have the found all the faults?	7
Explain meaningfulness in measurement	Measurement is that operation by which we compare a physical quantity with a unit chosen for that quantity. In science and engineering, we perform experiments. During experiments, we have to take readings. Thus all these experiments require some measurements to be made. During the production of mechanical products, we have to measure the parts so as to find whether the part is made as per the specifications. Thus measurements are necessary for production and quality control.  Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  When measurements are taken directly using tools, instruments, or other calibrated measuring devices, they are called direct measurements e.g. Measurement of the length of a table by meter scale.  Indirect Measurement:  When the measurement must be done through a formula or other calculations, the measurement is called indirect measurement e.g. Measurement of the radius of the Earth.  Units of Measurements:  For any measurement, a number and unit are required.	7
Explain meaningfulness in measurement	Measurement is that operation by which we compare a physical quantity with a unit chosen for that quantity. In science and engineering, we perform experiments. During experiments, we have to take readings. Thus all these experiments require some measurements to be made. During the production of mechanical products, we have to measure the parts so as to find whether the part is made as per the specifications. Thus measurements are necessary for production and quality control.  Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  When measurements are taken directly using tools, instruments, or other calibrated measuring devices, they are called direct measurements e.g. Measurement of the length of a table by meter scale.  Indirect Measurement:  When the measurement must be done through a formula or other calculations, the measurement is called indirect measurement e.g. Measurement of the radius of the Earth.  Units of Measurements:  For any measurement, a number and unit are required. When we say that the time is 5 second, then we mean that the said time is 5 times a certain standard time called 1 second.	7
Explain meaningfulness in measurement	Scientists use many skills as they investigate the world around them. They make observations by gathering information with their senses. Some observations are simple. For example, a simple observation would be figuring out the color or texture of an object. However, if scientists want to know more about a substance, they may need to take measurements. Measurement is perhaps one of the most fundamental concepts in science. Without the ability to measure, it would be difficult for scientists to conduct experiments or form theories.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  Direct measurement' refers to measuring exactly the thing that you are looking to measure.  Indirect Measurement:  Indirect measurement means that you're measuring something by measuring something else  Units of Measurements:  For any measurement, a number and unit are required. When we say that the time is 5 second, then we mean that the said time is 5 times a certain standard time called 1 second.  A unit is a selected magnitude of a physical variable in terms of which other magnitudes of the same variable can be expressed.	7
Explain meaningfulness in measurement	Measurement is the assignment of a number to a characteristic of an object or event, which can be compared with other objects or events. The scope and application of measurement are dependent on the context and discipline.  -Taking proper medicine. If you an illness (whether serious or minor) you need to take your medicine and take it in the proper amount. If you take too little or too much then you are not going to get the proper benefit from it.  -Playing sports. The importance of measurements may not necessarily reveal itself when you play sports but it is there in a big way. If you want to throw a runner out at first or make a 30 yard touchdown pass then you really need to be accurate and comes from a clear sense of depth and distance.  -Making estimations. If you have to be at school at 9am what time would you have to leave in the morning if you are at your friend's house. Often we do not have an exact answer so we need to make an estimation which is essentially a guess of measurement.  -Keeping yourself warm or cool. If the temperature outside dips or increases you have to make an adjustment on your thermostat in order to remain at a safe and healthy temperature. Understanding the measurement scale of a thermostat is critical in this regard or else you may find yourself feeling rather uncomfortable.  -Proper use of capacity. Just how many clothes can you fit in a dresser or closet without it becoming too crammed? Without a clear concept of capacity you might find yourself pouring an entire half gallon of orange juice into a small glass.  -Telling time. The ability to tell time is all based on measurement principles. Whether you are using a digital clock or an hourglass these devices measure the passage of time. Now, imagine how chaotic the world would be if was impossible to measure the passage of time.  -Understanding weight. Is that object too heavy to pick up by yourself or do you need to use something to lift it? Some may think this is not important but it is pretty easy to hurt yourself if you lift objects that are too heavy.	7
Explain the objectives for software measurement with the perspective of manager and engineer	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  -Entity is an object (such as person or room) or events (such as journey or testing phase of software) in the real world.  -An attribute is a feature or property of an entity (such as color of room, the cost of journey or elapsed time of testing phase).  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -In such a way the products quality is measured and is priced according to it.  -software engineering describes the collection of techniques that apply an engineering approach to the construction and support of software product.  -Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance.  -Measurement is used in all above activities, so each activity is understood and controlled.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?	7
Explain the objectives for software measurement with the perspective of manager and engineer	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -With the help of measurement we can get the information about attributes of entities.  -Entity is an objects like as person or room or even events such as journey or testing phase of software in the real world.  -An attribute is a feature, quality or property of an entity such as color of room, the cost of journey or elapsed time of testing phase.  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification.  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is also used in economics to determine prices of the products in the market.  -Measurement in radar system enables to detect aircraft as well as the submarines in water.  -Measurement is also used in the hospitals to help the doctors to  specify the disease the patient is suffering from.  -In such a way the products quality is measured and is priced according to it.  -Software engineering define the collection of techniques that apply an engineering approach to construct and support the software product.  -Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance.  -Measurement in software is used in all above activities, so each activity is understood and controlled.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?  -Measurement encourages us to improve our processes and products.	7
Explain the objectives for software measurement with the perspective of manager and engineer	Do you find development planning or improvement efforts to be less effective than expected? Are unexpected problems surfacing after release or during development? How many infrastructure problems are directly related to code quality or undetected risks? Software measurement is an engineering process meant to aid in assessing these areas:  Productivity  Code Quality  Code Complexity  Software Risk  Technical Debt  Compliance to Standards and Regulations  If your developers are not producing high-quality code or not meeting architecture standards, then numerous problems are likely to surface during or after application implementation. These include increased IT costs, additional maintenance efforts, and reduced security within a complex infrastructure. Software measurement and metrics provide an accurate, objective approach to evaluating these key factors. By having objective metrics, you can more easily identify improvement areas and monitor each effort made toward better development practices.  Software Measurement Function Points:-  Vulnerability Detection  Productivity Enhancements  Compliance Management  Development Practice Improvements  Additionally, software measurement function points offer insight for locating difficult to find vulnerabilities in a complex infrastructure where problems often exist in one or more tiers. The provided benchmarking measurement can also be used to ensure developers and outside providers are meeting defined architecture standards for each completed application. If your organization is not using software measurement to track and monitor these items, then various infrastructure problems might be a direct result of source code inefficiencies.    Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?	7
Explain the objectives for software measurement with the perspective of manager and engineer	Do you find development planning or improvement efforts to be less effective than expected? Are unexpected problems surfacing after release or during development? How many infrastructure problems are directly related to code quality or undetected risks? Software measurement is an engineering process meant to aid in assessing these areas:  Productivity  Code Quality  Code Complexity  Software Risk  Technical Debt  Software Size  Compliance to Standards and Regulations  If your developers are not producing high-quality code or not meeting architecture standards, then numerous problems are likely to surface during or after application implementation. These include increased IT costs, additional maintenance efforts, and reduced security within a complex infrastructure. Software measurement and metrics provide an accurate, objective approach to evaluating these key factors. By having objective metrics, you can more easily identify improvement areas and monitor each effort made toward better development practices.  Software Measurement Function Points:-  Several forms of analysis may be used to assess an application; however, software measurement function points provide a repeatable evaluation method. A function point represents a defined business task to be accomplished by an application. They are based on identified end user requirements and allow organizations to obtain a benchmarking score for continuously monitoring the above items. Each application must accomplish a set number of business functions, which can be automatically evaluated to aid in achieving:  Quality Assessments  Productivity Enhancements  Compliance Management  Development Practice Improvements  Additionally, software measurement function points offer insight for locating difficult to find vulnerabilities in a complex infrastructure where problems often exist in one or more tiers. The provided benchmarking measurement can also be used to ensure developers and outside providers are meeting defined architecture standards for each completed application. If your organization is not using software measurement to track and monitor these items, then various infrastructure problems might be a direct result of source code inefficiencies.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?	7
Explain the objectives for software measurement with the perspective of manager and engineer	Software Metrics is a collective term used to describe the very wide range of activities concerned with measurement in software engineering  Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined unambiguous rules.  Once measures are collected they are converted into metrics for use. IEEE defines metric as 'a quantitative measure of the degree to which a system, component, or process possesses a given attribute.' The goal of software metrics is to identify and control essential parameters that affect software development. Other objectives of using software metrics are listed below:  -Measuring the size of the software quantitatively.  -Assessing the level of complexity involved.  -Assessing the strength of the module by measuring coupling.  -Assessing the testing techniques.  -Specifying when to stop testing.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  d)Will the users be satisfied with the product?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?	7
Explain the objectives for software measurement with the perspective of manager and engineer	The framework for software measurement is based on four principles −  Classifying the entities to be examined  Determining relevant measurement goals  Identifying the level of maturity that the organization has reached  Classifying the Entities to be Examined  In software engineering, mainly three classes of entities exist. They are −  Processes  Products  Resources  All of these entities have internal as well as external entities.  Internal attributes are those that can be measured purely in terms of the process, product, or resources itself. For example: Size, complexity, dependency among modules.  External attributes are those that can be measured only with respect to its relation with the environment. For example: The total number of failures experienced by a user, the length of time it takes to search the database and retrieve information.  The different attributes that can be measured for each of the entities are as follows −  Processes  Processes are collections of software-related activities. Following are some of the internal attributes that can be measured directly for a process   The duration of the process or one of its activities  The effort associated with the process or one of its activities  The number of incidents of a specified type arising during the process or one of its activities  The different external attributes of a process are cost, controllability, effectiveness, quality and stability.  Products  Products are not only the items that the management is committed to deliver but also any artifact or document produced during the software life cycle.  The different internal product attributes are size, effort, cost, specification, length, functionality, modularity, reuse, redundancy, and syntactic correctness. Among these size, effort, and cost are relatively easy to measure than the others.  The different external product attributes are usability, integrity, efficiency, testability, reusability, portability, and interoperability. These attributes describe not only the code but also the other documents that support the development effort.  Resources  These are entities required by a process activity. It can be any input for the software production. It includes personnel, materials, tools and methods.  The different internal attributes for the resources are age, price, size, speed, memory size, temperature, etc. The different external attributes are productivity, experience, quality, usability, reliability, comfort etc.  Determining Relevant Measurement Goals  A particular measurement will be useful only if it helps to understand the process or one of its resultant products. The improvement in the process or products can be performed only when the project has clearly defined goals for processes and products. A clear understanding of goals can be used to generate suggested metrics for a given project in the context of a process maturity framework.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?	7
What is representational theory of measurement Explain in detail	There are many representational theory for measurement, some of them are as given below  (i)Empirical relation:-There are three types of Empirical relation depending upon the relation we define either on single element (entity) of a set or on collection of elements.  (a)Unary relation:-We define Empirical relation on individual (single) element or entity.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation:- We define relation between more than two entities.  For example, if there are three instances as given below  A is taller than B.  A is tallest, B is tall, C is not tall.  C is taller than A when sitting on B’s shoulder.    Given any two people, x and y, we can conclude that      x  is taller than y or     y is taller than x.  (iii)Representation condition of measurement:-  -Representation condition states that a measurement mapping M must map entities into numbers and Empirical relations into numerical relation (mathematical relation) in such a way that Empirical relations are preserved and are preserved by mathematical relations.  -Here Empirical relation “taller than” is mapped to the numerical relation “>”.  -We say that, A is taller than B if and only if M(A)>M(B).  -This statement implies that whenever A is taller than B, then M(A) must be a bigger number than M(B).  -We can say that A is higher number than B only if A is taller than B. For Empirical relation (binary) “taller than”, we have numerical relation A>B.  For unempirical relation, “is tall”, we have numerical relation A>70.  Then, representation condition requires that for any measure M   A is tall if and only if M(A)>70.	7
What is representational theory of measurement Explain in detail	There are several types of representational theory for measurement and some of them are given below  (i)Empirical relation:-In Empirical relation there are three types of relations depending on the relation we define on single element of a set or on collection  of elements.  (a)Unary relation:-We define the Empirical relation on single entity.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation :- We define relation between more than two entities. For example, if there are three instances as given below  (ii) Rules of mapping :-  -Real world is a domain of mapping and mathematical words is range of mapping.  -When the mapping of the attribute of entity from real world to the mathematical world, we have several types of mapping and range.  -Mapping could be different depending on the conventions we adopt.  -Measures should specify domain, range as well as rules of mapping . For example, height in inches, centimeters or feet. While measuring height we use different accord like measuring height when a person is standing or sitting , wearing shoes or not.  (iii)Representation condition of measurement:-  -Representation condition states that a measurement mapping M should map entities in numbers and Empirical relations in numerical relation in such a way that the Empirical relations are maintained and are maintained by the mathematical relations.	7
What is representational theory of measurement Explain in detail	Measurement tells us the rules laying the ground work for developing and reasoning about all kinds of measurement. It is the mapping from the empirical world to the formal relational world. Consequently, a measure is the number or symbol assigned to an entity by this mapping in order to characterize an entity.  Empirical Relations:-  In the real world, we understand the things by comparing them, not by assigning numbers to them.  For example, to compare height, we use the terms ‘taller than’, higher than’. Thus, these ‘taller than’, higher than’ are empirical relations for height.  We can define more than one empirical relation on the same set.  For example, X is taller than Y. X, Y are much taller than Z.  Empirical relations can be unary, binary, ternary, etc.  X is tall, Y is not tall are unary relations.  X is taller than Y is a binary relation.  Empirical relations in the real world can be mapped to a formal mathematical world. Mostly these relations reflect the personal preferences.  The Representational Condition of Measurement:-  The representational condition asserts that a measurement mapping (M) must map entities into numbers, and empirical relations into numerical relations in such a way that the empirical relations preserve and are preserved by numerical relations.  For example: The empirical relation ‘taller than’ is mapped to the numerical relation ‘>’.i.e., X is taller than Y, if and only if M(X) > M(Y)  Since, there can be many relations on a given set, the representational condition also has implications for each of these relations.	7
What is representational theory of measurement Explain in detail	Measurement tells us the rules laying the ground work for developing and reasoning about all kinds of measurement. It is the mapping from the empirical world to the formal relational world. Consequently, a measure is the number or symbol assigned to an entity by this mapping in order to characterize an entity.  Empirical Relations:-  In the real world, we understand the things by comparing them, not by assigning numbers to them.  For example, to compare height, we use the terms ‘taller than’, higher than’. Thus, these ‘taller than’, higher than’ are empirical relations for height.  We can define more than one empirical relation on the same set.  For example, X is taller than Y. X, Y are much taller than Z.  Empirical relations can be unary, binary, ternary, etc.  X is tall, Y is not tall are unary relations.  X is taller than Y is a binary relation.  Empirical relations in the real world can be mapped to a formal mathematical world. Mostly these relations reflect the personal preferences.  The Representational Condition of Measurement:-  The empirical relation ‘taller than’ is mapped to the numerical relation ‘>’.i.e., X is taller than Y, if and only if M(X) > M(Y)  Since, there can be many relations on a given set, the representational condition also has implications for each of these relations.  For the unary relation ‘is tall’, we might have the numerical relation  X > 50  The representational condition requires that for any measure M,  X is tall if and only if M(X) > 50.	7
What is representational theory of measurement Explain in detail	"In the representational theory, measurement is defined as ""the correlation of numbers with entities that are not numbers”. The most technically elaborated form of representational theory is also known as additive conjoint measurement. In this form of representational theory, numbers are assigned based on correspondences or similarities between the structure of number systems and the structure of qualitative systems. A property is quantitative if such structural similarities can be established. In weaker forms of representational theory, such as that implicit within the work of Stanley Smith Stevens, numbers need only be assigned according to a rule.  The concept of measurement is often misunderstood as merely the assignment of a value, but it is possible to assign a value in a way that is not a measurement in terms of the requirements of additive conjoint measurement. One may assign a value to a person's height, but unless it can be established that there is a correlation between measurements of height and empirical relations, it is not a measurement according to additive conjoint measurement theory. Likewise, computing and assigning arbitrary values, like the ""book value"" of an asset in accounting, is not a measurement because it does not satisfy the necessary criteria.  Three type of Representational theory  1) Empirical relation  In science, an empirical relationship is a relationship or correlation based solely on observation rather than theory. An empirical relationship requires only confirmatory data irrespective of theoretical basis  2) The rule of mapping  The real world is the Domain of mapping, and the mathematical world is the range. when we map the attribute to mathematical system, we have many choice for mapping and the range"	7
What is representational theory of measurement Explain in detail	The process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined rules.  The  idea behind the representational theory of measurement is elaborated in the following observations.  EMPIRICAL RELATIONS SYSTEM       The aim is to be able to compare entities. However, it is not automatic that any two   entities E  1   and E  2   are comparable. A comparison between E  1   and E  2   is about relating E  1     and E  2   with respect to some (salient) attribute.      Definition [Empirical Relations System]. Let E is the set of entities and R  E   is the set of   empirical relations for a (salient) attribute A. Then, an empirical relations system is a   couple (E, R  E  ).      The purpose of (E, R  E  ) is to define the intuitive meaning of A by identifying the   empirical relations that hold for A.      A relation can be defined on a single element of a set, or a collection of elements of a   set.      5.1. ORDERS OF RELATIONS      The relations can be classified in different ways, including whether they are unary,   binary, ternary, and so on.      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”.  EMPIRICAL RELATIONS SYSTEM       The aim is to be able to compare entities. However, it is not automatic that any two   entities E  1   and E  2   are comparable. A comparison between E  1   and E  2   is about relating E  1     and E  2   with respect to some (salient) attribute.      Definition [Empirical Relations System]. Let E is the set of entities and R  E   is the set of   empirical relations for a (salient) attribute A. Then, an empirical relations system is a   couple (E, R  E  ).      The purpose of (E, R  E  ) is to define the intuitive meaning of A by identifying the   empirical relations that hold for A.      A relation can be defined on a single element of a set, or a collection of elements of a   set.      5.1. ORDERS OF RELATIONS      The relations can be classified in different ways, including whether they are unary,   binary, ternary, and so on.      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”.  EMPIRICAL RELATIONS SYSTEM     The aim is to be able to compare entities. However, it is not automatic that any two entities E1 and E2 are comparable. A comparison between E1 and E2 is about relating E1 and E2 with respect to some (salient) attribute.    Definition. Let E is the set of entities and RE is the set of empirical relations for a (salient) attribute A. Then, an empirical relations system is a couple (E, RE).    The purpose of (E, RE) is to define the intuitive meaning of A by identifying the empirical relations that hold for A.    A relation can be defined on a single element of a set, or a collection of elements of a set.   ORDERS OF RELATIONS:-  The relations can be classified in different ways, including whether they are unary, binary, ternary, and so on.  For example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. For example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”.  It is possible to have other binary relations, such as, “much taller than”.  THE REPRESENTATION: THE MAPPING OF RELATIONS FROM THE   REAL WORLD TO THE MATHEMATICAL WORLD  THE REPRESENTATION: THE MAPPING OF RELATIONS FROM THE REAL WORLD TO THE MATHEMATICAL WORLD:-  A mapping from the empirical world to the formal, relational world.  This mapping, say, M, is called a representation  For example, the range could consist of integers,  real numbers, or non-numerical symbols  Another example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. In this case, the empirical relation “is tall” can be mapped to, for example, the numerical relation “x > 50”.     Another example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”. In this case, the empirical relation “is taller than” can be mapped, for example, to the numerical relation “x > y”  THE REPRESENTATION CONDITION:-  It is important that the behavior of measures in the number system be the same as in the real world since then, instead of studying the real world, one could study the mathematical world.    For example, once the height of a person has been measured, that data could be used subsequently by others and that data could be used subsequently for other purposes.    For that, the mapping must preserve the relation. This is the representation condition.  Let (E, R  E  ) be an empirical relation system and let (N, R  N  ) be a numerical relation   system. Then, a representation condition measuring an attribute characterized by (E, R  E  )   means associating (E, R  E  ) with (N, R  N  ) by using a mapping M.       In particular, M maps entities of E to numbers of N, and relations of R  E   to relations of   R  N  , so that every empirical relation is preserved.      Indeed, M is a homomorphism  1  .      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”. In this case, the representation condition requires that, for any   measure M, P is tall if and only if M(P) > 50.      For example, for the attribute height of entities that are humans, a binary empirical   relation is “is taller than”. In this case, the representation condition requires that, for   any measure M, P  1   is taller than P  2   if and only if M(P  1  ) > M(P  2  ).      1.  The If: If John is taller than Jane, then M(John) must be a larger number than   M(Jane).      2.  The Only If: Jill can be mapped to a higher number than Jack only if Jill is taller than   Jack.      In general, if M maps the empirical binary relation >  E   into the numerical relation >  N  , then   the representation condition is:       x >  E   y ⟺ M(x) >  N   M(y).      It could be noted that >  N   is equivalent to the conventional notion of ‘greater than’ (>), a   total order  2   on the set of real numbers.  Let (E, RE) be an empirical relation system and let (N, RN) be a numerical relation system. Then, a representation condition measuring an attribute characterized by (E, RE) means associating (E, RE) with (N, RN) by using a mapping M.	7
what is software metrics Explain scope of software metrics in detail	Software metrics is a term that provides many activities, all of which involves some degree of software measurement:-  (i)Cost and effort estimation:-  -We have to use cost and effort estimation models to predict the cost of project during earlier phases of software development life cycle.  -for example Boehm’s Cocomo model, Putnam’s SLIM model,  Regression based model, etc.  (ii)Productivity models and measures:-  -There are several measures and models or assessing the staff productivity during software process and indifferent environments.  -The productivity is a function of value and cast; each is then decomposed into other aspects expressed in measurable form.  (iii)Data collection:-  -The quality or any measurement program is clearly dependent on careful data collection. But collecting data is easier to said than done when data must be collected across a diverse set of projects.  -Data collection must be consistent and complete. It must be planned and executed in a careful and sensitive manner.  -Data collection is also essential for scientific investigation of relationships and trends.  (iv)Quality Models and measures:-  -Quality models such as Bohem’s quality model and MaCall quality model are used with productivity models.  -These models are constructed in a tree like fashion where upper branches holds high level quality factors of software product such as reliability, usability, etc.  -Each quality factor is composed of low level criteria such as structure, traceability, etc.  -Criteria is easier to understand and measure than factors.  (v)Reliability models:-  -Reliability is one of the most important factor in quality model but we need to predict and measure reliability of product.  -Reliability indicates probability of failure free operation.  -We have several parametric reliability growth models to increase the reliability of product. For example, Moronda, Littlewood, Littlewood vorall and Non Homogenous poisons process (NHPP) model.  (vi)Performance evaluation and models:-  -Performance is one of the most aspect of quality.  -Performance evaluation includes characteristics such as response time and completion rates.  -Performance evaluation covers internal working  of system including efficiency of complexity of algorithm.  (vii)Structure and complexity :-  -We measure structural attributes of representation of software which are available in advanced of execution.  -These structural attributes are used to predict which part of system are less reliable, more difficult to test or requires more maintenance than others.	7
what is software metrics Explain scope of software metrics in detail	There are many types of software metrics, Software metrics are used to measure the quality of the software.  (i)Cost effort estimation:-  -In the cost effort estimation, we use the models to predict the cost of the project before starting the work of developing the software life cycle.  (ii) Productivity models and measures:-  -There are many measures and models or evaluating the staff productivity at the time of process and common environments.  -The productivity is a function of value and cost; they are later divided into other aspects which can be measured.  (iii)Data collection:-  -The quality of the measurement program depend on how carefully the data is collected. Collecting the data is not an easy task when data to be collected is diverse set of projects.  (iv)Quality models and measures:-  -Quality models like the Bohem’s quality model and MaCall quality model are used with productivity models.  -These Models are constructed in a tree like fashion where the branches on the upper side contain the high level quality factors of the software product such as reliability, usability, user friendliness, etc.  -Each of the quality factor contains the low level criteria such as structure, traceability, etc.  (v)Reliability models:-  -Reliability is one of the most important component of quality model but we need to predict and measure the reliability of the product.  -Reliability shows probability of the failure free operation.  -There are several parameters for growth of the reliability of the models to increase the reliability of the product.  (vi)Performance evaluation and models:-  -The evaluation of the performance includes characteristics such as response time and completion rates.  -The evaluation of the performance covers the internal working of system as well as efficiency of the complexity of the algorithms.  (vii)Structure and complexity:-  -The structural attributes of representation of software are measured which are available in advanced of execution.  -Structure and complexity attributes are used to predict the part of the system which are less reliable, difficult to test or which requires more maintenance than the other parts of the system.	7
what is software metrics Explain scope of software metrics in detail	Software metrics refer to the standard of measure which holds properties of  any software system or processes. It provides the following activities for this purpose-  (i)Productivity models and measures:-  Productivity is a function of the value and cost incurred, both of which can be broken down into measurable forms.  The staff productivity during a software process and in varying environments can be assessed by several measures and models.  (ii)Data collection:-  - data collection is significant when it comes to the quality of any measurement program.  Although, data collection becomes challenging when data is collected across diverse range of projects.  - data collection requires consistent and whole information, planned and executed in a careful and sensitive manner with utmost integrity of research.  - scientific investigation of relationships and trends in society is also heavily dependent on the data collected for accurate results.    (iii)Quality Models and measures:-  -Quality models like Bohems quality model and MaCall quality model, and productivity models can be used together for higher accuracy.  -These models almost always are constructed in a tree-like manner with the upper branches indicating the highest level quality factors of any software product such as reliability, usability, etc.  - every quality factor consists of low level criteria like structure, traceability, etc.  - criteria helps in understanding and measuring the factors.  (iv)Reliability models:-  -Reliability functions as a significant factor is quality model, although it needs to be predicted and measured, therefore creating a specialization in itself in reliability modeling and prediction.  - reliability refers to the probability of failure free operation of any system.  - several parametric reliability growth models exist to influence the reliability of a product.   (v)Performance evaluation and models:-  -Performance evaluation is an integral aspect of quality.  - external system performance factors like response times and completion rates.   - internal factors like working of the efficacy of algorithms.  (vi)Structure and complexity :-  - the structural attributes of representation of software are measured which are available in advance of execution.  - the structural attributes help in prediction of the reliability, the difficulty and the requirement of maintenance of a part of any system.  (vii)Management by metrics:-  - managing a software project requires a vital role of measurement.  - measurement-based charts are highly reliable for customers, users, and developers alike to track the project’s progress.  - several organizations determine a specific set of measurements and reporting methods to compare and contrast the project.  - it helps in making customers understand the project progress better even without any pre requisite knowledge in software terminology or jargon.	7
what is software metrics Explain scope of software metrics in detail	Software metrics refer to the standard of measure which holds properties of  any software system or processes. It provides the following activities for this purpose-  (i)Productivity models and measures:-  Productivity is a function of the value and cost incurred, both of which can be broken down into measurable forms.  The staff productivity during a software process and in varying environments can be assessed by several measures and models.  (ii)Data collection:-  - data collection is significant when it comes to the quality of any measurement program.  Although, data collection becomes challenging when data is collected across diverse range of projects.  - data collection requires consistent and whole information, planned and executed in a careful and sensitive manner with utmost integrity of research.  - scientific investigation of relationships and trends in society is also heavily dependent on the data collected for accurate results.    (iii)Quality Models and measures:-  -Quality models like Bohems quality model and MaCall quality model, and productivity models can be used together for higher accuracy.  -These models almost always are constructed in a tree-like manner with the upper branches indicating the highest level quality factors of any software product such as reliability, usability, etc.  - every quality factor consists of low level criteria like structure, traceability, etc.  - criteria helps in understanding and measuring the factors.  (iv)Reliability models:-  -Reliability functions as a significant factor is quality model, although it needs to be predicted and measured, therefore creating a specialization in itself in reliability modeling and prediction.  - reliability refers to the probability of failure free operation of any system.  - several parametric reliability growth models exist to influence the reliability of a product. Example-  Moronda, Littlewood vorall and Nonhomogeneous poisons process (NHPP)  Model.  (v)Performance evaluation and models:-  -Performance evaluation is an integral aspect of quality.  -Performance evaluation is a detailed observation of various factors, both internal and       external.  - external system performance factors like response times and completion rates.   - internal factors like working of the efficacy of algorithms.  (vi)Structure and complexity :-  - the structural attributes of representation of software are measured which are available in advance of execution.  - the structural attributes help in prediction of the reliability, the difficulty and the requirement of maintenance of a part of any system.  (vii)Evaluation of Methods and tools:-  - new methods and tools are devised by organizations to make products better and cheaper.  - these new methods and tools are tested, experimented and surveyed to decide the potential outcome it will make in the particular situation.  - this evaluation is carried out with good experimental design, appropriate identification of factors which affect outcome and proper measurements of factor attributes.	7
what is software metrics Explain scope of software metrics in detail	A software metric is a measure of software characteristics which are quantifiable or countable. Software metrics are important for many reasons, including measuring software performance, planning work items, measuring productivity, and many other uses.    Within the software development process, there are many metrics that are all related to each other. Software metrics are related to the four functions of management: Planning, Organization, Control, or Improvement.  Benefits of Software Metrics:-  The goal of tracking and analyzing software metrics is to determine the quality of the current product or process, improve that quality and predict the quality once the software development project is complete. On a more granular level, software development managers are trying to:  Increase return on investment (ROI)  Identify areas of improvement  Manage workloads  Reduce overtime  Reduce costs  These goals can be achieved by providing information and clarity throughout the organization about complex software development projects. Metrics are an important component of quality assurance, management, debugging, performance, and estimating costs, and they’re valuable for both developers and development team leaders:  -Managers can use software metrics to identify, prioritize, track and communicate any issues to foster better team productivity. This enables effective management and allows assessment and prioritization of problems within software development projects. The sooner managers can detect software problems, the easier and less-expensive the troubleshooting process.  -Software development teams can use software metrics to communicate the status of software development projects, pinpoint and address issues, and monitor, improve on, and better manage their workflow.  Software metrics offer an assessment of the impact of decisions made during software development projects. This helps managers assess and prioritize objectives and performance goals.	7
what is software metrics Explain scope of software metrics in detail	Software development metrics are quantitative measurements of a software product or project, which can help management understand software performance, quality, or the productivity and efficiency of software teams.  Types of Software Metrics  Formal code metrics—Such as Lines of Code (LOC), code complexity, Instruction Path Length, etc. In modern development environments, these are considered less useful.  Developer productivity metrics—Such as active days, assignment scope, efficiency and code churn. These metrics can help you understand how much time and work developers are investing in a software project.  Agile process metrics—Such as lead time, cycle time and velocity. They measure the progress of a dev team in producing working, shipping-quality software features.  Operational metrics—Such as Mean Time Between Failures (MTBF) and Mean Time to Recover (MTTR). This checks how software is running in production and how effective operations staff are at maintaining it.  Metrics in Agile Software Development  The agile methodology has a unique approach to software development metrics and how to use them effectively. Leon Tranter presents three agile principles for software metrics:  Metrics should be used by the team—They should not be imposed by management, rather they should be useful for the team to assess and improve their own work.  Metrics should be part of a conversation—A metric is just a number, it should be combined into a deeper discussion about process and challenges faced by the team.  Software Development Metrics Examples:-  (i) Customer Satisfaction  A widely used and respected metric for customer satisfaction is Net Promoter Score (NPS). It a number ranging from -100 (indicating no customers refer you to others) to +100 (all customers likely to refer you to others). SurveyMonkey provides the full calculation for NPS and lets you set up a free NPS survey.  (ii) Team Velocity:-  Team Velocity measures the number of story points, quantifying the number and size of product features, completed by the team in the previous sprints. It helps to understand how much value the team is providing to customers in a given time period.  (iii) Release Burndown:-  A Release Burndown chart can help you understand, across an entire software release, how development is progressing, how much of the planned software functionality remains to be done, and when you can expect the release to be completed.	7
Explain meaningfulness in measurement	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  Measurement making the things measurable:-  -Measuring makes nonmeasurable things measurable.  -Measuring the unmeasurable improves our understanding of particular entities and attributes, making engineering more powerful.  Measurement in software engineering:-  -Software engineer describes the collection of techniques that apply on engineering approach to the construction and support of software product.  - Software engineer includes various activities like managing, planning, casting, analyzing, specifying, designing, testing and maintaining.  Measurement is used in all activities, so each activity is understood and controlled.  Neglect of measurement in engineering:-  -We fail to set measurable targets for our software products. For example, in earlier phase we promise that our product will be user-friendly, reliable and maintainable but once project is complete, we can’t tell if we have met our goals.  -We fail to understand and qualify the component cost of software program, we can’t control overall cost of project if we are not measuring the relative cost of components.  -We do not qualify or predict the quality of product we produce, we can’t tell the user of product about reliability of product.  -We allow anecdote evidence to convince us to try yet another revolutionary new development technology, without doing careful controlled study to determine if the technology is efficient or effective.  Objectives of software measurement:-  (i)Manager’s perspective:-  (a)What does each process cost?  (b)How productive is the staff?  (c)How good is the code being with the product?  (d)Will the user be satisfied with the product?  (e)How can we improve?  (ii)Engineer’s perspective:-  (a)Are the requirements testable?  (b)Have the found all the faults?  (c)Have we met our product or process goals?  (d)What will happen in future?	8
Explain meaningfulness in measurement	Measurement is that operation by which we compare a physical quantity with a unit chosen for that quantity. In science and engineering, we perform experiments. During experiments, we have to take readings. Thus all these experiments require some measurements to be made. During the production of mechanical products, we have to measure the parts so as to find whether the part is made as per the specifications. Thus measurements are necessary for production and quality control.  Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  When measurements are taken directly using tools, instruments, or other calibrated measuring devices, they are called direct measurements e.g. Measurement of the length of a table by meter scale.  Indirect Measurement:  When the measurement must be done through a formula or other calculations, the measurement is called indirect measurement e.g. Measurement of the radius of the Earth.  Units of Measurements:  For any measurement, a number and unit are required. When we say that the time is 5 second, then we mean that the said time is 5 times a certain standard time called 1 second.  A unit is a selected magnitude of a physical variable in terms of which other magnitudes of the same variable can be expressed. Measurement without unit has no meaning.	8
Explain meaningfulness in measurement	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  Measurement making the things measurable:-  -Measuring makes nonmeasurable things measurable.  -Measuring the unmeasurable improves our understanding of particular entities and attributes, making engineering more powerful.  Neglect of measurement in engineering:-  -We fail to set measurable targets for our software products. For example, in earlier phase we promise that our product will be user-friendly, reliable and maintainable but once project is complete, we can’t tell if we have met our goals.  -We fail to understand and qualify the component cost of software program, we can’t control overall cost of project if we are not measuring the relative cost of components.  -We do not qualify or predict the quality of product we produce, we can’t tell the user of product about reliability of product.  -We allow anecdote evidence to convince us to try yet another revolutionary new development technology, without doing careful controlled study to determine if the technology is efficient or effective.  Objectives of software measurement:-  (i)Manager’s perspective:-  (a)What does each process cost?  (b)How productive is the staff?  (c)How good is the code being with the product?  (d)Will the user be satisfied with the product?  (e)How can we improve?  (ii)Engineer’s perspective:-  (a)Are the requirements testable?  (b)Have the found all the faults?  (c)Have we met our product or process goals?  (d)What will happen in future?  Measurement for understanding, control and improvement:-  -Measurement help us to understand what is happening during the development or maintenance.  -Measurement allows us to control what is happening on our projects.  -Measurement encourages us to improve our process and products.	8
Explain meaningfulness in measurement	Measurement in everyday life:-  -Measurement is used in economics to determine price of the products in the market.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose and determine what disease a patient is suffering from.  Measurement making the things measurable:-  -Measuring makes not measurable things measurable.  -Measuring the unmeasurable helps to understand the particular entities and attributes, it also helps in making engineering more powerful.  Measurement in software engineering:-  -Software engineer describes the collection of techniques that apply on engineering approach to the construction and support of software product.  - Software engineers have various activities like managing, planning, casting, analyzing, specifying, designing, testing and maintaining.  Measurement is used in all activities, so that we can understand and control the activities.  Neglect of measurement in engineering:-  -The software cannot be measured therefore we fail to set measurable targets for our software products. For example, in earlier phase we promise that our product will be user-friendly, reliable and maintainable but once project is complete, we can’t tell if we have met our goals.  -The qualify of the component cost of software program cannot be understood well by us, therefore the overall cost of the project cannot be controlled by us if we are not measuring the relative cost of components.  -We do not qualify or predict the quality of product we produce, we can’t tell the user of product about reliability of product.  -We allow anecdote evidence to convince us to try yet another revolutionary new development technology, without doing careful controlled study to determine if the technology is efficient or effective.  Objectives of software measurement:-  (i)Manager’s perspective:-  (a)What does each process cost?  (b)How productive is the staff?  (c)How good is the code being with the product?  (ii)Engineer’s perspective:-  (a)Are the requirements testable?  (b)Have the found all the faults?  Measurement for understanding, control and improvement:-  -Measurement help us to understand what is happening during the development or maintenance.	8
Explain meaningfulness in measurement	Scientists use many skills as they investigate the world around them. They make observations by gathering information with their senses. Some observations are simple. For example, a simple observation would be figuring out the color or texture of an object. However, if scientists want to know more about a substance, they may need to take measurements. Measurement is perhaps one of the most fundamental concepts in science. Without the ability to measure, it would be difficult for scientists to conduct experiments or form theories. Not only is measurement important in science and the chemical industry, it is also essential in farming, engineering, construction, manufacturing, commerce, and numerous other occupations and activities. The word “measurement” comes from the Greek word “metron,” which means “limited proportion.” Measurement is a technique in which properties of an object are determined by comparing them to a standard. Measurements require tools and provide scientists with a quantity. A quantity describes how much of something there is or how many there are. A good example of measurement is using a ruler to find the length of an object. The object is whatever you are measuring, the property you are trying to determine is the object’s length, and the standard you are comparing the object’s length to is the ruler.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  Units of Measurements:  For any measurement, a number and unit are required. When we say that the time is 5 second, then we mean that the said time is 5 times a certain standard time called 1 second.  A unit is a selected magnitude of a physical variable in terms of which other magnitudes of the same variable can be expressed. Measurement without unit has no meaning.  Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement	8
Explain meaningfulness in measurement	Measurement is the assignment of a number to a characteristic of an object or event, which can be compared with other objects or events. The scope and application of measurement are dependent on the context and discipline.  -Cooking properly. Cooking of all forms is based on proper attention to measurement. Can you bake a chicken at 600 degrees? Well, you can but the results would be pretty catastrophic! Could you may a cup of tea by dipping a tea bag into a teaspoon of warm water?  -Purchasing clothes. Now, how important could measurements be when selecting clothes? After all, to look good in clothing the main thing you need to pay attention to is style, right? Well, if you weigh 200lbs you aren't going to look stylish in an extra small shirt. Clothing is all based on size and proper fitting which are, of course, variants of measurement.  -Playing sports. The importance of measurements may not necessarily reveal itself when you play sports but it is there in a big way. If you want to throw a runner out at first or make a 30 yard touchdown pass then you really need to be accurate and comes from a clear sense of depth and distance.  -Making estimations. If you have to be at school at 9am what time would you have to leave in the morning if you are at your friend's house. Often we do not have an exact answer so we need to make an estimation which is essentially a guess of measurement.  -Keeping yourself warm or cool. If the temperature outside dips or increases you have to make an adjustment on your thermostat in order to remain at a safe and healthy temperature. Understanding the measurement scale of a thermostat is critical in this regard or else you may find yourself feeling rather uncomfortable.  -Understanding weight. Is that object too heavy to pick up by yourself or do you need to use something to lift it? Some may think this is not important but it is pretty easy to hurt yourself if you lift objects that are too heavy.  -Proper use of capacity. Just how many clothes can you fit in a dresser or closet without it becoming too crammed? Without a clear concept of capacity you might find yourself pouring an entire half gallon of orange juice into a small glass.  -Telling time. The ability to tell time is all based on measurement principles. Whether you are using a digital clock or an hourglass these devices measure the passage of time. Now, imagine how chaotic the world would be if was impossible to measure the passage of time.	8
Explain the objectives for software measurement with the perspective of manager and engineer	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  -Entity is an object (such as person or room) or events (such as journey or testing phase of software) in the real world.  -An attribute is a feature or property of an entity (such as color of room, the cost of journey or elapsed time of testing phase).  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -In such a way the products quality is measured and is priced according to it.  -software engineering describes the collection of techniques that apply an engineering approach to the construction and support of software product.  -Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance.  -Measurement is used in all above activities, so each activity is understood and controlled.  -Measurement help us to understand what is happening during development or maintenance.  -Measurement allow us to control what is happening on our projects.  -Measurement encourages us to improve our processes and products.	8
Explain the objectives for software measurement with the perspective of manager and engineer	Do you find development planning or improvement efforts to be less effective than expected? Are unexpected problems surfacing after release or during development? How many infrastructure problems are directly related to code quality or undetected risks? Software measurement is an engineering process meant to aid in assessing these areas:  Productivity  Code Quality  Code Complexity  Software Risk  Technical Debt  Software Size  Compliance to Standards and Regulations  If your developers are not producing high-quality code or not meeting architecture standards, then numerous problems are likely to surface during or after application implementation. These include increased IT costs, additional maintenance efforts, and reduced security within a complex infrastructure. Software measurement and metrics provide an accurate, objective approach to evaluating these key factors. By having objective metrics, you can more easily identify improvement areas and monitor each effort made toward better development practices.  Software Measurement Function Points:-  Several forms of analysis may be used to assess an application; however, software measurement function points provide a repeatable evaluation method. A function point represents a defined business task to be accomplished by an application. They are based on identified end user requirements and allow organizations to obtain a benchmarking score for continuously monitoring the above items. Each application must accomplish a set number of business functions, which can be automatically evaluated to aid in achieving:  Vulnerability Detection  Quality Assessments  Productivity Enhancements  Compliance Management  Development Practice Improvements  Additionally, software measurement function points offer insight for locating difficult to find vulnerabilities in a complex infrastructure where problems often exist in one or more tiers. The provided benchmarking measurement can also be used to ensure developers and outside providers are meeting defined architecture standards for each completed application. If your organization is not using software measurement to track and monitor these items, then various infrastructure problems might be a direct result of source code inefficiencies.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  d)Will the users be satisfied with the product?  e)How can we improve?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?  d)What will happen in future?	8
Explain the objectives for software measurement with the perspective of manager and engineer	-Measurement captures information about attributes of entities.  -Entity is an object (such as person or room) or events (such as journey or testing phase of software) in the real world.  -An attribute is a feature or property of an entity (such as color of room, the cost of journey or elapsed time of testing phase).  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -In such a way the products quality is measured and is priced according to it.  -software engineering describes the collection of techniques that apply an engineering approach to the construction and support of software product.  -Measurement is used in all above activities, so each activity is understood and controlled.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  d)Will the users be satisfied with the product?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?  d)What will happen in future?	8
Explain the objectives for software measurement with the perspective of manager and engineer	With the help of measurement we can get the information about attributes of entities.  -Entity is an objects like as person or room or even events such as journey or testing phase of software in the real world.  -An attribute is a feature, quality or property of an entity such as color of room, the cost of journey or elapsed time of testing phase.  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification.  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is also used in economics to determine prices of the products in the market.  -Measurement in radar system enables to detect aircraft as well as the submarines in water.  -Measurement is also used in the hospitals to help the doctors to  specify the disease the patient is suffering from.  -In such a way the products quality is measured and is priced according to it.  -Software engineering define the collection of techniques that apply an engineering approach to construct and support the software product.  -Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance.  -Measurement in software is used in all above activities, so each activity is understood and controlled.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?  -Measurement allow us to control what is happening on our projects.  -Measurement encourages us to improve our processes and products.	8
Explain the objectives for software measurement with the perspective of manager and engineer	Software Metrics is a collective term used to describe the very wide range of activities concerned with measurement in software engineering  Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined unambiguous rules.  Once measures are collected they are converted into metrics for use. IEEE defines metric as 'a quantitative measure of the degree to which a system, component, or process possesses a given attribute.' The goal of software metrics is to identify and control essential parameters that affect software development. Other objectives of using software metrics are listed below:  -Measuring the size of the software quantitatively.  -Assessing the level of complexity involved.  -Assessing the strength of the module by measuring coupling.  -Assessing the testing techniques.  -Specifying when to stop testing.  -Determining the date of release of the software.  -Estimating cost of resources and project schedule.  Software metrics help project managers to gain an insight into the efficiency of the software process, project, and product. This is possible by collecting quality and productivity data and then analyzing and comparing these data with past averages in order to know whether quality improvements have occurred. Also, when metrics are applied in a consistent manner, it helps in project planning and project management activity. For example, schedule-based resource allocation can be effectively enhanced with the help of metrics.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?	8
Explain the objectives for software measurement with the perspective of manager and engineer	The framework for software measurement is based on four principles −  Classifying the entities to be examined  Determining relevant measurement goals  Identifying the level of maturity that the organization has reached  Classifying the Entities to be Examined  In software engineering, mainly three classes of entities exist. They are −  Processes  Products  Resources  respect to its relation with the environment. For example: The total number of failures experienced by a user, the length of time it takes to search the database and retrieve information.  The different attributes that can be measured for each of the entities are as follows −  Processes  Processes are collections of software-related activities. Following are some of the internal attributes that can be measured directly for a process   The duration of the process or one of its activities  The effort associated with the process or one of its activities  The number of incidents of a specified type arising during the process or one of its activities  The different external attributes of a process are cost, controllability, effectiveness, quality and stability.  Products  Products are not only the items that the management is committed to deliver but also any artifact or document produced during the software life cycle.  The different internal product attributes are size, effort, cost, specification, length, functionality, modularity, reuse, redundancy, and syntactic correctness. Among these size, effort, and cost are relatively easy to measure than the others.  The different external product attributes are usability, integrity, efficiency, testability, reusability, portability, and interoperability. These attributes describe not only the code but also the other documents that support the development effort.  Resources  These are entities required by a process activity. It can be any input for the software production. It includes personnel, materials, tools and methods.  The different internal attributes for the resources are age, price, size, speed, memory size, temperature, etc. The different external attributes are productivity, experience, quality, usability, reliability, comfort etc.  Determining Relevant Measurement Goals  A particular measurement will be useful only if it helps to understand the process or one of its resultant products. The improvement in the process or products can be performed only when the project has clearly defined goals for processes and products. A clear understanding of goals can be used to generate suggested metrics for a given project in the context of a process maturity framework.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?    d)What will happen in future?	8
What is representational theory of measurement Explain in detail	There are many representational theory for measurement, some of them are as given below  (i)Empirical relation:-There are three types of Empirical relation depending upon the relation we define either on single element (entity) of a set or on collection of elements.  (a)Unary relation:-We define Empirical relation on individual (single) element or entity.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation:- We define relation between more than two entities.  (ii)Rules of mapping:-  -Real world is the domain of mapping and mathematical world is range of mapping.  -When we have map the attribute of entity from real world to mathematical world, we have many choices for mapping and range.  -Mapping may be different depending upon conventions we adopt.  -Measures must specify domain, range as well as rules of mapping.  (iii)Representation condition of measurement:-  -Representation condition states that a measurement mapping M must map entities into numbers and Empirical relations into numerical relation (mathematical relation) in such a way that Empirical relations are preserved and are preserved by mathematical relations.	8
What is representational theory of measurement Explain in detail	Measurement tells us the rules laying the ground work for developing and reasoning about all kinds of measurement. It is the mapping from the empirical world to the formal relational world. Consequently, a measure is the number or symbol assigned to an entity by this mapping in order to characterize an entity.  Empirical Relations:-  In the real world, we understand the things by comparing them, not by assigning numbers to them.  For example, to compare height, we use the terms ‘taller than’, higher than’. Thus, these ‘taller than’, higher than’ are empirical relations for height.  We can define more than one empirical relation on the same set.  For example, X is taller than Y. X, Y are much taller than Z.  Empirical relations can be unary, binary, ternary, etc.  X is tall, Y is not tall are unary relations.  X is taller than Y is a binary relation.  Empirical relations in the real world can be mapped to a formal mathematical world. Mostly these relations reflect the personal preferences.  The Representational Condition of Measurement:-  The representational condition asserts that a measurement mapping (M) must map entities into numbers, and empirical relations into numerical relations in such a way that the empirical relations preserve and are preserved by numerical relations.  For example: The empirical relation ‘taller than’ is mapped to the numerical relation ‘>’.i.e., X is taller than Y, if and only if M(X) > M(Y)  Since, there can be many relations on a given set, the representational condition also has implications for each of these relations.  For the unary relation ‘is tall’, we might have the numerical relation  X > 50  The representational condition requires that for any measure M,  X is tall if and only if M(X) > 50.	8
What is representational theory of measurement Explain in detail	There are many representational theory for measurement, some of them are as given below  (i)Empirical relation:-There are three types of Empirical relation depending upon the relation we define either on single element (entity) of a set or on collection of elements.  (a)Unary relation:-We define Empirical relation on individual (single) element or entity.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation:- We define relation between more than two entities.  For example, if there are three instances as given below  A is taller than B.  A is tallest, B is tall, C is not tall.  C is taller than A when sitting on B’s shoulder.  Given any two people, x and y, we can conclude that      x  is taller than y or     y is taller than x.  (ii)Rules of mapping:-  -Real world is the domain of mapping and mathematical world is range of mapping.  -When we have map the attribute of entity from real world to mathematical world, we have many choices for mapping and range. i.e.:-We can use real numbers, integers or non-numeric symbols in mathematical system.  -Mapping may be different depending upon conventions we adopt.  -Measures must specify domain, range as well as rules of mapping. For example, If we want to measure the height of person then we measure height in inches, centimeters or feet’s. While measuring height we use different conventions like measuring height when person is standing or sitting, wearing shoes or not.  (iii)Representation condition of measurement:-  -Representation condition states that a measurement mapping M must map entities into numbers and Empirical relations into numerical relation (mathematical relation) in such a way that Empirical relations are preserved and are preserved by mathematical relations.  -Here Empirical relation “taller than” is mapped to the numerical relation “>”.  -We say that, A is taller than B if and only if M(A)>M(B).  For unempirical relation, “is tall”, we have numerical relation A>70.	8
What is representational theory of measurement Explain in detail	There are several types of representational theory for measurement and some of them are given below  (i)Empirical relation:-In Empirical relation there are three types of relations depending on the relation we define on single element of a set or on collection  of elements.  (a)Unary relation  (b)Binary relation  (c)Ternary relation  A is taller than B.  A is tallest, B is tall, C is not tall.  C is taller than A when sitting on B’s shoulder.  Given any two people, x and y, we can say that   x  is taller than y or  y is taller than x.  Therefore we can say that “taller than” is a Empirical relation (binary) for height.  Similarly “is tall” is a unary Empirical relation.  (ii) Rules of mapping :-  -Real world is a domain of mapping and mathematical words is range of mapping.  -When the mapping of the attribute of entity from real world to the mathematical world, we have several types of mapping and range.  -Mapping could be different depending on the conventions we adopt.  -Measures should specify domain, range as well as rules of mapping . For example, height in inches, centimeters or feet. While measuring height we use different accord like measuring height when a person is standing or sitting , wearing shoes or not.  (iii)Representation condition of measurement:-  -We can say that the person A is taller than the person B if and only if M(A)>(B).  -This statement implies that whenever the person A is taller than person B, then M(A) must be a bigger number than M(B).  -If the person A is taller than the person B, we can say that A is a higher number than B. For Empirical relation “taller than”, we get the numerical relation A>B.  For unempirical relation, “is tall”, we have numerical relation A>70.  Then, representation condition requires that for any measure M   A is tall if and only if M(A)>70.	8
What is representational theory of measurement Explain in detail	"In the representational theory, measurement is defined as ""the correlation of numbers with entities that are not numbers”. The most technically elaborated form of representational theory is also known as additive conjoint measurement. In this form of representational theory, numbers are assigned based on correspondences or similarities between the structure of number systems and the structure of qualitative systems. A property is quantitative if such structural similarities can be established. In weaker forms of representational theory, such as that implicit within the work of Stanley Smith Stevens, numbers need only be assigned according to a rule.  The concept of measurement is often misunderstood as merely the assignment of a value, but it is possible to assign a value in a way that is not a measurement in terms of the requirements of additive conjoint measurement. One may assign a value to a person's height, but unless it can be established that there is a correlation between measurements of height and empirical relations, it is not a measurement according to additive conjoint measurement theory. Likewise, computing and assigning arbitrary values, like the ""book value"" of an asset in accounting, is not a measurement because it does not satisfy the necessary criteria.  Three type of Representational theory  1) Empirical relation  In science, an empirical relationship is a relationship or correlation based solely on observation rather than theory. An empirical relationship requires only confirmatory data irrespective of theoretical basis  2) The rule of mapping  The real world is the Domain of mapping, and the mathematical world is the range. when we map the attribute to mathematical system, we have many choice for mapping and the range  3) The representation condition of measurement  Information theory  Information theory recognizes that all data are inexact and statistical in nature. Thus the definition of measurement is: ""A set of observations that reduce uncertainty where the result is expressed as a quantity."" This definition is implied in what scientists actually do when they measure something and report both the mean and statistics of the measurements. In practical terms, one begins with an initial guess as to the expected value of a quantity, and then, using various methods and instruments, reduces the uncertainty in the value."	8
What is representational theory of measurement Explain in detail	EMPIRICAL RELATIONS SYSTEM     The aim is to be able to compare entities. However, it is not automatic that any two entities E1 and E2 are comparable. A comparison between E1 and E2 is about relating E1 and E2 with respect to some (salient) attribute.    Definition. Let E is the set of entities and RE is the set of empirical relations for a (salient) attribute A. Then, an empirical relations system is a couple (E, RE).    The purpose of (E, RE) is to define the intuitive meaning of A by identifying the empirical relations that hold for A.   ORDERS OF RELATIONS:-  The relations can be classified in different ways, including whether they are unary, binary, ternary, and so on.  For example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. For example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”.  It is possible to have other binary relations, such as, “much taller than”.  THE REPRESENTATION: THE MAPPING OF RELATIONS FROM THE REAL WORLD TO THE MATHEMATICAL WORLD:-  A mapping from the empirical world to the formal, relational world.  This mapping, say, M, is called a representation  For example, the range could consist of integers,  real numbers, or non-numerical symbols  Another example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. In this case, the empirical relation “is tall” can be mapped to, for example, the numerical relation “x > 50”.     THE REPRESENTATION CONDITION:-  It is important that the behavior of measures in the number system be the same as in the real world since then, instead of studying the real world, one could study the mathematical world.    For example, once the height of a person has been measured, that data could be used subsequently by others and that data could be used subsequently for other purposes.    For that, the mapping must preserve the relation. This is the representation condition.  Let (E, R  E  ) be an empirical relation system and let (N, R  N  ) be a numerical relation   system. Then, a representation condition measuring an attribute characterized by (E, R  E  )   means associating (E, R  E  ) with (N, R  N  ) by using a mapping M.       In particular, M maps entities of E to numbers of N, and relations of R  E   to relations of   R  N  , so that every empirical relation is preserved.      Indeed, M is a homomorphism  1  .      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”. In this case, the representation condition requires that, for any   measure M, P is tall if and only if M(P) > 50.      For example, for the attribute height of entities that are humans, a binary empirical   relation is “is taller than”. In this case, the representation condition requires that, for   any measure M, P  1   is taller than P  2   if and only if M(P  1  ) > M(P  2  ).      1.  The If: If John is taller than Jane, then M(John) must be a larger number than   M(Jane).      2.  The Only If: Jill can be mapped to a higher number than Jack only if Jill is taller than   Jack.      In general, if M maps the empirical binary relation >  E   into the numerical relation >  N  , then   the representation condition is:       x >  E   y ⟺ M(x) >  N   M(y).      It could be noted that >  N   is equivalent to the conventional notion of ‘greater than’ (>), a   total order  2   on the set of real numbers.  Let (E, RE) be an empirical relation system and let (N, RN) be a numerical relation system. Then, a representation condition measuring an attribute characterized by (E, RE) means associating (E, RE) with (N, RN) by using a mapping M.     In particular, M maps entities of E to numbers of N, and relations of RE to relations of RN, so that every empirical relation is preserved.    Indeed, M is a homomorphism1.    For example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. In this case, the representation condition requires that, for any measure M, P is tall if and only if M(P) > 50.    For example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”. In this case, the representation condition requires that, for any measure M, P1 is taller than P2 if and only if M(P1) > M(P2).    The If: If John is taller than Jane, then M(John) must be a larger number than M(Jane).      The Only If: Jill can be mapped to a higher number than Jack only if Jill is taller than Jack.    In general, if M maps the empirical binary relation >E into the numerical relation >N, then the representation condition is:     x >E y ⟺ M(x) >N M(y).    It could be noted that >N is equivalent to the conventional notion of ‘greater than’ (>), a total order2 on the set of real numbers.	8
what is software metrics Explain scope of software metrics in detail	Software metrics is a term that provides many activities, all of which involves some degree of software measurement:-  (i)Cost and effort estimation:-  -We have to use cost and effort estimation models to predict the cost of project during earlier phases of software development life cycle.  (ii)Productivity models and measures:-  -There are several measures and models or assessing the staff productivity during software process and indifferent environments.  -The productivity is a function of value and cast; each is then decomposed into other aspects expressed in measurable form.  (iii)Data collection:-  -The quality or any measurement program is clearly dependent on careful data collection. But collecting data is easier to said than done when data must be collected across a diverse set of projects.  -Data collection must be consistent and complete. It must be planned and executed in a careful and sensitive manner.  -Data collection is also essential for scientific investigation of relationships and trends.  (iv)Quality Models and measures:-  -Quality models such as Bohem’s quality model and MaCall quality model are used with productivity models.  -These models are constructed in a tree like fashion where upper branches holds high level quality factors of software product such as reliability, usability, etc.  -Each quality factor is composed of low level criteria such as structure, traceability, etc.  -Criteria is easier to understand and measure than factors.  (v)Reliability models:-  -Reliability is one of the most important factor in quality model but we need to predict and measure reliability of product.  -Reliability indicates probability of failure free operation.  -We have several parametric reliability growth models to increase the reliability of product.  (vi)Performance evaluation and models:-  -Performance is one of the most aspect of quality.  -Performance evaluation includes characteristics such as response time and completion rates.  -Performance evaluation covers internal working  of system including efficiency of complexity of algorithm.  (vii)Structure and complexity :-  -We measure structural attributes of representation of software which are available in advanced of execution.  -These structural attributes are used to predict which part of system are less reliable, more difficult to test or requires more maintenance than others.  (vii)Management by metrix:-  -Measurement if most important part of software project management.  -Customers and developers uses measurement-based charts and graphs to help them to track if the project is on track.  -Many organization defines a set of measurement and reporting methods, so that project can be compared and contrasted.  -Measurement tells the customer and developer how the project is doing.  (viii)Evaluation of Methods and tools:-  -Many organization uses new methods and tools to make product more better and cheaper.  -Organization performs experiments, runs case studies or administrator surveys to help them decide whether a method or tool is likely to make positive difference in their particular situations.  -This evaluation depends upon good experimental design, proper identification of factors that affect outcome and appropriate measurements of factor attributes.  (ix)Capabilities Maturity Assessment:-  -In 1980, Vs Software Engineering Institute (SEI) proposed a Capability Maturity model to measure a contractor’s ability to develop quality software for US government.  -CMM is the updated version  of process maturity model.  -This model assessed any different attributes of development including use of tools, standard practices and more.  -With this model, contractor needs to answered 100 questions to determine contractor’s actual practices. The result grade was reported as a five level ordinal scale from “1” to “5”.	8
what is software metrics Explain scope of software metrics in detail	Software metrics refer to the standard of measure which holds properties of  any software system or processes. It provides the following activities for this purpose-  (i)Cost and effort estimation:-  Cost and effort estimation models determine the the probable cost of a project during the beginning phases of software development production.  -for example Boehm’s Cocomo model, Putnam’s SLIM model,  Regression based model, etc.  (ii)Productivity models and measures:-  Productivity is a function of the value and cost incurred, both of which can be broken down into measurable forms.  The staff productivity during a software process and in varying environments can be assessed by several measures and models.  (iii)Data collection:-  - data collection is significant when it comes to the quality of any measurement program.  Although, data collection becomes challenging when data is collected across diverse range of projects.  - data collection requires consistent and whole information, planned and executed in a careful and sensitive manner with utmost integrity of research.  - scientific investigation of relationships and trends in society is also heavily dependent on the data collected for accurate results.    (iv)Quality Models and measures:-  -Quality models like Bohems quality model and MaCall quality model, and productivity models can be used together for higher accuracy.  -These models almost always are constructed in a tree-like manner with the upper branches indicating the highest level quality factors of any software product such as reliability, usability, etc.  - every quality factor consists of low level criteria like structure, traceability, etc.  - criteria helps in understanding and measuring the factors.  (v)Reliability models:-  -Reliability functions as a significant factor is quality model, although it needs to be predicted and measured, therefore creating a specialization in itself in reliability modeling and prediction.  - reliability refers to the probability of failure free operation of any system.  - several parametric reliability growth models exist to influence the reliability of a product. Example-  Moronda, Littlewood vorall and Nonhomogeneous poisons process (NHPP)  Model.  (vi)Performance evaluation and models:-  -Performance evaluation is an integral aspect of quality.  -Performance evaluation is a detailed observation of various factors, both internal and       external.  - external system performance factors like response times and completion rates.   - internal factors like working of the efficacy of algorithms.  (vii)Structure and complexity :-  - the structural attributes of representation of software are measured which are available in advance of execution.  - the structural attributes help in prediction of the reliability, the difficulty and the requirement of maintenance of a part of any system.  (viii)Management by metrics:-  - managing a software project requires a vital role of measurement.  - measurement-based charts are highly reliable for customers, users, and developers alike to track the project’s progress.  - several organizations determine a specific set of measurements and reporting methods to compare and contrast the project.  - it helps in making customers understand the project progress better even without any pre requisite knowledge in software terminology or jargon.  (ix)Evaluation of Methods and tools:-  - new methods and tools are devised by organizations to make products better and cheaper.  - these new methods and tools are tested, experimented and surveyed to decide the potential outcome it will make in the particular situation.  - this evaluation is carried out with good experimental design, appropriate identification of factors which affect outcome and proper measurements of factor attributes.	8
what is software metrics Explain scope of software metrics in detail	Software metrics is a term that provides many activities, all of which involves some degree of software measurement:-  (i)Cost and effort estimation:-  -We have to use cost and effort estimation models to predict the cost of project during earlier phases of software development life cycle.  -for example Boehm’s Cocomo model, Putnam’s SLIM model,  Regression based model, etc.  (ii)Productivity models and measures:-  -There are several measures and models or assessing the staff productivity during software process and indifferent environments.  -The productivity is a function of value and cast; each is then decomposed into other aspects expressed in measurable form.  (iii)Data collection:-  -The quality or any measurement program is clearly dependent on careful data collection. But collecting data is easier to said than done when data must be collected across a diverse set of projects.  -Data collection must be consistent and complete. It must be planned and executed in a careful and sensitive manner.  -Data collection is also essential for scientific investigation of relationships and trends.  (iv)Quality Models and measures:-  -Quality models such as Bohem’s quality model and MaCall quality model are used with productivity models.  -These models are constructed in a tree like fashion where upper branches holds high level quality factors of software product such as reliability, usability, etc.  -Each quality factor is composed of low level criteria such as structure, traceability, etc.  -Criteria is easier to understand and measure than factors.  (v)Reliability models:-  -Reliability is one of the most important factor in quality model but we need to predict and measure reliability of product.  -Reliability indicates probability of failure free operation.  -We have several parametric reliability growth models to increase the reliability of product. For example, Moronda, Littlewood, Littlewood vorall and Non Homogenous poisons process (NHPP) model.  (vi)Performance evaluation and models:-  -Performance is one of the most aspect of quality.  -Performance evaluation includes characteristics such as response time and completion rates.  -Performance evaluation covers internal working  of system including efficiency of complexity of algorithm.  (vii)Structure and complexity :-  -We measure structural attributes of representation of software which are available in advanced of execution.  -These structural attributes are used to predict which part of system are less reliable, more difficult to test or requires more maintenance than others.  (vii)Management by metrix:-  -Measurement if most important part of software project management.  -Customers and developers uses measurement-based charts and graphs to help them to track if the project is on track.  -Many organization defines a set of measurement and reporting methods, so that project can be compared and contrasted.  -Measurement tells the customer and developer how the project is doing.  (viii)Evaluation of Methods and tools:-  -Many organization uses new methods and tools to make product more better and cheaper.  -Organization performs experiments, runs case studies or administrator surveys to help them decide whether a method or tool is likely to make positive difference in their particular situations.	8
what is software metrics Explain scope of software metrics in detail	There are many types of software metrics, Software metrics are used to measure the quality of the software.  (i)Cost effort estimation:-  -In the cost effort estimation, we use the models to predict the cost of the project before starting the work of developing the software life cycle.  (ii) Productivity models and measures:-  -There are many measures and models or evaluating the staff productivity at the time of process and common environments.  -The productivity is a function of value and cost; they are later divided into other aspects which can be measured.  (iii)Data collection:-  -The quality of the measurement program depend on how carefully the data is collected. Collecting the data is not an easy task when data to be collected is diverse set of projects.  -Data collection must be steady and complete. It should be planned as well as executed in a careful and sensitive manner.  (iv)Quality models and measures:-  -These Models are constructed in a tree like fashion where the branches on the upper side contain the high level quality factors of the software product such as reliability, usability, user friendliness, etc.  -Each of the quality factor contains the low level criteria such as structure, traceability, etc.  -These low level criteria are easy to understand as  well as easy to measure the factors.  (v)Reliability models:-  -Reliability is one of the most important component of quality model but we need to predict and measure the reliability of the product.  -Reliability shows probability of the failure free operation.  -There are several parameters for growth of the reliability of the models to increase the reliability of the product.  (vi)Performance evaluation and models:-  -Performance is one of the most important feature of quality.  -The evaluation of the performance includes characteristics such as response time and completion rates.  -The evaluation of the performance covers the internal working of system as well as efficiency of the complexity of the algorithms.  (vii)Structure and complexity:-  -Structure and complexity attributes are used to predict the part of the system which are less reliable, difficult to test or which requires more maintenance than the other parts of the system.  (viii)Management by metrics:-  -Management is an important part of software project management.  -Customers as well as the developers use charts and graphs to measure the progress and help them to keep track of the project.  -Measurement shows the customers and the developers how the project is doing.	8
what is software metrics Explain scope of software metrics in detail	A software metric is a measure of software characteristics which are quantifiable or countable. Software metrics are important for many reasons, including measuring software performance, planning work items, measuring productivity, and many other uses.    Within the software development process, there are many metrics that are all related to each other. Software metrics are related to the four functions of management: Planning, Organization, Control, or Improvement.  Benefits of Software Metrics:-  The goal of tracking and analyzing software metrics is to determine the quality of the current product or process, improve that quality and predict the quality once the software development project is complete. On a more granular level, software development managers are trying to:  Increase return on investment (ROI)  Identify areas of improvement  Manage workloads  Reduce overtime  Reduce costs  These goals can be achieved by providing information and clarity throughout the organization about complex software development projects. Metrics are an important component of quality assurance, management, debugging, performance, and estimating costs, and they’re valuable for both developers and development team leaders:  -Managers can use software metrics to identify, prioritize, track and communicate any issues to foster better team productivity. This enables effective management and allows assessment and prioritization of problems within software development projects. The sooner managers can detect software problems, the easier and less-expensive the troubleshooting process.  -Software development teams can use software metrics to communicate the status of software development projects, pinpoint and address issues, and monitor, improve on, and better manage their workflow.  Software metrics offer an assessment of the impact of decisions made during software development projects. This helps managers assess and prioritize objectives and performance goals.  software metrics goals:-  Often sets of software metrics are communicated to software development teams as goals. So the focus becomes:  -Reducing the lines of codes  -Reducing the number of bugs reported  -Increasing the number of software iterations  -Speeding up the completion of tasks	8
what is software metrics Explain scope of software metrics in detail	Types of Software Metrics  Formal code metrics—Such as Lines of Code (LOC), code complexity, Instruction Path Length, etc. In modern development environments, these are considered less useful.  Developer productivity metrics—Such as active days, assignment scope, efficiency and code churn. These metrics can help you understand how much time and work developers are investing in a software project.  Agile process metrics—Such as lead time, cycle time and velocity. They measure the progress of a dev team in producing working, shipping-quality software features.  Operational metrics—Such as Mean Time Between Failures (MTBF) and Mean Time to Recover (MTTR). This checks how software is running in production and how effective operations staff are at maintaining it.  Test metrics—Such as code coverage, percent of automated tests, and defects in production. This measures how comprehensively a system is tested, which should be correlated with software quality.  Metrics should be used as part of an investigation of the experiment—Agile teams should use metrics with a specific hypothesis in mind, not measure for the sake of measurement.  Software Development Metrics Examples:-  (i) Customer Satisfaction  A widely used and respected metric for customer satisfaction is Net Promoter Score (NPS). It a number ranging from -100 (indicating no customers refer you to others) to +100 (all customers likely to refer you to others). SurveyMonkey provides the full calculation for NPS and lets you set up a free NPS survey.  (ii) Team Velocity:-  Team Velocity measures the number of story points, quantifying the number and size of product features, completed by the team in the previous sprints. It helps to understand how much value the team is providing to customers in a given time period.  (iii) Escaped Defects:-  This metric checks, per release or product component, how many bugs or issues were identified after the software was already in production. This is a good indication of quality as perceived by the end user. If it’s increasing, it is a sign of a faulty quality process.  (iv) True Test Coverage:-  We call this metric true test coverage as opposed to the regular test coverage metric, which only measures unit tests. This is a metric that tells you how much of your codebase or feature set is covered by all types of tests—unit, integration, UI automation, manual tests and end-to-end acceptance tests. It can reveal quality gaps—parts of the software that are new or actively used but do not have sufficient test coverage.	8
Explain meaningfulness in measurement	Scientists use many skills as they investigate the world around them. They make observations by gathering information with their senses. Some observations are simple. For example, a simple observation would be figuring out the color or texture of an object. However, if scientists want to know more about a substance, they may need to take measurements. Measurement is perhaps one of the most fundamental concepts in science. Without the ability to measure, it would be difficult for scientists to conduct experiments or form theories. Not only is measurement important in science and the chemical industry, it is also essential in farming, engineering, construction, manufacturing, commerce, and numerous other occupations and activities. The word “measurement” comes from the Greek word “metron,” which means “limited proportion.” Measurement is a technique in which properties of an object are determined by comparing them to a standard. Measurements require tools and provide scientists with a quantity. A quantity describes how much of something there is or how many there are. A good example of measurement is using a ruler to find the length of an object. The object is whatever you are measuring, the property you are trying to determine is the object’s length, and the standard you are comparing the object’s length to is the ruler.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -Measurement in weather system are used to predict weather.  Types of Measurements:  Depending on the method, measurements are classified into two types: a) Direct measurement and b) Indirect measurement  Direct Measurement:  Direct measurement' refers to measuring exactly the thing that you are looking to measure.  Indirect Measurement:  Indirect measurement means that you're measuring something by measuring something else  Units of Measurements:  For any measurement, a number and unit are required. When we say that the time is 5 second, then we mean that the said time is 5 times a certain standard time called 1 second.  A unit is a selected magnitude of a physical variable in terms of which other magnitudes of the same variable can be expressed. Measurement without unit has no meaning.	9
Explain meaningfulness in measurement	Some statements involving measurement appear more meaningful than others:  Fred is twice as tall as Jane  The temperature in Tokyo today is twice that in London  The difference in temperature between Tokyo and London today is twice what it was yesterday  Formally a statement involving measurement is meaningful if its truth value is invariant of transformations of allowable scales.  Some measures seem to be of a different type to others, depending on what kind of statements are meaningful. The 5 most important scale types of measurement are: Nominal, Ordinal, Interval, Ratio, Absolute  Increasing order of sophistication.  Measurement in everyday life:-  Measurement is not only used by professional technologists, but also used by all of us in everyday life. In a shop, the price acts as a measure of the value of an item. Similarly, height and size measurements will ensure whether the cloth will fit properly or not. Thus, measurement will help us compare an item with another.  The measurement takes the information about the attributes of entities. An entity is an object such as a person or an event such as a journey in the real world. An attribute is a feature or property of an entity such as the height of a person, cost of a journey, etc. In the real world, even though we are thinking of measuring the things, actually we are measuring the attributes of those things.  Attributes are mostly defined by numbers or symbols. For example, the price can be specified in number of rupees or dollars, clothing size can be specified in terms of small, medium, large.  The accuracy of a measurement depends on the measuring instrument as well as on the definition of the measurement. After obtaining the measurements, we have to analyze them and we have to derive conclusions about the entities.  Measurement is a direct quantification whereas calculation is an indirect one where we combine different measurements using some formulae.  Measurement makes things measurable.	9
Explain meaningfulness in measurement	Measurement is the assignment of a number to a characteristic of an object or event, which can be compared with other objects or events. The scope and application of measurement are dependent on the context and discipline.  -Taking proper medicine. If you an illness (whether serious or minor) you need to take your medicine and take it in the proper amount. If you take too little or too much then you are not going to get the proper benefit from it.  -Cooking properly. Cooking of all forms is based on proper attention to measurement. Can you bake a chicken at 600 degrees? Well, you can but the results would be pretty catastrophic! Could you may a cup of tea by dipping a tea bag into a teaspoon of warm water?  -Purchasing clothes. Now, how important could measurements be when selecting clothes? After all, to look good in clothing the main thing you need to pay attention to is style, right? Well, if you weigh 200lbs you aren't going to look stylish in an extra small shirt. Clothing is all based on size and proper fitting which are, of course, variants of measurement.  -Playing sports. The importance of measurements may not necessarily reveal itself when you play sports but it is there in a big way. If you want to throw a runner out at first or make a 30 yard touchdown pass then you really need to be accurate and comes from a clear sense of depth and distance.  -Making estimations. If you have to be at school at 9am what time would you have to leave in the morning if you are at your friend's house. Often we do not have an exact answer so we need to make an estimation which is essentially a guess of measurement.  -Keeping yourself warm or cool. If the temperature outside dips or increases you have to make an adjustment on your thermostat in order to remain at a safe and healthy temperature. Understanding the measurement scale of a thermostat is critical in this regard or else you may find yourself feeling rather uncomfortable.  -Understanding weight. Is that object too heavy to pick up by yourself or do you need to use something to lift it? Some may think this is not important but it is pretty easy to hurt yourself if you lift objects that are too heavy.  -Proper use of capacity. Just how many clothes can you fit in a dresser or closet without it becoming too crammed? Without a clear concept of capacity you might find yourself pouring an entire half gallon of orange juice into a small glass.  -Telling time. The ability to tell time is all based on measurement principles. Whether you are using a digital clock or an hourglass these devices measure the passage of time. Now, imagine how chaotic the world would be if was impossible to measure the passage of time.	9
Explain meaningfulness in measurement	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  Measurement making the things measurable:-  -Measuring makes nonmeasurable things measurable.  -Measuring the unmeasurable improves our understanding of particular entities and attributes, making engineering more powerful.  Neglect of measurement in engineering:-  -We fail to set measurable targets for our software products. For example, in earlier phase we promise that our product will be user-friendly, reliable and maintainable but once project is complete, we can’t tell if we have met our goals.  -We fail to understand and qualify the component cost of software program, we can’t control overall cost of project if we are not measuring the relative cost of components.  -We do not qualify or predict the quality of product we produce, we can’t tell the user of product about reliability of product.  -We allow anecdote evidence to convince us to try yet another revolutionary new development technology, without doing careful controlled study to determine if the technology is efficient or effective.  Objectives of software measurement:-  (i)Manager’s perspective:-  (a)What does each process cost?  (b)How productive is the staff?  (c)How good is the code being with the product?  (d)Will the user be satisfied with the product?  (ii)Engineer’s perspective:-  (a)Are the requirements testable?  (b)Have the found all the faults?  (c)Have we met our product or process goals?  Measurement for understanding, control and improvement:-  -Measurement help us to understand what is happening during the development or maintenance.	9
Explain the objectives for software measurement with the perspective of manager and engineer	Software Metrics is a collective term used to describe the very wide range of activities concerned with measurement in software engineering  Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined unambiguous rules.  Once measures are collected they are converted into metrics for use. IEEE defines metric as 'a quantitative measure of the degree to which a system, component, or process possesses a given attribute.' The goal of software metrics is to identify and control essential parameters that affect software development. Other objectives of using software metrics are listed below:  -Measuring the size of the software quantitatively.  -Assessing the level of complexity involved.  -Assessing the strength of the module by measuring coupling.  -Assessing the testing techniques.  -Specifying when to stop testing.  -Determining the date of release of the software.  -Estimating cost of resources and project schedule.  Software metrics help project managers to gain an insight into the efficiency of the software process, project, and product. This is possible by collecting quality and productivity data and then analyzing and comparing these data with past averages in order to know whether quality improvements have occurred. Also, when metrics are applied in a consistent manner, it helps in project planning and project management activity. For example, schedule-based resource allocation can be effectively enhanced with the help of metrics.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  d)Will the users be satisfied with the product?  e)How can we improve?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?  d)What will happen in future?	9
Explain the objectives for software measurement with the perspective of manager and engineer	Software products currently play an important role in many areas of the world economy. For instance, for a company that manufactures high-tech printers, today would be easy to copy the pieces of metal, glass and plastic used to build this product. However, the software embedded for operating these printers is the key factor that differentiates them from illegal copies. Software also plays an important role for managing companies' activities, as its effective application is a key factor for supporting strategic business decisions and improving market competitiveness.  Professionals and companies working in the software development market are also responsible for developing applications that are capable of adding business value to the companies that hire them. Contractors of software development services return to contracting suppliers when satisfied with the value added to their business from the acquired software. Therefore, the satisfaction of customers who hire software development services relates to the development process as well as from the software's ability to improve contractors' business activities.  Software developing companies face challenges to remain competitive in their business market, and that depends, amongst other issues, on their commitment to satisfy customers. Software companies are also demanded for continuous improvements in their working processes to remain competitive and the adoption of established models to ensure maturity in their software development processes is seen as a way to get market recognition for the quality of their work  The objective of this work is to analyze the software development measuring processes for supporting strategic business objectives in software developing companies. Given the importance of strategic business management and the adoption of certification models for software process maturity, the analysis in this work aims at showing the benefits for aligning software process measurements with business strategic objectives. The objectives for software measurement are as follows:  To be closely linked to the business objectives  To have a systematic and spread use to justify its cost and effort  To be well-defined to allow understanding and comparison, and  To be communicated impartially and thoughtfully.  Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance. Measurement is used in all above activities, so each activity is understood and controlled.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  d)Will the users be satisfied with the product?  e)How can we improve?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?  d)What will happen in future?	9
Explain the objectives for software measurement with the perspective of manager and engineer	The framework for software measurement is based on four principles −  Classifying the entities to be examined  Determining relevant measurement goals  Identifying the level of maturity that the organization has reached  Classifying the Entities to be Examined  In software engineering, mainly three classes of entities exist. They are −  Processes  Products  Resources  All of these entities have internal as well as external entities.  Internal attributes are those that can be measured purely in terms of the process, product, or resources itself. For example: Size, complexity, dependency among modules.  External attributes are those that can be measured only with respect to its relation with the environment. For example: The total number of failures experienced by a user, the length of time it takes to search the database and retrieve information.  The different attributes that can be measured for each of the entities are as follows −  Processes  Processes are collections of software-related activities. Following are some of the internal attributes that can be measured directly for a process   The duration of the process or one of its activities  The effort associated with the process or one of its activities  The number of incidents of a specified type arising during the process or one of its activities  The different external attributes of a process are cost, controllability, effectiveness, quality and stability.  Products  Products are not only the items that the management is committed to deliver but also any artifact or document produced during the software life cycle.  The different internal product attributes are size, effort, cost, specification, length, functionality, modularity, reuse, redundancy, and syntactic correctness. Among these size, effort, and cost are relatively easy to measure than the others.  The different external product attributes are usability, integrity, efficiency, testability, reusability, portability, and interoperability. These attributes describe not only the code but also the other documents that support the development effort.  Resources  These are entities required by a process activity. It can be any input for the software production. It includes personnel, materials, tools and methods.  The different internal attributes for the resources are age, price, size, speed, memory size, temperature, etc. The different external attributes are productivity, experience, quality, usability, reliability, comfort etc.  Determining Relevant Measurement Goals  A particular measurement will be useful only if it helps to understand the process or one of its resultant products. The improvement in the process or products can be performed only when the project has clearly defined goals for processes and products. A clear understanding of goals can be used to generate suggested metrics for a given project in the context of a process maturity framework.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  d)Will the users be satisfied with the product?  e)How can we improve?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?  d)What will happen in future?	9
Explain the objectives for software measurement with the perspective of manager and engineer	Measurement captures information about attributes of entities.  -Entity is an object (such as person or room) or events (such as journey or testing phase of software) in the real world.  -An attribute is a feature or property of an entity (such as color of room, the cost of journey or elapsed time of testing phase).  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -In such a way the products quality is measured and is priced according to it.  -software engineering describes the collection of techniques that apply an engineering approach to the construction and support of software product.  -Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance.  -Measurement is used in all above activities, so each activity is understood and controlled.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  -Measurement help us to understand what is happening during development or maintenance.  -Measurement allow us to control what is happening on our projects.	9
What is representational theory of measurement Explain in detail	"In the representational theory, measurement is defined as ""the correlation of numbers with entities that are not numbers”. The most technically elaborated form of representational theory is also known as additive conjoint measurement. In this form of representational theory, numbers are assigned based on correspondences or similarities between the structure of number systems and the structure of qualitative systems. A property is quantitative if such structural similarities can be established. In weaker forms of representational theory, such as that implicit within the work of Stanley Smith Stevens, numbers need only be assigned according to a rule.  The concept of measurement is often misunderstood as merely the assignment of a value, but it is possible to assign a value in a way that is not a measurement in terms of the requirements of additive conjoint measurement. One may assign a value to a person's height, but unless it can be established that there is a correlation between measurements of height and empirical relations, it is not a measurement according to additive conjoint measurement theory. Likewise, computing and assigning arbitrary values, like the ""book value"" of an asset in accounting, is not a measurement because it does not satisfy the necessary criteria.  Three type of Representational theory  1) Empirical relation  In science, an empirical relationship is a relationship or correlation based solely on observation rather than theory. An empirical relationship requires only confirmatory data irrespective of theoretical basis  2) The rule of mapping  The real world is the Domain of mapping, and the mathematical world is the range. when we map the attribute to mathematical system, we have many choice for mapping and the range  3) The representation condition of measurement  Information theory  Information theory recognizes that all data are inexact and statistical in nature. Thus the definition of measurement is: ""A set of observations that reduce uncertainty where the result is expressed as a quantity."" This definition is implied in what scientists actually do when they measure something and report both the mean and statistics of the measurements. In practical terms, one begins with an initial guess as to the expected value of a quantity, and then, using various methods and instruments, reduces the uncertainty in the value. Note that in this view, unlike the positivist representational theory, all measurements are uncertain, so instead of assigning one value, a range of values is assigned to a measurement. This also implies that there is not a clear or neat distinction between estimation and measurement."	9
What is representational theory of measurement Explain in detail	Measurement gives us the rules laying the ground work for developing and reasoning about all kinds of measurement. It is the mapping from the empirical world to the formal relational world. Consequently, a measure is the number or symbol assigned to an entity by this mapping in order to characterize an entity.  (i)Empirical relation:- In science, an empirical relationship or phenomenological relationship is a relationship or correlation that is supported by experiment and observation but not necessarily supported by theory. There are three types of Empirical relation depending upon the relation we define either on single element (entity) of a set or on collection of elements.  (a)Unary relation:- A unary relationship is when both participants in the relationship are the same entity. For Example: Subjects may be prerequisites for other subjects. A ternary relationship is when three entities participate in the relationship.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation:- We define relation between more than two entities.  For example, if there are three instances as given below  A is taller than B.  A is tallest, B is tall, C is not tall.  C is taller than A when sitting on B’s shoulder.  Given any two people, x and y, we can say that   x  is taller than y or     y is taller than x.  Therefore we can say that “taller than” is a Empirical relation (binary) for height. Similarly “is tall” is a unary Empirical relation.  The Representational Condition of Measurement:-  The Representation Condition of measurement asserts that a measurement must map Real World entities into numbers and empirical Real World relations into numerical relations in such a way that the Real World relations preserve and are preserved by the numerical relations.  In other words, your numerical model must always make sense in terms of the Real World model it is attempting to describe.  Example: LOC satisfies the Representation Condition for physical program size but it doesn't for functional program size because you can have a poorly written program with more LOC but same or less functionality and vice versa.	9
What is representational theory of measurement Explain in detail	The process by which numbers or symbols are assigned to attributes of entities in the real world in such a way as to describe them according to clearly defined rules.  The  idea behind the representational theory of measurement is elaborated in the following observations.  EMPIRICAL RELATIONS SYSTEM       The aim is to be able to compare entities. However, it is not automatic that any two   entities E  1   and E  2   are comparable. A comparison between E  1   and E  2   is about relating E  1     and E  2   with respect to some (salient) attribute.      Definition [Empirical Relations System]. Let E is the set of entities and R  E   is the set of   empirical relations for a (salient) attribute A. Then, an empirical relations system is a   couple (E, R  E  ).      The purpose of (E, R  E  ) is to define the intuitive meaning of A by identifying the   empirical relations that hold for A.      A relation can be defined on a single element of a set, or a collection of elements of a   set.      5.1. ORDERS OF RELATIONS      The relations can be classified in different ways, including whether they are unary,   binary, ternary, and so on.      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”.  EMPIRICAL RELATIONS SYSTEM       The aim is to be able to compare entities. However, it is not automatic that any two   entities E  1   and E  2   are comparable. A comparison between E  1   and E  2   is about relating E  1     and E  2   with respect to some (salient) attribute.      Definition [Empirical Relations System]. Let E is the set of entities and R  E   is the set of   empirical relations for a (salient) attribute A. Then, an empirical relations system is a   couple (E, R  E  ).      The purpose of (E, R  E  ) is to define the intuitive meaning of A by identifying the   empirical relations that hold for A.      A relation can be defined on a single element of a set, or a collection of elements of a   set.      5.1. ORDERS OF RELATIONS      The relations can be classified in different ways, including whether they are unary,   binary, ternary, and so on.      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”.  EMPIRICAL RELATIONS SYSTEM     The aim is to be able to compare entities. However, it is not automatic that any two entities E1 and E2 are comparable. A comparison between E1 and E2 is about relating E1 and E2 with respect to some (salient) attribute.    Definition. Let E is the set of entities and RE is the set of empirical relations for a (salient) attribute A. Then, an empirical relations system is a couple (E, RE).    The purpose of (E, RE) is to define the intuitive meaning of A by identifying the empirical relations that hold for A.    A relation can be defined on a single element of a set, or a collection of elements of a set.   ORDERS OF RELATIONS:-  The relations can be classified in different ways, including whether they are unary, binary, ternary, and so on.  For example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. For example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”.  It is possible to have other binary relations, such as, “much taller than”.  THE REPRESENTATION: THE MAPPING OF RELATIONS FROM THE   REAL WORLD TO THE MATHEMATICAL WORLD  THE REPRESENTATION: THE MAPPING OF RELATIONS FROM THE REAL WORLD TO THE MATHEMATICAL WORLD:-  A mapping from the empirical world to the formal, relational world.  This mapping, say, M, is called a representation  For example, the range could consist of integers,  real numbers, or non-numerical symbols  Another example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. In this case, the empirical relation “is tall” can be mapped to, for example, the numerical relation “x > 50”.     Another example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”. In this case, the empirical relation “is taller than” can be mapped, for example, to the numerical relation “x > y”  THE REPRESENTATION CONDITION:-  It is important that the behavior of measures in the number system be the same as in the real world since then, instead of studying the real world, one could study the mathematical world.    For example, once the height of a person has been measured, that data could be used subsequently by others and that data could be used subsequently for other purposes.    For that, the mapping must preserve the relation. This is the representation condition.  Let (E, R  E  ) be an empirical relation system and let (N, R  N  ) be a numerical relation   system. Then, a representation condition measuring an attribute characterized by (E, R  E  )   means associating (E, R  E  ) with (N, R  N  ) by using a mapping M.       In particular, M maps entities of E to numbers of N, and relations of R  E   to relations of   R  N  , so that every empirical relation is preserved.      Indeed, M is a homomorphism  1  .      For example, for the attribute height of entities that are humans, a unary empirical   relation is “is tall”. In this case, the representation condition requires that, for any   measure M, P is tall if and only if M(P) > 50.      For example, for the attribute height of entities that are humans, a binary empirical   relation is “is taller than”. In this case, the representation condition requires that, for   any measure M, P  1   is taller than P  2   if and only if M(P  1  ) > M(P  2  ).      1.  The If: If John is taller than Jane, then M(John) must be a larger number than   M(Jane).      2.  The Only If: Jill can be mapped to a higher number than Jack only if Jill is taller than   Jack.      In general, if M maps the empirical binary relation >  E   into the numerical relation >  N  , then   the representation condition is:       x >  E   y ⟺ M(x) >  N   M(y).      It could be noted that >  N   is equivalent to the conventional notion of ‘greater than’ (>), a   total order  2   on the set of real numbers.  Let (E, RE) be an empirical relation system and let (N, RN) be a numerical relation system. Then, a representation condition measuring an attribute characterized by (E, RE) means associating (E, RE) with (N, RN) by using a mapping M.     In particular, M maps entities of E to numbers of N, and relations of RE to relations of RN, so that every empirical relation is preserved.    Indeed, M is a homomorphism1.    For example, for the attribute height of entities that are humans, a unary empirical relation is “is tall”. In this case, the representation condition requires that, for any measure M, P is tall if and only if M(P) > 50.    For example, for the attribute height of entities that are humans, a binary empirical relation is “is taller than”. In this case, the representation condition requires that, for any measure M, P1 is taller than P2 if and only if M(P1) > M(P2).    The If: If John is taller than Jane, then M(John) must be a larger number than M(Jane).      The Only If: Jill can be mapped to a higher number than Jack only if Jill is taller than Jack.    In general, if M maps the empirical binary relation >E into the numerical relation >N, then the representation condition is:     x >E y ⟺ M(x) >N M(y).    It could be noted that >N is equivalent to the conventional notion of ‘greater than’ (>), a total order2 on the set of real numbers.	9
What is representational theory of measurement Explain in detail	There are many representational theory for measurement, some of them are as given below  (i)Empirical relation:-There are three types of Empirical relation depending upon the relation we define either on single element (entity) of a set or on collection of elements.  (a)Unary relation  (b)Binary relation  (c)Ternary relation  For example, if there are three instances as given below  A is taller than B.  A is tallest, B is tall, C is not tall.  C is taller than A when sitting on B’s shoulder.  Given any two people, x and y, we can conclude that      x  is taller than y or     y is taller than x.  Therefore we can say that “taller than” is a Empirical relation (binary) for height.  Similarly “is tall” is a unary Empirical relation.  (ii)Rules of mapping:-  -Real world is the domain of mapping and mathematical world is range of mapping.  -When we have map the attribute of entity from real world to mathematical world, we have many choices for mapping and range. i.e.:-We can use real numbers, integers or non-numeric symbols in mathematical system.  -Mapping may be different depending upon conventions we adopt.  -Measures must specify domain, range as well as rules of mapping. For example, If we want to measure the height of person then we measure height in inches, centimeters or feet’s. While measuring height we use different conventions like measuring height when person is standing or sitting, wearing shoes or not.  (iii)Representation condition of measurement:-  -Representation condition states that a measurement mapping M must map entities into numbers and Empirical relations into numerical relation (mathematical relation) in such a way that Empirical relations are preserved and are preserved by mathematical relations.  -Here Empirical relation “taller than” is mapped to the numerical relation “>”.  -We say that, A is taller than B if and only if M(A)>M(B).  -This statement implies that whenever A is taller than B, then M(A) must be a bigger number than M(B).  -We can say that A is higher number than B only if A is taller than B. For Empirical relation (binary) “taller than”, we have numerical relation A>B.	9
what is software metrics Explain scope of software metrics in detail	A software metric is a measure of software characteristics which are quantifiable or countable. Software metrics are important for many reasons, including measuring software performance, planning work items, measuring productivity, and many other uses.    Within the software development process, there are many metrics that are all related to each other. Software metrics are related to the four functions of management: Planning, Organization, Control, or Improvement.  Benefits of Software Metrics:-  The goal of tracking and analyzing software metrics is to determine the quality of the current product or process, improve that quality and predict the quality once the software development project is complete. On a more granular level, software development managers are trying to:  Increase return on investment (ROI)  Identify areas of improvement  Manage workloads  Reduce overtime  Reduce costs  These goals can be achieved by providing information and clarity throughout the organization about complex software development projects. Metrics are an important component of quality assurance, management, debugging, performance, and estimating costs, and they’re valuable for both developers and development team leaders:  -Managers can use software metrics to identify, prioritize, track and communicate any issues to foster better team productivity. This enables effective management and allows assessment and prioritization of problems within software development projects. The sooner managers can detect software problems, the easier and less-expensive the troubleshooting process.  -Software development teams can use software metrics to communicate the status of software development projects, pinpoint and address issues, and monitor, improve on, and better manage their workflow.  Software metrics offer an assessment of the impact of decisions made during software development projects. This helps managers assess and prioritize objectives and performance goals.  software metrics goals:-  Often sets of software metrics are communicated to software development teams as goals. So the focus becomes:  -Reducing the lines of codes  -Reducing the number of bugs reported  -Increasing the number of software iterations  -Speeding up the completion of tasks  Focusing on those metrics as targets help software developers reach more important goals such as improving software usefulness and user experience  There is no standard or definition of software metrics that have value to software development teams. And software metrics have different value to different teams. It depends on what are the goals for the software development teams.	9
what is software metrics Explain scope of software metrics in detail	Software metrics is a standard of measure that contains many activities which involve some degree of measurement. It can be classified into three categories: product metrics, process metrics, and project metrics.  Product metrics:- describe the characteristics of the product such as size, complexity, design features, performance, and quality level.  Process metrics:- can be used to improve software development and maintenance. Examples include the effectiveness of defect removal during development, the pattern of testing defect arrival, and the response time of the fix process.  Project metrics:- describe the project characteristics and execution. Examples include the number of software developers, the staffing pattern over the life cycle of the software, cost, schedule, and productivity.  Some metrics belong to multiple categories. For example, the in-process quality metrics of a project are both process metrics and project metrics.  (i)Cost and Effort Estimation:-  Effort is expressed as a function of one or more variables such as the size of the program, the capability of the developers and the level of reuse. Cost and effort estimation models have been proposed to predict the project cost during early phases in the software life cycle. The different models proposed are −    Boehm’s COCOMO model  Putnam’s slim model  Albrecht’s function point model  (ii)Productivity models and measures:- Productivity can be considered as a function of the value and the cost. Each can be decomposed into different measurable size, functionality, time, money, etc.  (iii)Data collection:- The quality of any measurement program is clearly dependent on careful data collection. Data collected can be distilled into simple charts and graphs so that the managers can understand the progress and problem of the development. Data collection is also essential for scientific investigation of relationships and trends.  (iv)Quality Models and measures:-  Quality models have been developed for the measurement of quality of the product without which productivity is meaningless. These quality models can be combined with productivity model for measuring the correct productivity. These models are usually constructed in a tree-like fashion. The upper branches hold important high level quality factors such as reliability and usability.  The notion of divide and conquer approach has been implemented as a standard approach to measuring software quality.  (v)Reliability models:-  Most quality models include reliability as a component factor, however, the need to predict and measure reliability has led to a separate specialization in reliability modeling and prediction. The basic problem in reliability theory is to predict when a system will eventually fail.  (vi)Performance evaluation and models:-  It includes externally observable system performance characteristics such as response times and completion rates, and the internal working of the system such as the efficiency of algorithms. It is another aspect of quality.  (vii)Structure and complexity :-  Here we measure the structural attributes of representations of the software, which are available in advance of execution. Then we try to establish empirically predictive theories to support quality assurance, quality control, and quality prediction.  (vii)Management by metrics:-  For managing the software project, measurement has a vital role. For checking whether the project is on track, users and developers can rely on the measurement-based chart and graph. The standard set of measurements and reporting methods are especially important when the software is embedded in a product where the customers are not usually well-versed in software terminology.  (viii)Evaluation of Methods and tools:-  This depends on the experimental design, proper identification of factors likely to affect the outcome and appropriate measurement of factor attributes.  (ix)Capabilities Maturity Assessment:-  This model can assess many different attributes of development including the use of tools, standard practices and more. It is based on the key practices that every good contractor should be using.	9
what is software metrics Explain scope of software metrics in detail	Software development metrics are quantitative measurements of a software product or project, which can help management understand software performance, quality, or the productivity and efficiency of software teams.  Types of Software Metrics  Formal code metrics—Such as Lines of Code (LOC), code complexity, Instruction Path Length, etc. In modern development environments, these are considered less useful.  Developer productivity metrics—Such as active days, assignment scope, efficiency and code churn. These metrics can help you understand how much time and work developers are investing in a software project.  Agile process metrics—Such as lead time, cycle time and velocity. They measure the progress of a dev team in producing working, shipping-quality software features.  Operational metrics—Such as Mean Time Between Failures (MTBF) and Mean Time to Recover (MTTR). This checks how software is running in production and how effective operations staff are at maintaining it.  Test metrics—Such as code coverage, percent of automated tests, and defects in production. This measures how comprehensively a system is tested, which should be correlated with software quality.  Customer satisfaction—Such as Net Promoter Score (NPS), Customer Effort Score (CES) and Customer Satisfaction Score (CSAT). The ultimate measurement of how customers experience the software and their interaction with the software vendor.  Metrics in Agile Software Development  The agile methodology has a unique approach to software development metrics and how to use them effectively. Leon Tranter presents three agile principles for software metrics:  Metrics should be used by the team—They should not be imposed by management, rather they should be useful for the team to assess and improve their own work.  Metrics should be part of a conversation—A metric is just a number, it should be combined into a deeper discussion about process and challenges faced by the team.  Metrics should be used as part of an investigation of the experiment—Agile teams should use metrics with a specific hypothesis in mind, not measure for the sake of measurement.  Software Development Metrics Examples:-  (i) Customer Satisfaction  A widely used and respected metric for customer satisfaction is Net Promoter Score (NPS). It a number ranging from -100 (indicating no customers refer you to others) to +100 (all customers likely to refer you to others). SurveyMonkey provides the full calculation for NPS and lets you set up a free NPS survey.  (ii) Team Velocity:-  Team Velocity measures the number of story points, quantifying the number and size of product features, completed by the team in the previous sprints. It helps to understand how much value the team is providing to customers in a given time period.  (iii) Release Burndown:-  A Release Burndown chart can help you understand, across an entire software release, how development is progressing, how much of the planned software functionality remains to be done, and when you can expect the release to be completed.  (iv) Escaped Defects:-  This metric checks, per release or product component, how many bugs or issues were identified after the software was already in production. This is a good indication of quality as perceived by the end user. If it’s increasing, it is a sign of a faulty quality process.  (v) True Test Coverage:-  We call this metric true test coverage as opposed to the regular test coverage metric, which only measures unit tests. This is a metric that tells you how much of your codebase or feature set is covered by all types of tests—unit, integration, UI automation, manual tests and end-to-end acceptance tests. It can reveal quality gaps—parts of the software that are new or actively used but do not have sufficient test coverage.	9
what is software metrics Explain scope of software metrics in detail	(i)Cost and effort estimation:-  -We have to use cost and effort estimation models to predict the cost of project during earlier phases of software development life cycle.  -for example Boehm’s Cocomo model, Putnam’s SLIM model,  Regression based model, etc.  (ii)Productivity models and measures:-  -There are several measures and models or assessing the staff productivity during software process and indifferent environments.  -The productivity is a function of value and cast; each is then decomposed into other aspects expressed in measurable form.  (iii)Management by metrix:-  -Measurement if most important part of software project management.  -Customers and developers uses measurement-based charts and graphs to help them to track if the project is on track.  -Many organization defines a set of measurement and reporting methods, so that project can be compared and contrasted.  (iv)Evaluation of Methods and tools:-  -Many organization uses new methods and tools to make product more better and cheaper.  -Organization performs experiments, runs case studies or administrator surveys to help them decide whether a method or tool is likely to make positive difference in their particular situations.  -This evaluation depends upon good experimental design, proper identification of factors that affect outcome and appropriate measurements of factor attributes.  (v)Capabilities Maturity Assessment:-  -In 1980, Vs Software Engineering Institute (SEI) proposed a Capability Maturity model to measure a contractor’s ability to develop quality software for US government.  -CMM is the updated version  of process maturity model.  -This model assessed any different attributes of development including use of tools, standard practices and more.  -With this model, contractor needs to answered 100 questions to determine contractor’s actual practices. The result grade was reported as a five level ordinal scale from “1” to “5”.  (vi)Performance evaluation and models:-  -Performance is one of the most aspect of quality.  -Performance evaluation includes characteristics such as response time and completion rates.  -Performance evaluation covers internal working  of system including efficiency of complexity of algorithm.  (vii)Structure and complexity :-  -We measure structural attributes of representation of software which are available in advanced of execution.  -These structural attributes are used to predict which part of system are less reliable, more difficult to test or requires more maintenance than others.  (viii)Data collection:-  -Data collection must be consistent and complete. It must be planned and executed in a careful and sensitive manner.  -Data collection is also essential for scientific investigation of relationships and trends.  (ix)Quality Models and measures:-  -Each quality factor is composed of low level criteria such as structure, traceability, etc.  -Criteria is easier to understand and measure than factors.	9
Explain meaningfulness in measurement	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price and pay increases.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  Measurement making the things measurable:-  -Measuring makes nonmeasurable things measurable.  -Measuring the unmeasurable improves our understanding of particular entities and attributes, making engineering more powerful.  Measurement in software engineering:-  -Software engineer describes the collection of techniques that apply on engineering approach to the construction and support of software product.  - Software engineer includes various activities like managing, planning, casting, analyzing, specifying, designing, testing and maintaining.  Measurement is used in all activities, so each activity is understood and controlled.  Neglect of measurement in engineering:-  -We fail to set measurable targets for our software products. For example, in earlier phase we promise that our product will be user-friendly, reliable and maintainable but once project is complete, we can’t tell if we have met our goals.  -We fail to understand and qualify the component cost of software program, we can’t control overall cost of project if we are not measuring the relative cost of components.  -We do not qualify or predict the quality of product we produce, we can’t tell the user of product about reliability of product.  -We allow anecdote evidence to convince us to try yet another revolutionary new development technology, without doing careful controlled study to determine if the technology is efficient or effective.  Objectives of software measurement:-  (i)Manager’s perspective:-  (a)What does each process cost?  (b)How productive is the staff?  (c)How good is the code being with the product?  (d)Will the user be satisfied with the product?  (e)How can we improve?  (ii)Engineer’s perspective:-  (a)Are the requirements testable?  (b)Have the found all the faults?  (c)Have we met our product or process goals?  (d)What will happen in future?  Measurement for understanding, control and improvement:-  -Measurement help us to understand what is happening during the development or maintenance.  -Measurement allows us to control what is happening on our projects.  -Measurement encourages us to improve our process and products.	10
Explain meaningfulness in measurement	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement lets us understand the information about attributes of entities.  Measurement in everyday life:-  -Measurement is used in economics to determine price of the products in the market.  -Measurement in weather system are used to predict the weather.  -Measurement in radar system enables us to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose and determine what disease a patient is suffering from.  Measurement making the things measurable:-  -Measuring makes not measurable things measurable.  -Measuring the unmeasurable helps to understand the particular entities and attributes, it also helps in making engineering more powerful.  Measurement in software engineering:-  -Software engineer describes the collection of techniques that apply on engineering approach to the construction and support of software product.  - Software engineers have various activities like managing, planning, casting, analyzing, specifying, designing, testing and maintaining.  Measurement is used in all activities, so that we can understand and control the activities.  Neglect of measurement in engineering:-  -The software cannot be measured therefore we fail to set measurable targets for our software products. For example, in earlier phase we promise that our product will be user-friendly, reliable and maintainable but once project is complete, we can’t tell if we have met our goals.  -The qualify of the component cost of software program cannot be understood well by us, therefore the overall cost of the project cannot be controlled by us if we are not measuring the relative cost of components.  -We do not qualify or predict the quality of product we produce, we can’t tell the user of product about reliability of product.  -We allow anecdote evidence to convince us to try yet another revolutionary new development technology, without doing careful controlled study to determine if the technology is efficient or effective.  Objectives of software measurement:-  (i)Manager’s perspective:-  (a)What does each process cost?  (b)How productive is the staff?  (c)How good is the code being with the product?  (d)Will the user be satisfied with the product?  (e)How can we improve?  (ii)Engineer’s perspective:-  (a)Are the requirements testable?  (b)Have the found all the faults?  (c)Have we met our product or process goals?  (d)What will happen in future?  Measurement for understanding, control and improvement:-  -Measurement help us to understand what is happening during the development or maintenance.  -Measurement allows us to control what is happening on our projects.  -Measurement encourages us to improve our process and products.	10
Explain the objectives for software measurement with the perspective of manager and engineer	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -Measurement captures information about attributes of entities.  -Entity is an object (such as person or room) or events (such as journey or testing phase of software) in the real world.  -An attribute is a feature or property of an entity (such as color of room, the cost of journey or elapsed time of testing phase).  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is used in economics to determine price and pay increases.  -Measurement in radar system enables to detect aircraft.  -Measurement is also used in medical system to help the doctors to diagnose specific disease.  -In such a way the products quality is measured and is priced according to it.  -software engineering describes the collection of techniques that apply an engineering approach to the construction and support of software product.  -Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance.  -Measurement is used in all above activities, so each activity is understood and controlled.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  d)Will the users be satisfied with the product?  e)How can we improve?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?  d)What will happen in future?    -Measurement help us to understand what is happening during development or maintenance.  -Measurement allow us to control what is happening on our projects.  -Measurement encourages us to improve our processes and products.	10
Explain the objectives for software measurement with the perspective of manager and engineer	-“Measurement is the process by which numbers or symbols are assigned to attributes of entities in the real world in such a way to describe then according to clearly defined rules.”  -With the help of measurement we can get the information about attributes of entities.  -Entity is an objects like as person or room or even events such as journey or testing phase of software in the real world.  -An attribute is a feature, quality or property of an entity such as color of room, the cost of journey or elapsed time of testing phase.  -In general there are two kinds of qualification:-  (i)Measurement is a direct qualification.  (ii) Calculation is indirect qualification, where we take measurement attribute whose value we are trying to understand.  -Measurement is also used in economics to determine prices of the products in the market.  -Measurement in radar system enables to detect aircraft as well as the submarines in water.  -Measurement is also used in the hospitals to help the doctors to  specify the disease the patient is suffering from.  -In such a way the products quality is measured and is priced according to it.  -Software engineering define the collection of techniques that apply an engineering approach to construct and support the software product.  -Software engineering includes various activities like managing, planning, costing, analyzing, specifying, designing, testing and maintenance.  -Measurement in software is used in all above activities, so each activity is understood and controlled.  Objectives for software measurement:-  (i)Managers perspective:  a)What does each process cast?  b)How productive is the staff?  c)How good is code being developed?  d)Will the users be satisfied with the product?  e)How can we improve?  (ii)Engineers perspective:  a)Are the requirements testable?  b)Have we found all the faults?  c)Have we met our products or process goals?  d)What will happen in future?    -Measurement help us to understand what is being done while the product is being developed or maintained.  -Measurement allow us to control what is happening on our projects.  -Measurement encourages us to improve our processes and products.	10
What is representational theory of measurement Explain in detail	There are many representational theory for measurement, some of them are as given below  (i)Empirical relation:-There are three types of Empirical relation depending upon the relation we define either on single element (entity) of a set or on collection of elements.  (a)Unary relation:-We define Empirical relation on individual (single) element or entity.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation:- We define relation between more than two entities.  For example, if there are three instances as given below  A is taller than B.  A is tallest, B is tall, C is not tall.  C is taller than A when sitting on B’s shoulder.  Given any two people, x and y, we can conclude that      x  is taller than y or     y is taller than x.  Therefore we can say that “taller than” is a Empirical relation (binary) for height.  Similarly “is tall” is a unary Empirical relation.  (ii)Rules of mapping:-  -Real world is the domain of mapping and mathematical world is range of mapping.  -When we have map the attribute of entity from real world to mathematical world, we have many choices for mapping and range. i.e.:-We can use real numbers, integers or non-numeric symbols in mathematical system.  -Mapping may be different depending upon conventions we adopt.  -Measures must specify domain, range as well as rules of mapping. For example, If we want to measure the height of person then we measure height in inches, centimeters or feet’s. While measuring height we use different conventions like measuring height when person is standing or sitting, wearing shoes or not.  (iii)Representation condition of measurement:-  -Representation condition states that a measurement mapping M must map entities into numbers and Empirical relations into numerical relation (mathematical relation) in such a way that Empirical relations are preserved and are preserved by mathematical relations.  -Here Empirical relation “taller than” is mapped to the numerical relation “>”.  -We say that, A is taller than B if and only if M(A)>M(B).  -This statement implies that whenever A is taller than B, then M(A) must be a bigger number than M(B).  -We can say that A is higher number than B only if A is taller than B. For Empirical relation (binary) “taller than”, we have numerical relation A>B.  For unempirical relation, “is tall”, we have numerical relation A>70.  Then, representation condition requires that for any measure M   A is tall if and only if M(A)>70.	10
What is representational theory of measurement Explain in detail	There are several types of representational theory for measurement and some of them are given below  (i)Empirical relation:-In Empirical relation there are three types of relations depending on the relation we define on single element of a set or on collection  of elements.  (a)Unary relation:-We define the Empirical relation on single entity.  (b)Binary relation:-We define Empirical relation between exactly two entities.  (c)Ternary relation :- We define relation between more than two entities. For example, if there are three instances as given below  A is taller than B.  A is tallest, B is tall, C is not tall.  C is taller than A when sitting on B’s shoulder.  Given any two people, x and y, we can say that   x  is taller than y or  y is taller than x.  Therefore we can say that “taller than” is a Empirical relation (binary) for height.  Similarly “is tall” is a unary Empirical relation.  (ii) Rules of mapping :-  -Real world is a domain of mapping and mathematical words is range of mapping.  -When the mapping of the attribute of entity from real world to the mathematical world, we have several types of mapping and range.  i.e.:-We can use the real numbers, integers or non-numeric symbols in mathematical system.  -Mapping could be different depending on the conventions we adopt.  -Measures should specify domain, range as well as rules of mapping . For example, height in inches, centimeters or feet. While measuring height we use different accord like measuring height when a person is standing or sitting , wearing shoes or not.  (iii)Representation condition of measurement:-  -Representation condition states that a measurement mapping M should map entities in numbers and Empirical relations in numerical relation in such a way that the Empirical relations are maintained and are maintained by the mathematical relations.  -Here, In the above example of height of two people, the “taller than” is mapped to the numerical relation “>”.  -We can say that the person A is taller than the person B if and only if M(A)>(B).  -This statement implies that whenever the person A is taller than person B, then M(A) must be a bigger number than M(B).  -If the person A is taller than the person B, we can say that A is a higher number than B. For Empirical relation “taller than”, we get the numerical relation A>B.  For unempirical relation, “is tall”, we have numerical relation A>70.  Then, representation condition requires that for any measure M   A is tall if and only if M(A)>70.	10
what is software metrics Explain scope of software metrics in detail	Software metrics is a term that provides many activities, all of which involves some degree of software measurement:-  (i)Cost and effort estimation:-  -We have to use cost and effort estimation models to predict the cost of project during earlier phases of software development life cycle.  -for example Boehm’s Cocomo model, Putnam’s SLIM model,  Regression based model, etc.  (ii)Productivity models and measures:-  -There are several measures and models or assessing the staff productivity during software process and indifferent environments.  -The productivity is a function of value and cast; each is then decomposed into other aspects expressed in measurable form.  (iii)Data collection:-  -The quality or any measurement program is clearly dependent on careful data collection. But collecting data is easier to said than done when data must be collected across a diverse set of projects.  -Data collection must be consistent and complete. It must be planned and executed in a careful and sensitive manner.  -Data collection is also essential for scientific investigation of relationships and trends.  (iv)Quality Models and measures:-  -Quality models such as Bohem’s quality model and MaCall quality model are used with productivity models.  -These models are constructed in a tree like fashion where upper branches holds high level quality factors of software product such as reliability, usability, etc.  -Each quality factor is composed of low level criteria such as structure, traceability, etc.  -Criteria is easier to understand and measure than factors.  (v)Reliability models:-  -Reliability is one of the most important factor in quality model but we need to predict and measure reliability of product.  -Reliability indicates probability of failure free operation.  -We have several parametric reliability growth models to increase the reliability of product. For example, Moronda, Littlewood, Littlewood vorall and Non Homogenous poisons process (NHPP) model.  (vi)Performance evaluation and models:-  -Performance is one of the most aspect of quality.  -Performance evaluation includes characteristics such as response time and completion rates.  -Performance evaluation covers internal working  of system including efficiency of complexity of algorithm.  (vii)Structure and complexity :-  -We measure structural attributes of representation of software which are available in advanced of execution.  -These structural attributes are used to predict which part of system are less reliable, more difficult to test or requires more maintenance than others.  (vii)Management by metrix:-  -Measurement if most important part of software project management.  -Customers and developers uses measurement-based charts and graphs to help them to track if the project is on track.  -Many organization defines a set of measurement and reporting methods, so that project can be compared and contrasted.  -Measurement tells the customer and developer how the project is doing.  (viii)Evaluation of Methods and tools:-  -Many organization uses new methods and tools to make product more better and cheaper.  -Organization performs experiments, runs case studies or administrator surveys to help them decide whether a method or tool is likely to make positive difference in their particular situations.  -This evaluation depends upon good experimental design, proper identification of factors that affect outcome and appropriate measurements of factor attributes.  (ix)Capabilities Maturity Assessment:-  -In 1980, Vs Software Engineering Institute (SEI) proposed a Capability Maturity model to measure a contractor’s ability to develop quality software for US government.  -CMM is the updated version  of process maturity model.  -This model assessed any different attributes of development including use of tools, standard practices and more.  -With this model, contractor needs to answered 100 questions to determine contractor’s actual practices. The result grade was reported as a five level ordinal scale from “1” to “5”.	10
what is software metrics Explain scope of software metrics in detail	There are many types of software metrics, Software metrics are used to measure the quality of the software.  (i)Cost effort estimation:-  -In the cost effort estimation, we use the models to predict the cost of the project before starting the work of developing the software life cycle.  -Examples:- Bohem’s Cocomo model, Putnam’s model, Regression based model, etc.  (ii) Productivity models and measures:-  -There are many measures and models or evaluating the staff productivity at the time of process and common environments.  -The productivity is a function of value and cost; they are later divided into other aspects which can be measured.  (iii)Data collection:-  -The quality of the measurement program depend on how carefully the data is collected. Collecting the data is not an easy task when data to be collected is diverse set of projects.  -Data collection must be steady and complete. It should be planned as well as executed in a careful and sensitive manner.  (iv)Quality models and measures:-  -Quality models like the Bohem’s quality model and MaCall quality model are used with productivity models.  -These Models are constructed in a tree like fashion where the branches on the upper side contain the high level quality factors of the software product such as reliability, usability, user friendliness, etc.  -Each of the quality factor contains the low level criteria such as structure, traceability, etc.  -These low level criteria are easy to understand as  well as easy to measure the factors.  (v)Reliability models:-  -Reliability is one of the most important component of quality model but we need to predict and measure the reliability of the product.  -Reliability shows probability of the failure free operation.  -There are several parameters for growth of the reliability of the models to increase the reliability of the product. For example: Moronda, Littlewood, NHPP model.  (vi)Performance evaluation and models:-  -Performance is one of the most important feature of quality.  -The evaluation of the performance includes characteristics such as response time and completion rates.  -The evaluation of the performance covers the internal working of system as well as efficiency of the complexity of the algorithms.  (vii)Structure and complexity:-  -The structural attributes of representation of software are measured which are available in advanced of execution.  -Structure and complexity attributes are used to predict the part of the system which are less reliable, difficult to test or which requires more maintenance than the other parts of the system.  (viii)Management by metrics:-  -Management is an important part of software project management.  -Customers as well as the developers use charts and graphs to measure the progress and help them to keep track of the project.  -Measurement shows the customers and the developers how the project is doing.  (ix) Evaluation of methods and tools:-  -New methods and tools are used by many organization to make the product more cheaper.  -The organizations perform experiments where they run case studies or administrator surveys to help them decide if a tool or a method is making a positive effect in their particular situation.  -This evaluation is dependent upon good experimental design, identifying the factors that can affect the outcome and correct measurement if factor attributes.  (x)Capabilities maturity assessment:-  -Capability Maturity Model (CMM) is an updated version of the process maturity model.  -To use this model, the contractor have to answer 100 questions to decide the contractor’s actual practices. The result grade was reported on the ordinal scale having five level i.e.: “1” to “5”.	10